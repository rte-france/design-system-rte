/*! For license information please see main.cea2cbdf.iframe.bundle.js.LICENSE.txt */
(self.webpackChunk_design_system_rte_angular_builder=self.webpackChunk_design_system_rte_angular_builder||[]).push([[38792],{"../../node_modules/@storybook/instrumenter/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/@storybook/instrumenter/dist sync recursive",module.exports=webpackEmptyContext},"../../node_modules/@storybook/test/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/@storybook/test/dist sync recursive",module.exports=webpackEmptyContext},"../../node_modules/memoizerific sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/memoizerific sync recursive",module.exports=webpackEmptyContext},"./.storybook/main.scss?ngGlobalStyle":()=>{},"./.storybook/preview.scss?ngGlobalStyle":()=>{},"../core/design-tokens/main.scss?ngGlobalStyle":()=>{},"./storybook-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var external_STORYBOOK_MODULE_CHANNELS_=__webpack_require__("storybook/internal/channels"),csf=__webpack_require__("../../node_modules/@storybook/core/dist/csf/index.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _regeneratorValues(e){if(null!=e){var t=e["function"==typeof Symbol&&Symbol.iterator||"@@iterator"],r=0;if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length))return{next:function next(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}}}throw new TypeError(_typeof(e)+" is not iterable")}function _regenerator(){var e,t,r="function"==typeof Symbol?Symbol:{},n=r.iterator||"@@iterator",o=r.toStringTag||"@@toStringTag";function i(r,n,o,i){var c=n&&n.prototype instanceof Generator?n:Generator,u=Object.create(c.prototype);return _regeneratorDefine2(u,"_invoke",function(r,n,o){var i,c,u,f=0,p=o||[],y=!1,G={p:0,n:0,v:e,a:d,f:d.bind(e,4),d:function d(t,r){return i=t,c=0,u=e,G.n=r,a}};function d(r,n){for(c=r,u=n,t=0;!y&&f&&!o&&t<p.length;t++){var o,i=p[t],d=G.p,l=i[2];r>3?(o=l===n)&&(u=i[(c=i[4])?5:(c=3,3)],i[4]=i[5]=e):i[0]<=d&&((o=r<2&&d<i[1])?(c=0,G.v=n,G.n=i[1]):d<l&&(o=r<3||i[0]>n||n>l)&&(i[4]=r,i[5]=n,G.n=l,c=0))}if(o||r>1)return a;throw y=!0,n}return function(o,p,l){if(f>1)throw TypeError("Generator is already running");for(y&&1===p&&d(p,l),c=p,u=l;(t=c<2?e:u)||!y;){i||(c?c<3?(c>1&&(G.n=-1),d(c,u)):G.n=u:G.v=u);try{if(f=2,i){if(c||(o="next"),t=i[o]){if(!(t=t.call(i,u)))throw TypeError("iterator result is not an object");if(!t.done)return t;u=t.value,c<2&&(c=0)}else 1===c&&(t=i.return)&&t.call(i),c<2&&(u=TypeError("The iterator does not provide a '"+o+"' method"),c=1);i=e}else if((t=(y=G.n<0)?u:r.call(n,G))!==a)break}catch(t){i=e,c=1,u=t}finally{f=1}}return{value:t,done:y}}}(r,o,i),!0),u}var a={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}t=Object.getPrototypeOf;var c=[][n]?t(t([][n]())):(_regeneratorDefine2(t={},n,function(){return this}),t),u=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(c);function f(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,GeneratorFunctionPrototype):(e.__proto__=GeneratorFunctionPrototype,_regeneratorDefine2(e,o,"GeneratorFunction")),e.prototype=Object.create(u),e}return GeneratorFunction.prototype=GeneratorFunctionPrototype,_regeneratorDefine2(u,"constructor",GeneratorFunctionPrototype),_regeneratorDefine2(GeneratorFunctionPrototype,"constructor",GeneratorFunction),GeneratorFunction.displayName="GeneratorFunction",_regeneratorDefine2(GeneratorFunctionPrototype,o,"GeneratorFunction"),_regeneratorDefine2(u),_regeneratorDefine2(u,o,"Generator"),_regeneratorDefine2(u,n,function(){return this}),_regeneratorDefine2(u,"toString",function(){return"[object Generator]"}),(_regenerator=function _regenerator(){return{w:i,m:f}})()}function _regeneratorDefine2(e,r,n,t){var i=Object.defineProperty;try{i({},"",{})}catch(e){i=0}_regeneratorDefine2=function _regeneratorDefine(e,r,n,t){if(r)i?i(e,r,{value:n,enumerable:!t,configurable:!t,writable:!t}):e[r]=n;else{var o=function o(r,n){_regeneratorDefine2(e,r,function(e){return this._invoke(r,n,e)})};o("next",0),o("throw",1),o("return",2)}},_regeneratorDefine2(e,r,n,t)}function asyncGeneratorStep(n,t,e,r,o,a,c){try{var i=n[a](c),u=i.value}catch(n){return void e(n)}i.done?t(u):Promise.resolve(u).then(r,o)}function _asyncToGenerator(n){return function(){var t=this,e=arguments;return new Promise(function(r,o){var a=n.apply(t,e);function _next(n){asyncGeneratorStep(a,r,o,_next,_throw,"next",n)}function _throw(n){asyncGeneratorStep(a,r,o,_next,_throw,"throw",n)}_next(void 0)})}}var pipeline=function pipeline(x){return x()},importers=[function(){var _ref=_asyncToGenerator(_regenerator().m(function _callee(path){var pathRemainder;return _regenerator().w(function(_context){for(;;)switch(_context.n){case 0:if(/^\.[\\/](?:projects\/ds-rte-lib\/src(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.mdx)$/.exec(path)){_context.n=1;break}return _context.a(2);case 1:return pathRemainder=path.substring(26),_context.a(2,__webpack_require__("./projects/ds-rte-lib/src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/projects\\/ds-rte-lib\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$")("./"+pathRemainder))}},_callee)}));return function(_x){return _ref.apply(this,arguments)}}(),function(){var _ref2=_asyncToGenerator(_regenerator().m(function _callee2(path){var pathRemainder;return _regenerator().w(function(_context2){for(;;)switch(_context2.n){case 0:if(/^\.[\\/](?:projects\/ds-rte-lib\/src(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.stories\.(js|jsx|mjs|ts|tsx))$/.exec(path)){_context2.n=1;break}return _context2.a(2);case 1:return pathRemainder=path.substring(26),_context2.a(2,__webpack_require__("./projects/ds-rte-lib/src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/projects\\/ds-rte-lib\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cmjs%7Cts%7Ctsx))$")("./"+pathRemainder))}},_callee2)}));return function(_x2){return _ref2.apply(this,arguments)}}()];function _importFn(){return(_importFn=_asyncToGenerator(_regenerator().m(function _callee3(path){var _loop,_ret,i;return _regenerator().w(function(_context4){for(;;)switch(_context4.n){case 0:_loop=_regenerator().m(function _loop(i){var moduleExports;return _regenerator().w(function(_context3){for(;;)switch(_context3.n){case 0:return _context3.n=1,pipeline(function(){return importers[i](path)});case 1:if(!(moduleExports=_context3.v)){_context3.n=2;break}return _context3.a(2,{v:moduleExports});case 2:return _context3.a(2)}},_loop)}),i=0;case 1:if(!(i<importers.length)){_context4.n=4;break}return _context4.d(_regeneratorValues(_loop(i)),2);case 2:if(!(_ret=_context4.v)){_context4.n=3;break}return _context4.a(2,_ret.v);case 3:i++,_context4.n=1;break;case 4:return _context4.a(2)}},_callee3)}))).apply(this,arguments)}var channel=(0,external_STORYBOOK_MODULE_CHANNELS_.createBrowserChannel)({page:"preview"});external_STORYBOOK_MODULE_PREVIEW_API_.addons.setChannel(channel),"DEVELOPMENT"===external_STORYBOOK_MODULE_GLOBAL_.global.CONFIG_TYPE&&(window.__STORYBOOK_SERVER_CHANNEL__=channel);var preview=new external_STORYBOOK_MODULE_PREVIEW_API_.PreviewWeb(function importFn(_x3){return _importFn.apply(this,arguments)},function getProjectAnnotations(){var _previewAnnotations,previewAnnotations=[__webpack_require__("./node_modules/@storybook/angular/dist/client/preview-prod.js"),__webpack_require__("./node_modules/@storybook/angular/dist/client/docs/config.js"),__webpack_require__("./node_modules/@storybook/angular/dist/client/config.js"),__webpack_require__("../../node_modules/@storybook/addon-essentials/dist/actions/preview.mjs"),__webpack_require__("../../node_modules/@storybook/addon-essentials/dist/docs/preview.mjs"),__webpack_require__("../../node_modules/@storybook/addon-essentials/dist/backgrounds/preview.mjs"),__webpack_require__("../../node_modules/@storybook/addon-essentials/dist/viewport/preview.mjs"),__webpack_require__("../../node_modules/@storybook/addon-essentials/dist/measure/preview.mjs"),__webpack_require__("../../node_modules/@storybook/addon-essentials/dist/outline/preview.mjs"),__webpack_require__("../../node_modules/@storybook/addon-essentials/dist/highlight/preview.mjs"),__webpack_require__("../../node_modules/@storybook/addon-interactions/preview.js"),__webpack_require__("../../node_modules/@storybook/addon-a11y/preview.js"),__webpack_require__("./.storybook/preview.ts")],userPreview=null===(_previewAnnotations=previewAnnotations[previewAnnotations.length-1])||void 0===_previewAnnotations?void 0:_previewAnnotations.default;return(0,csf.bU)(userPreview)?userPreview.composed:(0,external_STORYBOOK_MODULE_PREVIEW_API_.composeConfigs)(previewAnnotations)});window.__STORYBOOK_PREVIEW__=preview,window.__STORYBOOK_STORY_STORE__=preview.storyStore,window.__STORYBOOK_ADDONS_CHANNEL__=channel},"./.storybook/preview.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>_storybook_preview});var http=__webpack_require__("../../node_modules/@angular/common/fesm2022/http.mjs"),core=__webpack_require__("../../node_modules/@angular/core/fesm2022/core.mjs"),angular=__webpack_require__("../../node_modules/@storybook/addon-docs/angular/index.js"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api");const documentation_namespaceObject=JSON.parse('{"pipes":[],"interfaces":[{"name":"TooltipBounds","id":"interface-TooltipBounds-1d1d1056aeb6ae473a33447a6b086248f439b4c81eba9305622522218b3f26dfca5e42dd0851bc35071f42c3479cbe2c3bde7b2e156ff079735fbc6c93b96829","file":"projects/ds-rte-lib/src/lib/components/tooltip/tooltip.directive.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import {\\n  ChangeDetectorRef,\\n  ComponentRef,\\n  Directive,\\n  ElementRef,\\n  HostListener,\\n  inject,\\n  input,\\n  Renderer2,\\n  ViewContainerRef,\\n} from \\"@angular/core\\";\\nimport { getAutoPlacement } from \\"@design-system-rte/core/components/utils/auto-placement\\";\\n\\nimport { TooltipComponent } from \\"./tooltip.component\\";\\n\\ninterface TooltipXBound {\\n  position: \\"left\\" | \\"right\\";\\n  offset: number;\\n}\\n\\ninterface TooltipYBound {\\n  position: \\"top\\" | \\"bottom\\";\\n  offset: number;\\n}\\n\\ninterface TooltipBounds {\\n  x: TooltipXBound;\\n  y: TooltipYBound;\\n}\\n\\nconst TOOLTIP_GAP = 8;\\n\\n@Directive({\\n  selector: \\"[rteTooltip]\\",\\n  standalone: true,\\n})\\nexport class TooltipDirective {\\n  readonly rteTooltip = input.required<string>();\\n  readonly rteTooltipPosition = input(\\"auto\\");\\n  readonly rteTooltipAlignment = input(\\"center\\");\\n  readonly rteTooltipArrow = input(true);\\n\\n  private tooltipRef: ComponentRef<TooltipComponent> | null = null;\\n  private hostElement: HTMLElement;\\n\\n  private elementRef = inject(ElementRef);\\n  private viewContainerRef = inject(ViewContainerRef);\\n  private renderer = inject(Renderer2);\\n  private cdr = inject(ChangeDetectorRef);\\n\\n  @HostListener(\\"mouseenter\\")\\n  onMouseEnter(): void {\\n    this.showTooltip();\\n  }\\n\\n  @HostListener(\\"mouseleave\\")\\n  onMouseLeave(): void {\\n    this.hideTooltip();\\n  }\\n\\n  @HostListener(\\"focus\\")\\n  onFocus(): void {\\n    this.showTooltip();\\n  }\\n\\n  @HostListener(\\"blur\\")\\n  onBlur(): void {\\n    this.hideTooltip();\\n  }\\n\\n  constructor() {\\n    this.hostElement = this.elementRef.nativeElement;\\n    this.hostElement.setAttribute(\\"tabindex\\", \\"0\\");\\n  }\\n\\n  showTooltip(): void {\\n    if (this.tooltipRef) {\\n      this.tooltipRef.destroy();\\n    }\\n\\n    this.tooltipRef = this.viewContainerRef.createComponent(TooltipComponent);\\n    this.assignDirectiveToComponent();\\n    this.appendComponentToHost();\\n    this.cdr.detectChanges();\\n\\n    if (this.tooltipRef) {\\n      const tooltipElement = this.tooltipRef.location.nativeElement;\\n      this.renderer.setStyle(tooltipElement, \\"opacity\\", \\"0\\");\\n      this.positionTooltip();\\n\\n      this.renderer.setStyle(tooltipElement, \\"opacity\\", \\"1\\");\\n    }\\n  }\\n\\n  private assignDirectiveToComponent(): void {\\n    if (this.tooltipRef) {\\n      const tooltipElement = this.tooltipRef.location.nativeElement;\\n      const position =\\n        this.rteTooltipPosition() === \\"auto\\"\\n          ? getAutoPlacement(this.hostElement, tooltipElement, \\"top\\")\\n          : this.rteTooltipPosition();\\n\\n      this.tooltipRef.setInput(\\"label\\", this.rteTooltip());\\n      this.tooltipRef.setInput(\\"position\\", position);\\n      this.tooltipRef.setInput(\\"alignment\\", this.rteTooltipAlignment());\\n      this.tooltipRef.setInput(\\"arrow\\", this.rteTooltipArrow());\\n    }\\n  }\\n\\n  private appendComponentToHost(): void {\\n    if (this.tooltipRef) {\\n      this.renderer.appendChild(this.elementRef.nativeElement, this.tooltipRef.location.nativeElement);\\n    }\\n  }\\n\\n  private positionTooltip(): void {\\n    if (this.tooltipRef) {\\n      const tooltipElement = this.tooltipRef.location.nativeElement;\\n\\n      const bounds = this.getTooltipPosition(this.hostElement, this.tooltipRef);\\n\\n      this.renderer.setStyle(this.hostElement, \\"position\\", \\"relative\\");\\n\\n      this.renderer.setStyle(tooltipElement, bounds.x.position, `${bounds.x.offset}px`);\\n      this.renderer.setStyle(tooltipElement, bounds.y.position, `${bounds.y.offset}px`);\\n    }\\n  }\\n\\n  private getTooltipPosition(host: HTMLElement, tooltip: ComponentRef<TooltipComponent>): TooltipBounds {\\n    return {\\n      x: this.getTooltipXBound(host, tooltip),\\n      y: this.getTooltipYBound(host, tooltip),\\n    };\\n  }\\n\\n  private getTooltipXBound(host: HTMLElement, tooltip: ComponentRef<TooltipComponent>): TooltipXBound {\\n    return {\\n      position: tooltip.instance.position() === \\"right\\" ? \\"right\\" : \\"left\\",\\n      offset: this.getTooltipXOffset(host, tooltip),\\n    };\\n  }\\n\\n  private getTooltipXOffset(host: HTMLElement, tooltip: ComponentRef<TooltipComponent>): number {\\n    const hostRect = host.getBoundingClientRect();\\n    if (tooltip.instance.position() === \\"left\\") {\\n      return -tooltip.location.nativeElement.querySelector(\\".tooltip\\").offsetWidth - TOOLTIP_GAP;\\n    }\\n    if (tooltip.instance.position() === \\"right\\") {\\n      return -TOOLTIP_GAP;\\n    }\\n    return hostRect.width / 2;\\n  }\\n\\n  private getTooltipYBound(host: HTMLElement, tooltip: ComponentRef<TooltipComponent>): TooltipYBound {\\n    return {\\n      position: tooltip.instance.position() === \\"bottom\\" ? \\"bottom\\" : \\"top\\",\\n      offset: this.getTooltipYOffset(host, tooltip),\\n    };\\n  }\\n\\n  private getTooltipYOffset(host: HTMLElement, tooltip: ComponentRef<TooltipComponent>): number {\\n    const hostRect = host.getBoundingClientRect();\\n\\n    if (tooltip.instance.position() === \\"top\\") {\\n      return -tooltip.location.nativeElement.querySelector(\\".tooltip\\").offsetHeight - TOOLTIP_GAP;\\n    }\\n    if (tooltip.instance.position() === \\"bottom\\") {\\n      return -TOOLTIP_GAP;\\n    }\\n    return hostRect.height / 2;\\n  }\\n\\n  private hideTooltip(): void {\\n    if (this.tooltipRef) {\\n      const tooltipElement = this.tooltipRef.location.nativeElement;\\n\\n      this.renderer.setStyle(tooltipElement, \\"opacity\\", \\"0\\");\\n\\n      setTimeout(() => {\\n        if (this.tooltipRef) {\\n          this.tooltipRef.destroy();\\n          this.tooltipRef = null;\\n        }\\n      }, 200);\\n    }\\n  }\\n}\\n","properties":[{"name":"x","deprecated":false,"deprecationMessage":"","type":"TooltipXBound","indexKey":"","optional":false,"description":"","line":27},{"name":"y","deprecated":false,"deprecationMessage":"","type":"TooltipYBound","indexKey":"","optional":false,"description":"","line":28}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"TooltipXBound","id":"interface-TooltipXBound-1d1d1056aeb6ae473a33447a6b086248f439b4c81eba9305622522218b3f26dfca5e42dd0851bc35071f42c3479cbe2c3bde7b2e156ff079735fbc6c93b96829","file":"projects/ds-rte-lib/src/lib/components/tooltip/tooltip.directive.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import {\\n  ChangeDetectorRef,\\n  ComponentRef,\\n  Directive,\\n  ElementRef,\\n  HostListener,\\n  inject,\\n  input,\\n  Renderer2,\\n  ViewContainerRef,\\n} from \\"@angular/core\\";\\nimport { getAutoPlacement } from \\"@design-system-rte/core/components/utils/auto-placement\\";\\n\\nimport { TooltipComponent } from \\"./tooltip.component\\";\\n\\ninterface TooltipXBound {\\n  position: \\"left\\" | \\"right\\";\\n  offset: number;\\n}\\n\\ninterface TooltipYBound {\\n  position: \\"top\\" | \\"bottom\\";\\n  offset: number;\\n}\\n\\ninterface TooltipBounds {\\n  x: TooltipXBound;\\n  y: TooltipYBound;\\n}\\n\\nconst TOOLTIP_GAP = 8;\\n\\n@Directive({\\n  selector: \\"[rteTooltip]\\",\\n  standalone: true,\\n})\\nexport class TooltipDirective {\\n  readonly rteTooltip = input.required<string>();\\n  readonly rteTooltipPosition = input(\\"auto\\");\\n  readonly rteTooltipAlignment = input(\\"center\\");\\n  readonly rteTooltipArrow = input(true);\\n\\n  private tooltipRef: ComponentRef<TooltipComponent> | null = null;\\n  private hostElement: HTMLElement;\\n\\n  private elementRef = inject(ElementRef);\\n  private viewContainerRef = inject(ViewContainerRef);\\n  private renderer = inject(Renderer2);\\n  private cdr = inject(ChangeDetectorRef);\\n\\n  @HostListener(\\"mouseenter\\")\\n  onMouseEnter(): void {\\n    this.showTooltip();\\n  }\\n\\n  @HostListener(\\"mouseleave\\")\\n  onMouseLeave(): void {\\n    this.hideTooltip();\\n  }\\n\\n  @HostListener(\\"focus\\")\\n  onFocus(): void {\\n    this.showTooltip();\\n  }\\n\\n  @HostListener(\\"blur\\")\\n  onBlur(): void {\\n    this.hideTooltip();\\n  }\\n\\n  constructor() {\\n    this.hostElement = this.elementRef.nativeElement;\\n    this.hostElement.setAttribute(\\"tabindex\\", \\"0\\");\\n  }\\n\\n  showTooltip(): void {\\n    if (this.tooltipRef) {\\n      this.tooltipRef.destroy();\\n    }\\n\\n    this.tooltipRef = this.viewContainerRef.createComponent(TooltipComponent);\\n    this.assignDirectiveToComponent();\\n    this.appendComponentToHost();\\n    this.cdr.detectChanges();\\n\\n    if (this.tooltipRef) {\\n      const tooltipElement = this.tooltipRef.location.nativeElement;\\n      this.renderer.setStyle(tooltipElement, \\"opacity\\", \\"0\\");\\n      this.positionTooltip();\\n\\n      this.renderer.setStyle(tooltipElement, \\"opacity\\", \\"1\\");\\n    }\\n  }\\n\\n  private assignDirectiveToComponent(): void {\\n    if (this.tooltipRef) {\\n      const tooltipElement = this.tooltipRef.location.nativeElement;\\n      const position =\\n        this.rteTooltipPosition() === \\"auto\\"\\n          ? getAutoPlacement(this.hostElement, tooltipElement, \\"top\\")\\n          : this.rteTooltipPosition();\\n\\n      this.tooltipRef.setInput(\\"label\\", this.rteTooltip());\\n      this.tooltipRef.setInput(\\"position\\", position);\\n      this.tooltipRef.setInput(\\"alignment\\", this.rteTooltipAlignment());\\n      this.tooltipRef.setInput(\\"arrow\\", this.rteTooltipArrow());\\n    }\\n  }\\n\\n  private appendComponentToHost(): void {\\n    if (this.tooltipRef) {\\n      this.renderer.appendChild(this.elementRef.nativeElement, this.tooltipRef.location.nativeElement);\\n    }\\n  }\\n\\n  private positionTooltip(): void {\\n    if (this.tooltipRef) {\\n      const tooltipElement = this.tooltipRef.location.nativeElement;\\n\\n      const bounds = this.getTooltipPosition(this.hostElement, this.tooltipRef);\\n\\n      this.renderer.setStyle(this.hostElement, \\"position\\", \\"relative\\");\\n\\n      this.renderer.setStyle(tooltipElement, bounds.x.position, `${bounds.x.offset}px`);\\n      this.renderer.setStyle(tooltipElement, bounds.y.position, `${bounds.y.offset}px`);\\n    }\\n  }\\n\\n  private getTooltipPosition(host: HTMLElement, tooltip: ComponentRef<TooltipComponent>): TooltipBounds {\\n    return {\\n      x: this.getTooltipXBound(host, tooltip),\\n      y: this.getTooltipYBound(host, tooltip),\\n    };\\n  }\\n\\n  private getTooltipXBound(host: HTMLElement, tooltip: ComponentRef<TooltipComponent>): TooltipXBound {\\n    return {\\n      position: tooltip.instance.position() === \\"right\\" ? \\"right\\" : \\"left\\",\\n      offset: this.getTooltipXOffset(host, tooltip),\\n    };\\n  }\\n\\n  private getTooltipXOffset(host: HTMLElement, tooltip: ComponentRef<TooltipComponent>): number {\\n    const hostRect = host.getBoundingClientRect();\\n    if (tooltip.instance.position() === \\"left\\") {\\n      return -tooltip.location.nativeElement.querySelector(\\".tooltip\\").offsetWidth - TOOLTIP_GAP;\\n    }\\n    if (tooltip.instance.position() === \\"right\\") {\\n      return -TOOLTIP_GAP;\\n    }\\n    return hostRect.width / 2;\\n  }\\n\\n  private getTooltipYBound(host: HTMLElement, tooltip: ComponentRef<TooltipComponent>): TooltipYBound {\\n    return {\\n      position: tooltip.instance.position() === \\"bottom\\" ? \\"bottom\\" : \\"top\\",\\n      offset: this.getTooltipYOffset(host, tooltip),\\n    };\\n  }\\n\\n  private getTooltipYOffset(host: HTMLElement, tooltip: ComponentRef<TooltipComponent>): number {\\n    const hostRect = host.getBoundingClientRect();\\n\\n    if (tooltip.instance.position() === \\"top\\") {\\n      return -tooltip.location.nativeElement.querySelector(\\".tooltip\\").offsetHeight - TOOLTIP_GAP;\\n    }\\n    if (tooltip.instance.position() === \\"bottom\\") {\\n      return -TOOLTIP_GAP;\\n    }\\n    return hostRect.height / 2;\\n  }\\n\\n  private hideTooltip(): void {\\n    if (this.tooltipRef) {\\n      const tooltipElement = this.tooltipRef.location.nativeElement;\\n\\n      this.renderer.setStyle(tooltipElement, \\"opacity\\", \\"0\\");\\n\\n      setTimeout(() => {\\n        if (this.tooltipRef) {\\n          this.tooltipRef.destroy();\\n          this.tooltipRef = null;\\n        }\\n      }, 200);\\n    }\\n  }\\n}\\n","properties":[{"name":"offset","deprecated":false,"deprecationMessage":"","type":"number","indexKey":"","optional":false,"description":"","line":18},{"name":"position","deprecated":false,"deprecationMessage":"","type":"\\"left\\" | \\"right\\"","indexKey":"","optional":false,"description":"","line":17}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"TooltipYBound","id":"interface-TooltipYBound-1d1d1056aeb6ae473a33447a6b086248f439b4c81eba9305622522218b3f26dfca5e42dd0851bc35071f42c3479cbe2c3bde7b2e156ff079735fbc6c93b96829","file":"projects/ds-rte-lib/src/lib/components/tooltip/tooltip.directive.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import {\\n  ChangeDetectorRef,\\n  ComponentRef,\\n  Directive,\\n  ElementRef,\\n  HostListener,\\n  inject,\\n  input,\\n  Renderer2,\\n  ViewContainerRef,\\n} from \\"@angular/core\\";\\nimport { getAutoPlacement } from \\"@design-system-rte/core/components/utils/auto-placement\\";\\n\\nimport { TooltipComponent } from \\"./tooltip.component\\";\\n\\ninterface TooltipXBound {\\n  position: \\"left\\" | \\"right\\";\\n  offset: number;\\n}\\n\\ninterface TooltipYBound {\\n  position: \\"top\\" | \\"bottom\\";\\n  offset: number;\\n}\\n\\ninterface TooltipBounds {\\n  x: TooltipXBound;\\n  y: TooltipYBound;\\n}\\n\\nconst TOOLTIP_GAP = 8;\\n\\n@Directive({\\n  selector: \\"[rteTooltip]\\",\\n  standalone: true,\\n})\\nexport class TooltipDirective {\\n  readonly rteTooltip = input.required<string>();\\n  readonly rteTooltipPosition = input(\\"auto\\");\\n  readonly rteTooltipAlignment = input(\\"center\\");\\n  readonly rteTooltipArrow = input(true);\\n\\n  private tooltipRef: ComponentRef<TooltipComponent> | null = null;\\n  private hostElement: HTMLElement;\\n\\n  private elementRef = inject(ElementRef);\\n  private viewContainerRef = inject(ViewContainerRef);\\n  private renderer = inject(Renderer2);\\n  private cdr = inject(ChangeDetectorRef);\\n\\n  @HostListener(\\"mouseenter\\")\\n  onMouseEnter(): void {\\n    this.showTooltip();\\n  }\\n\\n  @HostListener(\\"mouseleave\\")\\n  onMouseLeave(): void {\\n    this.hideTooltip();\\n  }\\n\\n  @HostListener(\\"focus\\")\\n  onFocus(): void {\\n    this.showTooltip();\\n  }\\n\\n  @HostListener(\\"blur\\")\\n  onBlur(): void {\\n    this.hideTooltip();\\n  }\\n\\n  constructor() {\\n    this.hostElement = this.elementRef.nativeElement;\\n    this.hostElement.setAttribute(\\"tabindex\\", \\"0\\");\\n  }\\n\\n  showTooltip(): void {\\n    if (this.tooltipRef) {\\n      this.tooltipRef.destroy();\\n    }\\n\\n    this.tooltipRef = this.viewContainerRef.createComponent(TooltipComponent);\\n    this.assignDirectiveToComponent();\\n    this.appendComponentToHost();\\n    this.cdr.detectChanges();\\n\\n    if (this.tooltipRef) {\\n      const tooltipElement = this.tooltipRef.location.nativeElement;\\n      this.renderer.setStyle(tooltipElement, \\"opacity\\", \\"0\\");\\n      this.positionTooltip();\\n\\n      this.renderer.setStyle(tooltipElement, \\"opacity\\", \\"1\\");\\n    }\\n  }\\n\\n  private assignDirectiveToComponent(): void {\\n    if (this.tooltipRef) {\\n      const tooltipElement = this.tooltipRef.location.nativeElement;\\n      const position =\\n        this.rteTooltipPosition() === \\"auto\\"\\n          ? getAutoPlacement(this.hostElement, tooltipElement, \\"top\\")\\n          : this.rteTooltipPosition();\\n\\n      this.tooltipRef.setInput(\\"label\\", this.rteTooltip());\\n      this.tooltipRef.setInput(\\"position\\", position);\\n      this.tooltipRef.setInput(\\"alignment\\", this.rteTooltipAlignment());\\n      this.tooltipRef.setInput(\\"arrow\\", this.rteTooltipArrow());\\n    }\\n  }\\n\\n  private appendComponentToHost(): void {\\n    if (this.tooltipRef) {\\n      this.renderer.appendChild(this.elementRef.nativeElement, this.tooltipRef.location.nativeElement);\\n    }\\n  }\\n\\n  private positionTooltip(): void {\\n    if (this.tooltipRef) {\\n      const tooltipElement = this.tooltipRef.location.nativeElement;\\n\\n      const bounds = this.getTooltipPosition(this.hostElement, this.tooltipRef);\\n\\n      this.renderer.setStyle(this.hostElement, \\"position\\", \\"relative\\");\\n\\n      this.renderer.setStyle(tooltipElement, bounds.x.position, `${bounds.x.offset}px`);\\n      this.renderer.setStyle(tooltipElement, bounds.y.position, `${bounds.y.offset}px`);\\n    }\\n  }\\n\\n  private getTooltipPosition(host: HTMLElement, tooltip: ComponentRef<TooltipComponent>): TooltipBounds {\\n    return {\\n      x: this.getTooltipXBound(host, tooltip),\\n      y: this.getTooltipYBound(host, tooltip),\\n    };\\n  }\\n\\n  private getTooltipXBound(host: HTMLElement, tooltip: ComponentRef<TooltipComponent>): TooltipXBound {\\n    return {\\n      position: tooltip.instance.position() === \\"right\\" ? \\"right\\" : \\"left\\",\\n      offset: this.getTooltipXOffset(host, tooltip),\\n    };\\n  }\\n\\n  private getTooltipXOffset(host: HTMLElement, tooltip: ComponentRef<TooltipComponent>): number {\\n    const hostRect = host.getBoundingClientRect();\\n    if (tooltip.instance.position() === \\"left\\") {\\n      return -tooltip.location.nativeElement.querySelector(\\".tooltip\\").offsetWidth - TOOLTIP_GAP;\\n    }\\n    if (tooltip.instance.position() === \\"right\\") {\\n      return -TOOLTIP_GAP;\\n    }\\n    return hostRect.width / 2;\\n  }\\n\\n  private getTooltipYBound(host: HTMLElement, tooltip: ComponentRef<TooltipComponent>): TooltipYBound {\\n    return {\\n      position: tooltip.instance.position() === \\"bottom\\" ? \\"bottom\\" : \\"top\\",\\n      offset: this.getTooltipYOffset(host, tooltip),\\n    };\\n  }\\n\\n  private getTooltipYOffset(host: HTMLElement, tooltip: ComponentRef<TooltipComponent>): number {\\n    const hostRect = host.getBoundingClientRect();\\n\\n    if (tooltip.instance.position() === \\"top\\") {\\n      return -tooltip.location.nativeElement.querySelector(\\".tooltip\\").offsetHeight - TOOLTIP_GAP;\\n    }\\n    if (tooltip.instance.position() === \\"bottom\\") {\\n      return -TOOLTIP_GAP;\\n    }\\n    return hostRect.height / 2;\\n  }\\n\\n  private hideTooltip(): void {\\n    if (this.tooltipRef) {\\n      const tooltipElement = this.tooltipRef.location.nativeElement;\\n\\n      this.renderer.setStyle(tooltipElement, \\"opacity\\", \\"0\\");\\n\\n      setTimeout(() => {\\n        if (this.tooltipRef) {\\n          this.tooltipRef.destroy();\\n          this.tooltipRef = null;\\n        }\\n      }, 200);\\n    }\\n  }\\n}\\n","properties":[{"name":"offset","deprecated":false,"deprecationMessage":"","type":"number","indexKey":"","optional":false,"description":"","line":23},{"name":"position","deprecated":false,"deprecationMessage":"","type":"\\"top\\" | \\"bottom\\"","indexKey":"","optional":false,"description":"","line":22}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]}],"injectables":[{"name":"IconService","id":"injectable-IconService-d1382d80b6ec2bcffdf0f84a3de3b145bb2266a4c52613709efae54a92f178b30964fb453fcf4280a16ddef7b4fc6beef382d5a003856796b9b1eeccbe1969bb","file":"projects/ds-rte-lib/src/lib/components/icon/icon.service.ts","properties":[{"name":"http","defaultValue":"inject(HttpClient)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":12,"modifierKind":[123]}],"methods":[{"name":"getSvg","args":[{"name":"name","type":"RegularIconIdKey | TogglableIconIdKey","deprecated":false,"deprecationMessage":""},{"name":"appearance","type":"\\"outlined\\" | \\"filled\\"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<string>","typeParameters":[],"line":14,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"name","type":"RegularIconIdKey | TogglableIconIdKey","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"appearance","type":"\\"outlined\\" | \\"filled\\"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { HttpClient } from \\"@angular/common/http\\";\\nimport { inject, Injectable } from \\"@angular/core\\";\\nimport { Observable } from \\"rxjs\\";\\n\\nimport { RegularIcons, TogglableIcons } from \\"./icon-map\\";\\n\\nexport type RegularIconIdKey = keyof typeof RegularIcons;\\nexport type TogglableIconIdKey = keyof typeof TogglableIcons;\\n\\n@Injectable()\\nexport class IconService {\\n  private http = inject(HttpClient);\\n\\n  getSvg(name: RegularIconIdKey | TogglableIconIdKey, appearance: \\"outlined\\" | \\"filled\\"): Observable<string> {\\n    if (!this.http) {\\n      throw new Error(\\"HttpClient is not available\\");\\n    }\\n    const togglableIcon = TogglableIcons[name as TogglableIconIdKey];\\n\\n    if (togglableIcon) {\\n      const [outlinedIconName, filledIconName] = togglableIcon;\\n\\n      const iconName = appearance === \\"filled\\" ? filledIconName : outlinedIconName;\\n      return this.http.get(`assets/icons/${iconName}.svg`, { responseType: \\"text\\" });\\n    } else {\\n      const iconName = RegularIcons[name as RegularIconIdKey];\\n      if (!iconName) {\\n        throw new Error(`Icon ${name} not found`);\\n      }\\n      return this.http.get(`assets/icons/${iconName}.svg`, { responseType: \\"text\\" });\\n    }\\n  }\\n}\\n","extends":[],"type":"injectable"}],"guards":[],"interceptors":[],"classes":[],"directives":[{"name":"BadgeDirective","id":"directive-BadgeDirective-4de8e699e667b967f9702f7e21e78caa1bef41f3eddb004c20119fc62144b2afae1ee8fa5c71cfbb48c9d21c610dd40b0b3ede3023f75da87fa70f34a4235be6","file":"projects/ds-rte-lib/src/lib/components/badge/badge.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import {\\n  Directive,\\n  input,\\n  OnChanges,\\n  OnDestroy,\\n  ViewContainerRef,\\n  ComponentRef,\\n  inject,\\n  ElementRef,\\n  Renderer2,\\n  OnInit,\\n} from \\"@angular/core\\";\\nimport { BadgeType, BadgeSize, BadgeAppearance } from \\"@design-system-rte/core/components/badge/badge.interface\\";\\n\\nimport { RegularIconIdKey, TogglableIconIdKey } from \\"../icon/icon.service\\";\\n\\nimport { BadgeComponent } from \\"./badge.component\\";\\n\\n@Directive({\\n  selector: \\"[rteBadge]\\",\\n  standalone: true,\\n})\\nexport class BadgeDirective implements OnInit, OnChanges, OnDestroy {\\n  readonly rteBadgeType = input<BadgeType>(\\"brand\\");\\n  readonly rteBadgeSize = input<BadgeSize>(\\"m\\");\\n  readonly rteBadgeAppearance = input<BadgeAppearance>(\\"text\\");\\n  readonly rteBadgeCount = input<number | undefined>();\\n  readonly rteBadgeIcon = input<RegularIconIdKey | TogglableIconIdKey>(\\"settings\\");\\n\\n  private badgeComponentRef: ComponentRef<BadgeComponent> | null = null;\\n  private hostElement: HTMLElement;\\n\\n  private readonly viewContainer = inject(ViewContainerRef);\\n  private readonly elementRef = inject(ElementRef);\\n  private readonly renderer = inject(Renderer2);\\n\\n  constructor() {\\n    this.hostElement = this.elementRef.nativeElement;\\n  }\\n\\n  ngOnInit(): void {\\n    this.badgeComponentRef = this.viewContainer.createComponent(BadgeComponent);\\n    this.assignDirectiveToComponent();\\n    this.appendComponentToHost();\\n    this.renderer.setStyle(this.hostElement, \\"position\\", \\"relative\\");\\n  }\\n\\n  ngOnChanges(): void {\\n    this.assignDirectiveToComponent();\\n  }\\n\\n  ngOnDestroy(): void {\\n    if (this.badgeComponentRef) {\\n      this.badgeComponentRef.destroy();\\n    }\\n  }\\n\\n  private assignDirectiveToComponent(): void {\\n    if (this.badgeComponentRef) {\\n      this.badgeComponentRef.setInput(\\"badgeType\\", this.rteBadgeType());\\n      this.badgeComponentRef.setInput(\\"badgeSize\\", this.rteBadgeSize());\\n      this.badgeComponentRef.setInput(\\"badgeAppearance\\", this.rteBadgeAppearance());\\n      this.badgeComponentRef.setInput(\\"count\\", this.rteBadgeCount());\\n      this.badgeComponentRef.setInput(\\"icon\\", this.rteBadgeIcon());\\n    }\\n  }\\n\\n  private appendComponentToHost(): void {\\n    if (this.badgeComponentRef) {\\n      this.renderer.appendChild(this.elementRef.nativeElement, this.badgeComponentRef.location.nativeElement);\\n    }\\n  }\\n}\\n","selector":"[rteBadge]","providers":[],"hostDirectives":[],"standalone":true,"inputsClass":[],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[{"name":"badgeComponentRef","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"ComponentRef<BadgeComponent> | null","indexKey":"","optional":false,"description":"","line":30,"modifierKind":[123]},{"name":"elementRef","defaultValue":"inject(ElementRef)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":34,"modifierKind":[123,148]},{"name":"hostElement","deprecated":false,"deprecationMessage":"","type":"HTMLElement","indexKey":"","optional":false,"description":"","line":31,"modifierKind":[123]},{"name":"renderer","defaultValue":"inject(Renderer2)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":35,"modifierKind":[123,148]},{"name":"rteBadgeAppearance","defaultValue":"input<BadgeAppearance>(\\"text\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148]},{"name":"rteBadgeCount","defaultValue":"input<number | undefined>()","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[148]},{"name":"rteBadgeIcon","defaultValue":"input<RegularIconIdKey | TogglableIconIdKey>(\\"settings\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":28,"modifierKind":[148]},{"name":"rteBadgeSize","defaultValue":"input<BadgeSize>(\\"m\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148]},{"name":"rteBadgeType","defaultValue":"input<BadgeType>(\\"brand\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":24,"modifierKind":[148]},{"name":"viewContainer","defaultValue":"inject(ViewContainerRef)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":33,"modifierKind":[123,148]}],"methodsClass":[{"name":"appendComponentToHost","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":68,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"assignDirectiveToComponent","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnChanges","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":""},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":""}],"extends":[],"implements":["OnInit","OnChanges","OnDestroy"],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":35}},{"name":"ColDirective","id":"directive-ColDirective-f405f1affce709074da0ff3eae8927fa924efe7ace1d5ece0da6937e12a65b9cfb9726ddf777d81c2e378f553abeffc71306f60d7a05ab6e25a941f4e2337a30","file":"projects/ds-rte-lib/src/lib/components/grid/col/col.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { Directive, HostBinding, input } from \\"@angular/core\\";\\n\\n@Directive({\\n  selector: \\"[rteCol]\\",\\n  standalone: true,\\n})\\nexport class ColDirective {\\n  readonly xxs = input<number>();\\n  readonly xs = input<number>();\\n  readonly s = input<number>();\\n  readonly m = input<number>();\\n  readonly l = input<number>();\\n  readonly xl = input<number>();\\n\\n  @HostBinding(\\"class\\")\\n  get colClasses(): string {\\n    return [\\n      \\"col\\",\\n      this.generateColumnClass(\\"col-xxs\\", this.xxs()),\\n      this.generateColumnClass(\\"col-xs\\", this.xs()),\\n      this.generateColumnClass(\\"col-s\\", this.s()),\\n      this.generateColumnClass(\\"col-m\\", this.m()),\\n      this.generateColumnClass(\\"col-l\\", this.l()),\\n      this.generateColumnClass(\\"col-xl\\", this.xl()),\\n    ]\\n      .filter(Boolean)\\n      .join(\\" \\");\\n  }\\n\\n  constructor() {}\\n\\n  private generateColumnClass(prefix: string, size?: number): string {\\n    return size ? `${prefix}-${size}` : \\"\\";\\n  }\\n}\\n","selector":"[rteCol]","providers":[],"hostDirectives":[],"standalone":true,"inputsClass":[{"name":"l","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":12,"modifierKind":[148],"required":false},{"name":"m","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":11,"modifierKind":[148],"required":false},{"name":"s","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":10,"modifierKind":[148],"required":false},{"name":"xl","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":13,"modifierKind":[148],"required":false},{"name":"xs","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":9,"modifierKind":[148],"required":false},{"name":"xxs","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":8,"modifierKind":[148],"required":false}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[{"name":"class","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[]}],"hostListeners":[],"propertiesClass":[{"name":"l","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":12,"modifierKind":[148],"required":false},{"name":"m","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":11,"modifierKind":[148],"required":false},{"name":"s","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":10,"modifierKind":[148],"required":false},{"name":"xl","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":13,"modifierKind":[148],"required":false},{"name":"xs","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":9,"modifierKind":[148],"required":false},{"name":"xxs","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":8,"modifierKind":[148],"required":false}],"methodsClass":[{"name":"generateColumnClass","args":[{"name":"prefix","type":"string","deprecated":false,"deprecationMessage":""},{"name":"size","type":"number","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"string","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"prefix","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"size","type":"number","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]}],"extends":[],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":28},"accessors":{"colClasses":{"name":"colClasses","getSignature":{"name":"colClasses","type":"string","returnType":"string","line":16}}}},{"name":"GridDirective","id":"directive-GridDirective-da7291dbfff52e7d39103a3459dc92b3118ab8e3e1c969bef13c80a36f82ab9973d561a687ca440310c237da8d647f1dcacec3b07ae95c75c9c95070dff446ae","file":"projects/ds-rte-lib/src/lib/components/grid/grid.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { Directive, HostBinding, input } from \\"@angular/core\\";\\nimport { GridType } from \\"@design-system-rte/core/components/grid/grid.interface\\";\\n\\n@Directive({\\n  selector: \\"[rteGrid]\\",\\n  standalone: true,\\n})\\nexport class GridDirective {\\n  readonly gridType = input<GridType>(\\"fluid\\");\\n\\n  @HostBinding(\\"class\\")\\n  get hostClasses(): string {\\n    return \\"grid\\";\\n  }\\n\\n  @HostBinding(\\"attr.data-gridtype\\")\\n  get hostDataClasses(): string {\\n    const variation = this.gridType();\\n    return `${variation}`;\\n  }\\n  constructor() {}\\n}\\n","selector":"[rteGrid]","providers":[],"hostDirectives":[],"standalone":true,"inputsClass":[],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[{"name":"attr.data-gridtype","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[]},{"name":"class","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[]}],"hostListeners":[],"propertiesClass":[{"name":"gridType","defaultValue":"input<GridType>(\\"fluid\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":9,"modifierKind":[148]}],"methodsClass":[],"extends":[],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":20},"accessors":{"hostClasses":{"name":"hostClasses","getSignature":{"name":"hostClasses","type":"string","returnType":"string","line":12}},"hostDataClasses":{"name":"hostDataClasses","getSignature":{"name":"hostDataClasses","type":"string","returnType":"string","line":17}}}},{"name":"TooltipDirective","id":"directive-TooltipDirective-1d1d1056aeb6ae473a33447a6b086248f439b4c81eba9305622522218b3f26dfca5e42dd0851bc35071f42c3479cbe2c3bde7b2e156ff079735fbc6c93b96829","file":"projects/ds-rte-lib/src/lib/components/tooltip/tooltip.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import {\\n  ChangeDetectorRef,\\n  ComponentRef,\\n  Directive,\\n  ElementRef,\\n  HostListener,\\n  inject,\\n  input,\\n  Renderer2,\\n  ViewContainerRef,\\n} from \\"@angular/core\\";\\nimport { getAutoPlacement } from \\"@design-system-rte/core/components/utils/auto-placement\\";\\n\\nimport { TooltipComponent } from \\"./tooltip.component\\";\\n\\ninterface TooltipXBound {\\n  position: \\"left\\" | \\"right\\";\\n  offset: number;\\n}\\n\\ninterface TooltipYBound {\\n  position: \\"top\\" | \\"bottom\\";\\n  offset: number;\\n}\\n\\ninterface TooltipBounds {\\n  x: TooltipXBound;\\n  y: TooltipYBound;\\n}\\n\\nconst TOOLTIP_GAP = 8;\\n\\n@Directive({\\n  selector: \\"[rteTooltip]\\",\\n  standalone: true,\\n})\\nexport class TooltipDirective {\\n  readonly rteTooltip = input.required<string>();\\n  readonly rteTooltipPosition = input(\\"auto\\");\\n  readonly rteTooltipAlignment = input(\\"center\\");\\n  readonly rteTooltipArrow = input(true);\\n\\n  private tooltipRef: ComponentRef<TooltipComponent> | null = null;\\n  private hostElement: HTMLElement;\\n\\n  private elementRef = inject(ElementRef);\\n  private viewContainerRef = inject(ViewContainerRef);\\n  private renderer = inject(Renderer2);\\n  private cdr = inject(ChangeDetectorRef);\\n\\n  @HostListener(\\"mouseenter\\")\\n  onMouseEnter(): void {\\n    this.showTooltip();\\n  }\\n\\n  @HostListener(\\"mouseleave\\")\\n  onMouseLeave(): void {\\n    this.hideTooltip();\\n  }\\n\\n  @HostListener(\\"focus\\")\\n  onFocus(): void {\\n    this.showTooltip();\\n  }\\n\\n  @HostListener(\\"blur\\")\\n  onBlur(): void {\\n    this.hideTooltip();\\n  }\\n\\n  constructor() {\\n    this.hostElement = this.elementRef.nativeElement;\\n    this.hostElement.setAttribute(\\"tabindex\\", \\"0\\");\\n  }\\n\\n  showTooltip(): void {\\n    if (this.tooltipRef) {\\n      this.tooltipRef.destroy();\\n    }\\n\\n    this.tooltipRef = this.viewContainerRef.createComponent(TooltipComponent);\\n    this.assignDirectiveToComponent();\\n    this.appendComponentToHost();\\n    this.cdr.detectChanges();\\n\\n    if (this.tooltipRef) {\\n      const tooltipElement = this.tooltipRef.location.nativeElement;\\n      this.renderer.setStyle(tooltipElement, \\"opacity\\", \\"0\\");\\n      this.positionTooltip();\\n\\n      this.renderer.setStyle(tooltipElement, \\"opacity\\", \\"1\\");\\n    }\\n  }\\n\\n  private assignDirectiveToComponent(): void {\\n    if (this.tooltipRef) {\\n      const tooltipElement = this.tooltipRef.location.nativeElement;\\n      const position =\\n        this.rteTooltipPosition() === \\"auto\\"\\n          ? getAutoPlacement(this.hostElement, tooltipElement, \\"top\\")\\n          : this.rteTooltipPosition();\\n\\n      this.tooltipRef.setInput(\\"label\\", this.rteTooltip());\\n      this.tooltipRef.setInput(\\"position\\", position);\\n      this.tooltipRef.setInput(\\"alignment\\", this.rteTooltipAlignment());\\n      this.tooltipRef.setInput(\\"arrow\\", this.rteTooltipArrow());\\n    }\\n  }\\n\\n  private appendComponentToHost(): void {\\n    if (this.tooltipRef) {\\n      this.renderer.appendChild(this.elementRef.nativeElement, this.tooltipRef.location.nativeElement);\\n    }\\n  }\\n\\n  private positionTooltip(): void {\\n    if (this.tooltipRef) {\\n      const tooltipElement = this.tooltipRef.location.nativeElement;\\n\\n      const bounds = this.getTooltipPosition(this.hostElement, this.tooltipRef);\\n\\n      this.renderer.setStyle(this.hostElement, \\"position\\", \\"relative\\");\\n\\n      this.renderer.setStyle(tooltipElement, bounds.x.position, `${bounds.x.offset}px`);\\n      this.renderer.setStyle(tooltipElement, bounds.y.position, `${bounds.y.offset}px`);\\n    }\\n  }\\n\\n  private getTooltipPosition(host: HTMLElement, tooltip: ComponentRef<TooltipComponent>): TooltipBounds {\\n    return {\\n      x: this.getTooltipXBound(host, tooltip),\\n      y: this.getTooltipYBound(host, tooltip),\\n    };\\n  }\\n\\n  private getTooltipXBound(host: HTMLElement, tooltip: ComponentRef<TooltipComponent>): TooltipXBound {\\n    return {\\n      position: tooltip.instance.position() === \\"right\\" ? \\"right\\" : \\"left\\",\\n      offset: this.getTooltipXOffset(host, tooltip),\\n    };\\n  }\\n\\n  private getTooltipXOffset(host: HTMLElement, tooltip: ComponentRef<TooltipComponent>): number {\\n    const hostRect = host.getBoundingClientRect();\\n    if (tooltip.instance.position() === \\"left\\") {\\n      return -tooltip.location.nativeElement.querySelector(\\".tooltip\\").offsetWidth - TOOLTIP_GAP;\\n    }\\n    if (tooltip.instance.position() === \\"right\\") {\\n      return -TOOLTIP_GAP;\\n    }\\n    return hostRect.width / 2;\\n  }\\n\\n  private getTooltipYBound(host: HTMLElement, tooltip: ComponentRef<TooltipComponent>): TooltipYBound {\\n    return {\\n      position: tooltip.instance.position() === \\"bottom\\" ? \\"bottom\\" : \\"top\\",\\n      offset: this.getTooltipYOffset(host, tooltip),\\n    };\\n  }\\n\\n  private getTooltipYOffset(host: HTMLElement, tooltip: ComponentRef<TooltipComponent>): number {\\n    const hostRect = host.getBoundingClientRect();\\n\\n    if (tooltip.instance.position() === \\"top\\") {\\n      return -tooltip.location.nativeElement.querySelector(\\".tooltip\\").offsetHeight - TOOLTIP_GAP;\\n    }\\n    if (tooltip.instance.position() === \\"bottom\\") {\\n      return -TOOLTIP_GAP;\\n    }\\n    return hostRect.height / 2;\\n  }\\n\\n  private hideTooltip(): void {\\n    if (this.tooltipRef) {\\n      const tooltipElement = this.tooltipRef.location.nativeElement;\\n\\n      this.renderer.setStyle(tooltipElement, \\"opacity\\", \\"0\\");\\n\\n      setTimeout(() => {\\n        if (this.tooltipRef) {\\n          this.tooltipRef.destroy();\\n          this.tooltipRef = null;\\n        }\\n      }, 200);\\n    }\\n  }\\n}\\n","selector":"[rteTooltip]","providers":[],"hostDirectives":[],"standalone":true,"inputsClass":[{"name":"rteTooltip","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":38,"modifierKind":[148],"required":true},{"name":"rteTooltipArrow","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":41,"modifierKind":[148],"required":false}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"blur","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","line":67},{"name":"focus","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","line":62},{"name":"mouseenter","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","line":52},{"name":"mouseleave","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","line":57}],"propertiesClass":[{"name":"cdr","defaultValue":"inject(ChangeDetectorRef)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":49,"modifierKind":[123]},{"name":"elementRef","defaultValue":"inject(ElementRef)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":46,"modifierKind":[123]},{"name":"hostElement","deprecated":false,"deprecationMessage":"","type":"HTMLElement","indexKey":"","optional":false,"description":"","line":44,"modifierKind":[123]},{"name":"renderer","defaultValue":"inject(Renderer2)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":48,"modifierKind":[123]},{"name":"rteTooltip","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":38,"modifierKind":[148],"required":true},{"name":"rteTooltipAlignment","defaultValue":"input(\\"center\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":40,"modifierKind":[148]},{"name":"rteTooltipArrow","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":41,"modifierKind":[148],"required":false},{"name":"rteTooltipPosition","defaultValue":"input(\\"auto\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":39,"modifierKind":[148]},{"name":"tooltipRef","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"ComponentRef<TooltipComponent> | null","indexKey":"","optional":false,"description":"","line":43,"modifierKind":[123]},{"name":"viewContainerRef","defaultValue":"inject(ViewContainerRef)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":47,"modifierKind":[123]}],"methodsClass":[{"name":"appendComponentToHost","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":110,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"assignDirectiveToComponent","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":95,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getTooltipPosition","args":[{"name":"host","type":"HTMLElement","deprecated":false,"deprecationMessage":""},{"name":"tooltip","type":"ComponentRef<TooltipComponent>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"TooltipBounds","typeParameters":[],"line":129,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"host","type":"HTMLElement","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"tooltip","type":"ComponentRef<TooltipComponent>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getTooltipXBound","args":[{"name":"host","type":"HTMLElement","deprecated":false,"deprecationMessage":""},{"name":"tooltip","type":"ComponentRef<TooltipComponent>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"TooltipXBound","typeParameters":[],"line":136,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"host","type":"HTMLElement","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"tooltip","type":"ComponentRef<TooltipComponent>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getTooltipXOffset","args":[{"name":"host","type":"HTMLElement","deprecated":false,"deprecationMessage":""},{"name":"tooltip","type":"ComponentRef<TooltipComponent>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"number","typeParameters":[],"line":143,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"host","type":"HTMLElement","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"tooltip","type":"ComponentRef<TooltipComponent>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getTooltipYBound","args":[{"name":"host","type":"HTMLElement","deprecated":false,"deprecationMessage":""},{"name":"tooltip","type":"ComponentRef<TooltipComponent>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"TooltipYBound","typeParameters":[],"line":154,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"host","type":"HTMLElement","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"tooltip","type":"ComponentRef<TooltipComponent>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getTooltipYOffset","args":[{"name":"host","type":"HTMLElement","deprecated":false,"deprecationMessage":""},{"name":"tooltip","type":"ComponentRef<TooltipComponent>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"number","typeParameters":[],"line":161,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"host","type":"HTMLElement","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"tooltip","type":"ComponentRef<TooltipComponent>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"hideTooltip","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":173,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"onBlur","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'blur\'"}],"modifierKind":[170]},{"name":"onFocus","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'focus\'"}],"modifierKind":[170]},{"name":"onMouseEnter","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'mouseenter\'"}],"modifierKind":[170]},{"name":"onMouseLeave","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":57,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'mouseleave\'"}],"modifierKind":[170]},{"name":"positionTooltip","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":116,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"showTooltip","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":""}],"extends":[],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":69}}],"components":[{"name":"BadgeComponent","id":"component-BadgeComponent-ea499bbd482eb3cca9549f0cd0ee5a7cda80cf03857adc02394c2338330492c17c2d018e289378f208406b3b5c8264f0423ac6c0bf952145c7e9b91678823a1a","file":"projects/ds-rte-lib/src/lib/components/badge/badge.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-badge","styleUrls":[],"styles":[],"templateUrl":["./badge.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"badgeAppearance","defaultValue":"input<BadgeAppearance>(\\"text\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[148]},{"name":"badgeSize","defaultValue":"input<BadgeSize>(\\"m\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148]},{"name":"badgeType","defaultValue":"input<BadgeType>(\\"brand\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148]},{"name":"count","defaultValue":"input<number | undefined>()","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":28,"modifierKind":[148]},{"name":"countOverflow","defaultValue":"computed(() => this.showText() && this.displayCount().length > 2)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":50,"modifierKind":[148]},{"name":"displayCount","defaultValue":"computed(() => getDisplayCount(this.count()))","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":49,"modifierKind":[148]},{"name":"icon","defaultValue":"input<RegularIconIdKey | TogglableIconIdKey>(\\"notification\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":29,"modifierKind":[148]},{"name":"iconSize","defaultValue":"computed(() => getBadgeIconSize(this.badgeSize()))","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":51,"modifierKind":[148]},{"name":"isValidIconName","defaultValue":"computed(() => isValidIconName(this.icon()))","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":31,"modifierKind":[148]},{"name":"showBadge","defaultValue":"computed(() =>\\n    getShowBadge({\\n      size: this.badgeSize(),\\n      appearance: this.badgeAppearance(),\\n      count: this.count(),\\n      iconSize: this.iconSize(),\\n    }),\\n  )","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":53,"modifierKind":[148]},{"name":"showIcon","defaultValue":"computed(() =>\\n    getShowIcon({\\n      size: this.badgeSize(),\\n      appearance: this.badgeAppearance(),\\n      iconSize: this.iconSize(),\\n    }),\\n  )","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":33,"modifierKind":[148]},{"name":"showText","defaultValue":"computed(() =>\\n    getShowText({\\n      size: this.badgeSize(),\\n      appearance: this.badgeAppearance(),\\n      count: this.count(),\\n    }),\\n  )","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":41,"modifierKind":[148]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { Component, input, computed, ChangeDetectionStrategy } from \\"@angular/core\\";\\nimport { BadgeAppearance, BadgeSize, BadgeType } from \\"@design-system-rte/core/components/badge/badge.interface\\";\\nimport {\\n  getBadgeIconSize,\\n  getDisplayCount,\\n  getShowBadge,\\n  getShowIcon,\\n  getShowText,\\n} from \\"@design-system-rte/core/components/badge/badge.utils\\";\\n\\nimport { isValidIconName } from \\"../icon/icon-map\\";\\nimport { IconComponent } from \\"../icon/icon.component\\";\\nimport { RegularIconIdKey, TogglableIconIdKey } from \\"../icon/icon.service\\";\\n\\n@Component({\\n  selector: \\"rte-badge\\",\\n  imports: [CommonModule, IconComponent],\\n  standalone: true,\\n  templateUrl: \\"./badge.component.html\\",\\n  styleUrl: \\"./badge.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class BadgeComponent {\\n  readonly badgeType = input<BadgeType>(\\"brand\\");\\n  readonly badgeSize = input<BadgeSize>(\\"m\\");\\n  readonly badgeAppearance = input<BadgeAppearance>(\\"text\\");\\n  readonly count = input<number | undefined>();\\n  readonly icon = input<RegularIconIdKey | TogglableIconIdKey>(\\"notification\\");\\n\\n  readonly isValidIconName = computed(() => isValidIconName(this.icon()));\\n\\n  readonly showIcon = computed(() =>\\n    getShowIcon({\\n      size: this.badgeSize(),\\n      appearance: this.badgeAppearance(),\\n      iconSize: this.iconSize(),\\n    }),\\n  );\\n\\n  readonly showText = computed(() =>\\n    getShowText({\\n      size: this.badgeSize(),\\n      appearance: this.badgeAppearance(),\\n      count: this.count(),\\n    }),\\n  );\\n\\n  readonly displayCount = computed(() => getDisplayCount(this.count()));\\n  readonly countOverflow = computed(() => this.showText() && this.displayCount().length > 2);\\n  readonly iconSize = computed(() => getBadgeIconSize(this.badgeSize()));\\n\\n  readonly showBadge = computed(() =>\\n    getShowBadge({\\n      size: this.badgeSize(),\\n      appearance: this.badgeAppearance(),\\n      count: this.count(),\\n      iconSize: this.iconSize(),\\n    }),\\n  );\\n}\\n","styleUrl":"./badge.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<div\\n    class=\\"badge size-{{ badgeSize() }} type-{{ badgeType() }}\\"\\n    data-testid=\\"badge\\"\\n    [ngClass]=\\"{\'hidden\': !showBadge(), \'count-overflow\': countOverflow()}\\"\\n>\\n    <rte-icon\\n        *ngIf=\\"showIcon()\\"\\n        class=\\"badge-icon\\"\\n        [name]=\\"icon()\\"\\n        [size]=\\"iconSize()!\\"\\n    />\\n    <p *ngIf=\\"showText()\\" class=\\"badge-text\\">\\n        {{displayCount()}}\\n    </p>\\n</div>\\n"},{"name":"ButtonComponent","id":"component-ButtonComponent-22e9f07c68a2bf52444f7434592e63947869b5db92cec0d56a199c79f46ca706f7dea44be13d37977ec7297052134540aefb9b08ab2463e5cb14999cbcefec96","file":"projects/ds-rte-lib/src/lib/components/button/button.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-button","styleUrls":[],"styles":[],"templateUrl":["./button.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":17,"modifierKind":[148],"required":false}],"outputsClass":[{"name":"click","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":23,"modifierKind":[148],"required":false}],"propertiesClass":[{"name":"ariaLabel","defaultValue":"input<string>(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":19,"modifierKind":[148]},{"name":"ariaLabelledBy","defaultValue":"input<string>(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":20,"modifierKind":[148]},{"name":"buttonType","defaultValue":"input<ButtonType>(\\"button\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":21,"modifierKind":[148]},{"name":"click","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":23,"modifierKind":[148],"required":false},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":17,"modifierKind":[148],"required":false},{"name":"icon","defaultValue":"input<string>(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148]},{"name":"label","defaultValue":"input(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":14,"modifierKind":[148]},{"name":"size","defaultValue":"input<ButtonSize>(\\"m\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":16,"modifierKind":[148]},{"name":"variant","defaultValue":"input<ButtonVariant>(\\"primary\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":15,"modifierKind":[148]}],"methodsClass":[{"name":"onClick","args":[{"name":"event","type":"MouseEvent | KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"MouseEvent | KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, input, output } from \\"@angular/core\\";\\nimport { ButtonType } from \\"@design-system-rte/core/components/button/button.interface\\";\\nimport { ButtonSize, ButtonVariant } from \\"@design-system-rte/core/components/button/common/common-button\\";\\n\\n@Component({\\n  selector: \\"rte-button\\",\\n  imports: [],\\n  standalone: true,\\n  templateUrl: \\"./button.component.html\\",\\n  styleUrl: \\"./button.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ButtonComponent {\\n  readonly label = input(\\"\\");\\n  readonly variant = input<ButtonVariant>(\\"primary\\");\\n  readonly size = input<ButtonSize>(\\"m\\");\\n  readonly disabled = input(false);\\n  readonly icon = input<string>(\\"\\");\\n  readonly ariaLabel = input<string>(\\"\\");\\n  readonly ariaLabelledBy = input<string>(\\"\\");\\n  readonly buttonType = input<ButtonType>(\\"button\\");\\n\\n  readonly click = output<void>();\\n\\n  onClick(event: MouseEvent | KeyboardEvent): void {\\n    event.stopPropagation();\\n    this.click.emit();\\n  }\\n}\\n","styleUrl":"./button.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<button\\n    class=\\"rte-button {{ variant() }} size-{{ size() }}\\"\\n    [attr.aria-label]=\\"ariaLabel()\\"\\n    [attr.aria-labelledby]=\\"ariaLabelledBy()\\"\\n    [attr.type]=\\"buttonType()\\"\\n    [disabled]=\\"disabled()\\"\\n    (click)=\\"onClick($event)\\"\\n>\\n    <span class=\\"rte-button-label\\">{{ label() }}</span>\\n</button>"},{"name":"CheckboxComponent","id":"component-CheckboxComponent-38d58c248f3a501f1251ec96d658f817532c8c83ddd2940ddec09c6e44f901ac176e52b0d4a1613e09900ab89cee1fc01a02f2e66cf0f8a78c658068712401b9","file":"projects/ds-rte-lib/src/lib/components/checkbox/checkbox.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-checkbox","styleUrls":[],"styles":[],"templateUrl":["./checkbox.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"checked","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148],"required":false},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":21,"modifierKind":[148],"required":false},{"name":"error","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148],"required":false},{"name":"id","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":15,"modifierKind":[148],"required":true},{"name":"indeterminate","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148],"required":false},{"name":"label","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":16,"modifierKind":[148],"required":true},{"name":"readOnly","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":24,"modifierKind":[148],"required":false},{"name":"showLabel","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":20,"modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[{"name":"checked","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148],"required":false},{"name":"description","defaultValue":"input(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":19,"modifierKind":[148]},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":21,"modifierKind":[148],"required":false},{"name":"error","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148],"required":false},{"name":"errorMessage","defaultValue":"input(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":23,"modifierKind":[148]},{"name":"groupName","defaultValue":"input(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148]},{"name":"id","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":15,"modifierKind":[148],"required":true},{"name":"indeterminate","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148],"required":false},{"name":"label","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":16,"modifierKind":[148],"required":true},{"name":"readOnly","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":24,"modifierKind":[148],"required":false},{"name":"showLabel","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":20,"modifierKind":[148],"required":false},{"name":"value","defaultValue":"input(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":17,"modifierKind":[148]}],"methodsClass":[{"name":"onKeydown","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, input } from \\"@angular/core\\";\\n\\nimport { IconComponent } from \\"../icon/icon.component\\";\\n\\n@Component({\\n  selector: \\"rte-checkbox\\",\\n  imports: [CommonModule, IconComponent],\\n  standalone: true,\\n  templateUrl: \\"./checkbox.component.html\\",\\n  styleUrl: \\"./checkbox.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class CheckboxComponent {\\n  readonly id = input.required<string>();\\n  readonly label = input.required<string>();\\n  readonly value = input(\\"\\");\\n  readonly indeterminate = input(false);\\n  readonly description = input(\\"\\");\\n  readonly showLabel = input(true);\\n  readonly disabled = input(false);\\n  readonly error = input(false);\\n  readonly errorMessage = input(\\"\\");\\n  readonly readOnly = input(false);\\n  readonly checked = input(false);\\n  readonly groupName = input(\\"\\");\\n\\n  onKeydown(event: KeyboardEvent) {\\n    if (event.code === \\"Space\\") {\\n      if (this.readOnly()) {\\n        event.preventDefault();\\n      }\\n    }\\n  }\\n}\\n","styleUrl":"./checkbox.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"    <div class=\\"rte-checkbox-container\\">\\n        <input\\n            type=\\"checkbox\\"\\n            class=\\"rte-checkbox\\"\\n            [id]=\\"id()\\"\\n            [value]=\\"value()\\"\\n            [ngClass]=\\"{\'error\': error(), \'read-only\': readOnly()}\\"\\n            [disabled]=\\"disabled()\\"\\n            [indeterminate]=\\"indeterminate()\\"\\n            [checked]=\\"checked()\\"\\n            (keydown)=\\"onKeydown($event)\\"\\n        />\\n            <rte-icon class=\\"rte-checkbox-icons rte-checkbox-icon-selected\\" name=\\"check-small\\" [size]=\\"16\\"/> \\n            <rte-icon class=\\"rte-checkbox-icons rte-checkbox-icon-indeterminated\\" name=\\"check-indeterminate\\" [size]=\\"16\\" /> \\n        <div class=\\"rte-checkbox-text-container\\">\\n            <label \\n            *ngIf=\\"showLabel()\\" \\n            class=\\"rte-checkbox-label\\" \\n            [for]=\\"id()\\"\\n            [ngClass]=\\"{\\n                \'error\': error(),\\n                \'read-only\': readOnly(),\\n                \'disabled\': disabled()\\n            }\\"\\n            >\\n                {{ label() }}\\n            </label>\\n            <p class=\\"rte-checkbox-description\\">{{ description() }}</p>\\n            <p *ngIf=\\"error() && errorMessage()\\" class=\\"rte-checkbox-error\\">{{ errorMessage() }}</p>\\n        </div>\\n    </div>\\n"},{"name":"CheckboxGroupComponent","id":"component-CheckboxGroupComponent-c8cdf10df6c68933284b31af92459a1d32dc571ab479f657d9f3c1af6db11ca414f5edc4cfce0e6d63ab4af817e9ed6d166a1f07f07e6374312660bb01662f2f","file":"projects/ds-rte-lib/src/lib/components/checkbox-group/checkbox-group.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-checkbox-group","styleUrls":[],"styles":[],"templateUrl":["./checkbox-group.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148],"required":false},{"name":"error","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":24,"modifierKind":[148],"required":false},{"name":"groupName","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":15,"modifierKind":[148],"required":true},{"name":"readOnly","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148],"required":false},{"name":"showGroupTitle","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":20,"modifierKind":[148],"required":false},{"name":"showHelpText","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148],"required":false},{"name":"showItemsLabel","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[{"name":"direction","defaultValue":"input(\\"horizontal\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":17,"modifierKind":[148]},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148],"required":false},{"name":"error","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":24,"modifierKind":[148],"required":false},{"name":"errorMessage","defaultValue":"input(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":23,"modifierKind":[148]},{"name":"groupHelpText","defaultValue":"input(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":21,"modifierKind":[148]},{"name":"groupName","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":15,"modifierKind":[148],"required":true},{"name":"groupTitle","defaultValue":"input(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":19,"modifierKind":[148]},{"name":"isDisplayed","defaultValue":"computed(() => !(this.disabled() && this.error()))","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":28,"modifierKind":[148]},{"name":"items","defaultValue":"input.required<string[]>()","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":16,"modifierKind":[148]},{"name":"readOnly","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148],"required":false},{"name":"showGroupTitle","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":20,"modifierKind":[148],"required":false},{"name":"showHelpText","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148],"required":false},{"name":"showItemsLabel","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148],"required":false}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"CheckboxComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, computed, input } from \\"@angular/core\\";\\n\\nimport { CheckboxComponent } from \\"../checkbox/checkbox.component\\";\\n\\n@Component({\\n  selector: \\"rte-checkbox-group\\",\\n  imports: [CommonModule, CheckboxComponent],\\n  standalone: true,\\n  templateUrl: \\"./checkbox-group.component.html\\",\\n  styleUrl: \\"./checkbox-group.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class CheckboxGroupComponent {\\n  readonly groupName = input.required<string>();\\n  readonly items = input.required<string[]>();\\n  readonly direction = input(\\"horizontal\\");\\n  readonly showItemsLabel = input(true);\\n  readonly groupTitle = input(\\"\\");\\n  readonly showGroupTitle = input(false);\\n  readonly groupHelpText = input(\\"\\");\\n  readonly showHelpText = input(false);\\n  readonly errorMessage = input(\\"\\");\\n  readonly error = input(false);\\n  readonly disabled = input(false);\\n  readonly readOnly = input(false);\\n\\n  readonly isDisplayed = computed(() => !(this.disabled() && this.error()));\\n}\\n","styleUrl":"./checkbox-group.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<div  \\n  *ngIf=\\"isDisplayed()\\"\\n  class=\\"checkbox-group-container\\">\\n  <div\\n    class=\\"checkbox-group-header\\"\\n    [ngClass]=\\"{\\n        \'disabled\': disabled(),\\n        \'error\': error(),\\n        \'read-only\': readOnly(),\\n    }\\">\\n    <h3\\n        *ngIf=\\"showGroupTitle()\\"\\n        class=\\"group-title\\"\\n        >\\n        {{ groupTitle() }}\\n    </h3>\\n    <p\\n        *ngIf=\\"showHelpText()\\"\\n        class=\\"group-help-text\\"\\n        >\\n        {{ groupHelpText() }}\\n\\n    </p>\\n    <p\\n        *ngIf=\\"error()\\"\\n        class=\\"group-error-message\\"\\n        >\\n        {{ errorMessage() }}\\n    </p>\\n  </div>\\n  <div class=\\"checkbox-group\\" \\n    [ngClass]=\\"{\'horizontal\': direction() === \'horizontal\', \'vertical\': direction() === \'vertical\'}\\">\\n    <ng-container \\n    *ngFor=\\"let item of items(); let i = index\\">\\n      <rte-checkbox\\n      [id]=\\"item + \'-\' + i\\"\\n      [label]=\\"item\\"\\n      [groupName]=\\"groupName()\\"\\n      [showLabel]=\\"showItemsLabel()\\"\\n      [disabled]=\\"disabled()\\"\\n      [error]=\\"error()\\"\\n      [readOnly]=\\"readOnly()\\"\\n      />\\n    </ng-container>\\n  </div>\\n</div>"},{"name":"ChipComponent","id":"component-ChipComponent-0e89965f7720607802dabb113b2588ce53cbe2621fe1814504124e7620fd8b5216bb4ef42b1b6b309c1ca47c3ec0160f664033e51ec74bf8bd28ff44d7d55882","file":"projects/ds-rte-lib/src/lib/components/chip/chip.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-chip","styleUrls":[],"styles":[],"templateUrl":["./chip.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"compactSpacing","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[148],"required":false},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148],"required":false},{"name":"selected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":24,"modifierKind":[148],"required":false}],"outputsClass":[{"name":"click","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":28,"modifierKind":[148],"required":false},{"name":"close","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":29,"modifierKind":[148],"required":false}],"propertiesClass":[{"name":"click","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":28,"modifierKind":[148],"required":false},{"name":"close","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":29,"modifierKind":[148],"required":false},{"name":"compactSpacing","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[148],"required":false},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148],"required":false},{"name":"id","defaultValue":"input<string | undefined>()","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148]},{"name":"isCheckable","defaultValue":"computed(() => this.type() === \\"single\\" || this.type() === \\"multi\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":31,"modifierKind":[148]},{"name":"label","defaultValue":"input<string>(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":23,"modifierKind":[148]},{"name":"role","defaultValue":"computed(() => CHIP_TYPE_TO_ARIA_ROLE_MAP[this.type()] || null)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":32,"modifierKind":[148]},{"name":"selected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":24,"modifierKind":[148],"required":false},{"name":"type","defaultValue":"input<\\"single\\" | \\"multi\\" | \\"input\\">(\\"single\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148]}],"methodsClass":[{"name":"onBlur","args":[{"name":"event","type":"FocusEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"FocusEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onClick","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onCloseClick","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":65,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onKeyUp","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, computed, input, output } from \\"@angular/core\\";\\nimport { CHIP_TYPE_TO_ARIA_ROLE_MAP } from \\"@design-system-rte/core/components/chip/chip.constants\\";\\nimport {\\n  BACKSPACE_KEY,\\n  DELETE_KEY,\\n  ENTER_KEY,\\n  SPACE_KEY,\\n} from \\"@design-system-rte/core/constants/keyboard/keyboard.constants\\";\\n\\nimport { IconComponent } from \\"../icon/icon.component\\";\\n\\n@Component({\\n  selector: \\"rte-chip\\",\\n  imports: [CommonModule, IconComponent],\\n  standalone: true,\\n  templateUrl: \\"./chip.component.html\\",\\n  styleUrl: \\"./chip.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ChipComponent {\\n  readonly id = input<string | undefined>();\\n  readonly label = input<string>(\\"\\");\\n  readonly selected = input<boolean>(false);\\n  readonly disabled = input<boolean>(false);\\n  readonly type = input<\\"single\\" | \\"multi\\" | \\"input\\">(\\"single\\");\\n  readonly compactSpacing = input<boolean>(false);\\n  readonly click = output<Event>();\\n  readonly close = output<Event>();\\n\\n  readonly isCheckable = computed(() => this.type() === \\"single\\" || this.type() === \\"multi\\");\\n  readonly role = computed(() => CHIP_TYPE_TO_ARIA_ROLE_MAP[this.type()] || null);\\n\\n  onClick(event: Event) {\\n    event.stopPropagation();\\n    if (!this.disabled()) {\\n      this.click.emit(event);\\n    }\\n  }\\n\\n  onKeyUp(event: KeyboardEvent) {\\n    event.preventDefault();\\n    if (!this.disabled()) {\\n      if (event.key === SPACE_KEY || event.key === ENTER_KEY) {\\n        const target = event.target as HTMLElement;\\n        const isCloseButton = target.classList.contains(\\"chip-close-button\\");\\n        if (isCloseButton) {\\n          target.click();\\n        } else {\\n          this.onClick(event);\\n        }\\n      } else if ((event.key === BACKSPACE_KEY || event.key === DELETE_KEY) && this.type() === \\"input\\") {\\n        const closeButton = (event.target as HTMLElement).querySelector(\\n          \\".chip-close-button\\",\\n        ) as HTMLButtonElement | null;\\n        if (closeButton) {\\n          closeButton.click();\\n        }\\n      }\\n    }\\n  }\\n  onBlur(event: FocusEvent) {\\n    event.stopPropagation();\\n  }\\n  onCloseClick(event: Event) {\\n    event.stopPropagation();\\n    if (!this.disabled()) {\\n      this.close.emit(event);\\n    }\\n  }\\n}\\n","styleUrl":"./chip.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<span\\n  class=\\"chip\\"\\n  tabindex=\\"0\\"\\n  [attr.role]=\\"role()\\"\\n  [attr.data-selected]=\\"isCheckable() ? selected() : null\\"\\n  [attr.data-disabled]=\\"disabled()\\"\\n  [attr.data-compact-spacing]=\\"compactSpacing()\\"\\n  [attr.data-type]=\\"type()\\"\\n  [attr.aria-checked]=\\"isCheckable() ? selected() : null\\"\\n  [attr.aria-disabled]=\\"disabled()\\"\\n  (click)=\\"onClick($event)\\"\\n  (keyup)=\\"onKeyUp($event)\\"\\n  (blur)=\\"onBlur($event)\\"\\n>\\n  <ng-container *ngIf=\\"type() === \'multi\'\\">\\n    <span class=\\"chip-icon-container\\">\\n      <span\\n        class=\\"chip-icon\\"\\n        [class.chip-icon--visible]=\\"selected()\\"\\n        [attr.aria-hidden]=\\"!selected()\\"\\n      >\\n        <rte-icon name=\\"check-circle\\" appearance=\\"filled\\" [size]=\\"16\\"></rte-icon>\\n      </span>\\n      <span\\n        class=\\"chip-icon\\"\\n        [class.chip-icon--visible]=\\"!selected()\\"\\n        [attr.aria-hidden]=\\"selected()\\"\\n      >\\n        <rte-icon name=\\"radio-button-empty\\" [size]=\\"16\\"></rte-icon>\\n      </span>\\n    </span>\\n  </ng-container>\\n  <span class=\\"chip-label\\" [attr.data-type]=\\"type()\\">{{ label() }}</span>\\n  <button\\n    *ngIf=\\"type() === \'input\'\\"\\n    type=\\"button\\"\\n    class=\\"chip-close-button\\"\\n    [attr.aria-label]=\\"\'Supprimer \' + label()\\"\\n    [disabled]=\\"disabled()\\"\\n    [value]=\\"label()\\"\\n    (click)=\\"onCloseClick($event)\\"\\n  >\\n    <rte-icon class=\\"chip-close-button--icon\\" name=\\"close\\" [size]=\\"16\\"></rte-icon>\\n  </button>\\n</span>"},{"name":"DividerComponent","id":"component-DividerComponent-3f049bf523071ad083215931b304ee6e81e55d60c5eefed70d653e5f6d1de99bbf86258950f8900e13179d4d2d1925fdabad4d306f42cb242cef3252f2cfb52b","file":"projects/ds-rte-lib/src/lib/components/divider/divider.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-divider","styleUrls":[],"styles":[],"templateUrl":["./divider.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"appearance","defaultValue":"input<DividerProps[\\"appearance\\"]>(\\"default\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":16,"modifierKind":[148]},{"name":"endPoint","defaultValue":"input<DividerProps[\\"endPoint\\"]>(\\"round\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":17,"modifierKind":[148]},{"name":"isHorizontal","defaultValue":"computed(() => this.orientation() === \\"horizontal\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":19,"modifierKind":[148]},{"name":"orientation","defaultValue":"input<DividerProps[\\"orientation\\"]>(\\"horizontal\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":14,"modifierKind":[148]},{"name":"thickness","defaultValue":"input<DividerProps[\\"thickness\\"]>(\\"light\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":15,"modifierKind":[148]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, computed, input } from \\"@angular/core\\";\\nimport { DividerProps } from \\"@design-system-rte/core/components/divider/divider.interface\\";\\n\\n@Component({\\n  selector: \\"rte-divider\\",\\n  imports: [CommonModule],\\n  standalone: true,\\n  templateUrl: \\"./divider.component.html\\",\\n  styleUrl: \\"./divider.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class DividerComponent {\\n  readonly orientation = input<DividerProps[\\"orientation\\"]>(\\"horizontal\\");\\n  readonly thickness = input<DividerProps[\\"thickness\\"]>(\\"light\\");\\n  readonly appearance = input<DividerProps[\\"appearance\\"]>(\\"default\\");\\n  readonly endPoint = input<DividerProps[\\"endPoint\\"]>(\\"round\\");\\n\\n  readonly isHorizontal = computed(() => this.orientation() === \\"horizontal\\");\\n}\\n","styleUrl":"./divider.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"@if (isHorizontal()) {\\n  <hr class=\\"horizontal {{thickness()}} {{appearance()}} {{endPoint()}}\\" />\\n} @else {\\n  <div class=\\"vertical {{thickness()}} {{appearance()}} {{endPoint()}}\\" role=\\"separator\\"></div>\\n}"},{"name":"IconButtonComponent","id":"component-IconButtonComponent-1069deb5a7051cae78bd90caa3690ad580c96ae558d4a6740c14c9c7d8ea77c5f9a6c1b91bb79713894aac6b79995d2af9c1938db2015ed51e4016a8b906c2c3","file":"projects/ds-rte-lib/src/lib/components/icon-button/icon-button.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-icon-button","styleUrls":[],"styles":[],"templateUrl":["./icon-button.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"compactSpacing","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148],"required":false},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":20,"modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[{"name":"appearance","defaultValue":"input<\\"outlined\\" | \\"filled\\">(\\"outlined\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148]},{"name":"ariaLabel","defaultValue":"input<string | undefined>(undefined)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[148]},{"name":"ariaLabelledBy","defaultValue":"input<string | undefined>(undefined)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":28,"modifierKind":[148]},{"name":"buttonIconSize","defaultValue":"computed(() => buttonIconSize[this.size()])","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":30,"modifierKind":[148]},{"name":"click","defaultValue":"output<MouseEvent | KeyboardEvent>()","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":34,"modifierKind":[148]},{"name":"compactSpacing","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148],"required":false},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":20,"modifierKind":[148],"required":false},{"name":"isValidIconName","defaultValue":"computed(() => isValidIconName(this.name()))","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":32,"modifierKind":[148]},{"name":"name","defaultValue":"input.required<RegularIconIdKey | TogglableIconIdKey>()","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":21,"modifierKind":[148]},{"name":"size","defaultValue":"input<ButtonSize>(\\"m\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148]},{"name":"type","defaultValue":"input<ButtonType>(\\"button\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":24,"modifierKind":[148]},{"name":"variant","defaultValue":"input<ButtonVariant>(\\"primary\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":23,"modifierKind":[148]}],"methodsClass":[{"name":"onClick","args":[{"name":"event","type":"MouseEvent | KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"MouseEvent | KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, computed, input, output } from \\"@angular/core\\";\\nimport { ButtonType } from \\"@design-system-rte/core/components/button/button.interface\\";\\nimport { ButtonSize, ButtonVariant } from \\"@design-system-rte/core/components/button/common/common-button\\";\\nimport { buttonIconSize } from \\"@design-system-rte/core/components/button/common/common-button.constants\\";\\n\\nimport { isValidIconName } from \\"../icon/icon-map\\";\\nimport { IconComponent } from \\"../icon/icon.component\\";\\nimport { RegularIconIdKey, TogglableIconIdKey } from \\"../icon/icon.service\\";\\n\\n@Component({\\n  selector: \\"rte-icon-button\\",\\n  imports: [CommonModule, IconComponent],\\n  standalone: true,\\n  templateUrl: \\"./icon-button.component.html\\",\\n  styleUrl: \\"./icon-button.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class IconButtonComponent {\\n  readonly disabled = input<boolean>(false);\\n  readonly name = input.required<RegularIconIdKey | TogglableIconIdKey>();\\n  readonly size = input<ButtonSize>(\\"m\\");\\n  readonly variant = input<ButtonVariant>(\\"primary\\");\\n  readonly type = input<ButtonType>(\\"button\\");\\n  readonly appearance = input<\\"outlined\\" | \\"filled\\">(\\"outlined\\");\\n  readonly compactSpacing = input<boolean>(false);\\n  readonly ariaLabel = input<string | undefined>(undefined);\\n  readonly ariaLabelledBy = input<string | undefined>(undefined);\\n\\n  readonly buttonIconSize = computed(() => buttonIconSize[this.size()]);\\n\\n  readonly isValidIconName = computed(() => isValidIconName(this.name()));\\n\\n  readonly click = output<MouseEvent | KeyboardEvent>();\\n\\n  onClick(event: MouseEvent | KeyboardEvent): void {\\n    event.stopPropagation();\\n    this.click.emit(event);\\n  }\\n}\\n","styleUrl":"./icon-button.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<button\\n  *ngIf=\\"isValidIconName\\"\\n  class=\\"rte-icon-button {{ variant() }} size-{{ size() }}\\"\\n  [class.compact-spacing]=\\"compactSpacing()\\"\\n  [disabled]=\\"disabled()\\"\\n  [attr.aria-label]=\\"ariaLabel()\\"\\n  [attr.aria-labelledby]=\\"ariaLabelledBy()\\"\\n  [type]=\\"type()\\"\\n  (click)=\\"onClick($event)\\"\\n>\\n  <rte-icon\\n    [name]=\\"name()\\"\\n    [appearance]=\\"appearance()\\"\\n    [size]=\\"buttonIconSize()\\"\\n  />\\n</button>"},{"name":"IconButtonToggleComponent","id":"component-IconButtonToggleComponent-6dd39615571794c1da26818c309ad5c10a9d1194e0077afc80204d5bd2c0088d40a7b96d900b54e9e5090162b511fb94cb89d769f066abbb64418400c7c8526f","file":"projects/ds-rte-lib/src/lib/components/icon-button-toggle/icon-button-toggle.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-icon-button-toggle","styleUrls":[],"styles":[],"templateUrl":["./icon-button-toggle.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"compactSpacing","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":23,"modifierKind":[148],"required":false},{"name":"defaultSelected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":31,"modifierKind":[148],"required":false},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[{"name":"ariaLabel","defaultValue":"input<string | undefined>()","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":24,"modifierKind":[148]},{"name":"ariaLabelledBy","defaultValue":"input<string | undefined>()","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148]},{"name":"buttonIconSize","defaultValue":"computed(() => buttonIconSize[this.size()])","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":53,"modifierKind":[148]},{"name":"click","defaultValue":"output<MouseEvent | KeyboardEvent>()","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":35,"modifierKind":[148]},{"name":"compactSpacing","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":23,"modifierKind":[148],"required":false},{"name":"defaultSelected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":31,"modifierKind":[148],"required":false},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148],"required":false},{"name":"internalSelected","defaultValue":"signal(false)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":29,"modifierKind":[148]},{"name":"isControlled","defaultValue":"computed(() => this.selected() !== undefined)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":33,"modifierKind":[148]},{"name":"isSelected","defaultValue":"computed(() => {\\n    return this.isControlled() ? this.selected() : this.internalSelected();\\n  })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":37,"modifierKind":[148]},{"name":"name","defaultValue":"input.required<RegularIconIdKey | TogglableIconIdKey>()","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":19,"modifierKind":[148]},{"name":"selected","defaultValue":"input<boolean | undefined>()","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[148]},{"name":"size","defaultValue":"input<ButtonSize>(\\"m\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":20,"modifierKind":[148]},{"name":"type","defaultValue":"input<ButtonType>(\\"button\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148]},{"name":"variant","defaultValue":"input<ButtonVariant>(\\"primary\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":21,"modifierKind":[148]}],"methodsClass":[{"name":"onClick","args":[{"name":"event","type":"MouseEvent | KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"MouseEvent | KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"toggleInternalSelectedState","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconButtonComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, computed, input, output, signal } from \\"@angular/core\\";\\nimport { ButtonType } from \\"@design-system-rte/core/components/button/button.interface\\";\\nimport { ButtonSize, ButtonVariant } from \\"@design-system-rte/core/components/button/common/common-button\\";\\nimport { buttonIconSize } from \\"@design-system-rte/core/components/button/common/common-button.constants\\";\\n\\nimport { RegularIconIdKey, TogglableIconIdKey } from \\"../icon/icon.service\\";\\nimport { IconButtonComponent } from \\"../icon-button/icon-button.component\\";\\n\\n@Component({\\n  selector: \\"rte-icon-button-toggle\\",\\n  imports: [CommonModule, IconButtonComponent],\\n  standalone: true,\\n  templateUrl: \\"./icon-button-toggle.component.html\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class IconButtonToggleComponent {\\n  readonly disabled = input<boolean>(false);\\n  readonly name = input.required<RegularIconIdKey | TogglableIconIdKey>();\\n  readonly size = input<ButtonSize>(\\"m\\");\\n  readonly variant = input<ButtonVariant>(\\"primary\\");\\n  readonly type = input<ButtonType>(\\"button\\");\\n  readonly compactSpacing = input<boolean>(false);\\n  readonly ariaLabel = input<string | undefined>();\\n  readonly ariaLabelledBy = input<string | undefined>();\\n\\n  readonly selected = input<boolean | undefined>();\\n\\n  readonly internalSelected = signal(false);\\n\\n  readonly defaultSelected = input<boolean>(false);\\n\\n  readonly isControlled = computed(() => this.selected() !== undefined);\\n\\n  readonly click = output<MouseEvent | KeyboardEvent>();\\n\\n  readonly isSelected = computed(() => {\\n    return this.isControlled() ? this.selected() : this.internalSelected();\\n  });\\n\\n  private toggleInternalSelectedState(): void {\\n    this.internalSelected.set(!this.internalSelected());\\n  }\\n\\n  onClick(event: MouseEvent | KeyboardEvent): void {\\n    event.stopPropagation();\\n    this.click.emit(event);\\n    if (!this.isControlled()) {\\n      this.toggleInternalSelectedState();\\n    }\\n  }\\n\\n  readonly buttonIconSize = computed(() => buttonIconSize[this.size()]);\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<rte-icon-button \\n  [size]=\\"size()\\" \\n  [name]=\\"name()\\" \\n  [compactSpacing]=\\"compactSpacing()\\"\\n  [disabled]=\\"disabled()\\"\\n  [ariaLabel]=\\"ariaLabel()\\"\\n  [ariaLabelledBy]=\\"ariaLabelledBy()\\"\\n  [type]=\\"type()\\"\\n  [variant]=\\"variant()\\"\\n  [appearance]=\\"isSelected() ? \'filled\' : \'outlined\'\\"\\n  (click)=\\"onClick($event)\\"\\n/>"},{"name":"IconComponent","id":"component-IconComponent-42e2da1601f10405aa506d085e3ec8e3f94832292b7afd82cfcc4da0727f14f17864c776dd04dfc4aa75eb71b9814a2bbeedaacc1f6937ec00cbcb9590414413","file":"projects/ds-rte-lib/src/lib/components/icon/icon.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[{"name":"IconService","type":"injectable"}],"selector":"rte-icon","styleUrls":[],"styles":[],"templateUrl":["./icon.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"name","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[148],"required":true},{"name":"size","defaultValue":"20","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":28,"modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[{"name":"appearance","defaultValue":"input<\\"outlined\\" | \\"filled\\">()","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":31,"modifierKind":[148]},{"name":"cdr","defaultValue":"inject(ChangeDetectorRef)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":39,"modifierKind":[123]},{"name":"classes","defaultValue":"input(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":30,"modifierKind":[148]},{"name":"color","defaultValue":"input(\\"currentColor\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":29,"modifierKind":[148]},{"name":"destroyRef","defaultValue":"inject(DestroyRef)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":32},{"name":"iconService","defaultValue":"inject(IconService)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":38,"modifierKind":[123]},{"name":"name","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[148],"required":true},{"name":"sanitizer","defaultValue":"inject(DomSanitizer)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":37,"modifierKind":[123]},{"name":"size","defaultValue":"20","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":28,"modifierKind":[148],"required":false},{"name":"svg","deprecated":false,"deprecationMessage":"","type":"Observable<string>","indexKey":"","optional":false,"description":"","line":35},{"name":"svgContent","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"SafeHtml | null","indexKey":"","optional":false,"description":"","line":34}],"methodsClass":[{"name":"setSvgContent","args":[{"name":"svgName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"svgName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport {\\n  ChangeDetectionStrategy,\\n  ChangeDetectorRef,\\n  Component,\\n  DestroyRef,\\n  effect,\\n  inject,\\n  input,\\n} from \\"@angular/core\\";\\nimport { takeUntilDestroyed } from \\"@angular/core/rxjs-interop\\";\\nimport { DomSanitizer, SafeHtml } from \\"@angular/platform-browser\\";\\nimport { Observable } from \\"rxjs\\";\\n\\nimport { IconService, RegularIconIdKey, TogglableIconIdKey } from \\"./icon.service\\";\\n\\n@Component({\\n  selector: \\"rte-icon\\",\\n  imports: [CommonModule],\\n  standalone: true,\\n  templateUrl: \\"./icon.component.html\\",\\n  styleUrl: \\"./icon.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  providers: [IconService],\\n})\\nexport class IconComponent {\\n  readonly name = input.required<string>();\\n  readonly size = input(20);\\n  readonly color = input(\\"currentColor\\");\\n  readonly classes = input(\\"\\");\\n  readonly appearance = input<\\"outlined\\" | \\"filled\\">();\\n  destroyRef = inject(DestroyRef);\\n\\n  svgContent: SafeHtml | null = null;\\n  svg!: Observable<string>;\\n\\n  private sanitizer = inject(DomSanitizer);\\n  private iconService = inject(IconService);\\n  private cdr = inject(ChangeDetectorRef);\\n\\n  constructor() {\\n    effect(() => {\\n      this.setSvgContent(this.name());\\n    });\\n  }\\n\\n  private setSvgContent(svgName: string) {\\n    const svgFile = this.iconService.getSvg(\\n      svgName as RegularIconIdKey | TogglableIconIdKey,\\n      this.appearance() || \\"outlined\\",\\n    );\\n\\n    svgFile.pipe(takeUntilDestroyed(this.destroyRef)).subscribe((res) => {\\n      const size = this.size();\\n      const svgWithSize = res.replace(/<svg([^>]*)>/, `<svg$1 width=\\"${size}\\" height=\\"${size}\\">`);\\n\\n      this.svgContent = this.sanitizer.bypassSecurityTrustHtml(svgWithSize);\\n      this.cdr.markForCheck();\\n    });\\n  }\\n}\\n","styleUrl":"./icon.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":39},"extends":[],"templateData":"<div class=\\"rte-icon-container\\" [innerHTML]=\\"svgContent\\" [style.height]=\\"(size())+\'px\'\\" [style.width]=\\"(size())+\'px\'\\"></div>"},{"name":"LinkComponent","id":"component-LinkComponent-73c028735c6f86f44d05a10cc7b23ea2dece1e9c97775661224ceef609855710058aff363684a63b0182290040ff20a20b97dbdf1d35a1bcfd3d2917b8081f8d","file":"projects/ds-rte-lib/src/lib/components/link/link.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-link","styleUrls":[],"styles":[],"templateUrl":["./link.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"externalLink","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148],"required":false},{"name":"subtle","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":17,"modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[{"name":"externalLink","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148],"required":false},{"name":"href","defaultValue":"input<string>(\\"#\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":16,"modifierKind":[148]},{"name":"label","defaultValue":"input(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":15,"modifierKind":[148]},{"name":"subtle","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":17,"modifierKind":[148],"required":false}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, input } from \\"@angular/core\\";\\n\\nimport { IconComponent } from \\"../icon/icon.component\\";\\n\\n@Component({\\n  selector: \\"rte-link\\",\\n  imports: [CommonModule, IconComponent],\\n  standalone: true,\\n  templateUrl: \\"./link.component.html\\",\\n  styleUrl: \\"./link.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class LinkComponent {\\n  readonly label = input(\\"\\");\\n  readonly href = input<string>(\\"#\\");\\n  readonly subtle = input<boolean>(false);\\n  readonly externalLink = input<boolean>(false);\\n}\\n","styleUrl":"./link.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<a href=\\"{{ href() }}\\" class=\\"rte-link\\" role=\\"link\\" [ngClass]=\\"{\'subtle\': subtle()}\\" [target]=\\"externalLink() ? \'_blank\' : undefined\\" [rel]=\\"externalLink() ? \'noopener noreferrer\' : null\\">\\n    <span class=\\"rte-link-label\\">\\n        {{ label() }}\\n    </span>\\n    <rte-icon *ngIf=\\"externalLink()\\" name=\\"external-link\\" [size]=\\"12\\"></rte-icon>\\n</a>"},{"name":"RadioButtonComponent","id":"component-RadioButtonComponent-bebabdaed56c95c72862c6247c35b478435c8d1709c847f4df0ac78c45279bca721b11a58731b276b3f8f899a6374ae372bc2ecfa12b12f1db7e9cfbd2c67c64","file":"projects/ds-rte-lib/src/lib/components/radio-button/radio-button.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-radio-button","styleUrls":[],"styles":[],"templateUrl":["./radio-button.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":17,"modifierKind":[148],"required":false},{"name":"error","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148],"required":false},{"name":"readOnly","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":19,"modifierKind":[148],"required":false},{"name":"showLabel","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":16,"modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":17,"modifierKind":[148],"required":false},{"name":"error","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148],"required":false},{"name":"groupName","defaultValue":"input(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":15,"modifierKind":[148]},{"name":"isDisplayed","defaultValue":"computed(() => !(this.disabled() && this.error()))","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148]},{"name":"label","defaultValue":"input(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":14,"modifierKind":[148]},{"name":"labelSize","defaultValue":"labelSize","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":20},{"name":"readOnly","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":19,"modifierKind":[148],"required":false},{"name":"showLabel","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":16,"modifierKind":[148],"required":false}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, computed, input } from \\"@angular/core\\";\\nimport { labelSize } from \\"@design-system-rte/core/components/radio-button/radio-button.constants\\";\\n\\n@Component({\\n  selector: \\"rte-radio-button\\",\\n  imports: [CommonModule],\\n  standalone: true,\\n  templateUrl: \\"./radio-button.component.html\\",\\n  styleUrl: \\"./radio-button.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class RadioButtonComponent {\\n  readonly label = input(\\"\\");\\n  readonly groupName = input(\\"\\");\\n  readonly showLabel = input(true);\\n  readonly disabled = input(false);\\n  readonly error = input(false);\\n  readonly readOnly = input(false);\\n  labelSize = labelSize;\\n\\n  readonly isDisplayed = computed(() => !(this.disabled() && this.error()));\\n}\\n","styleUrl":"./radio-button.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"    <div *ngIf=\\"isDisplayed()\\" class=\\"rte-radio-button-container\\">\\n        <input\\n            type=\\"radio\\"\\n            class=\\"rte-radio-button\\"\\n            [id]=\\"label()\\"\\n            [value]=\\"label()\\"\\n            [size]=\\"labelSize\\"\\n            [name]=\\"groupName()\\"\\n            [ngClass]=\\"{\'error\': error(), \'read-only\': readOnly()}\\"\\n            [disabled]=\\"disabled()\\"\\n        />\\n        <label \\n            *ngIf=\\"showLabel()\\" \\n            class=\\"rte-radio-button-label\\" \\n            [for]=\\"label()\\"\\n            [ngClass]=\\"{\\n                \'error\': error(),\\n                \'read-only\': readOnly(),\\n                \'disabled\': disabled()\\n            }\\"\\n        >\\n            {{ label() }}\\n        </label>\\n    </div>\\n"},{"name":"RadioButtonGroupComponent","id":"component-RadioButtonGroupComponent-31b63baedfac895232c5d98ae8f6cf0b2379fb22e41f4ff204fd967df09d8f03d4facfbb41ec84f0d9768ced49975efea06c5979a396f7a4cb85ef435a48be1a","file":"projects/ds-rte-lib/src/lib/components/radio-button-group/radio-button-group.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-radio-button-group","styleUrls":[],"styles":[],"templateUrl":["./radio-button-group.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148],"required":false},{"name":"error","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":24,"modifierKind":[148],"required":false},{"name":"readOnly","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148],"required":false},{"name":"showGroupTitle","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":20,"modifierKind":[148],"required":false},{"name":"showHelpText","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148],"required":false},{"name":"showItemsLabel","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[{"name":"direction","defaultValue":"input(\\"horizontal\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":17,"modifierKind":[148]},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148],"required":false},{"name":"error","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":24,"modifierKind":[148],"required":false},{"name":"errorMessage","defaultValue":"input(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":23,"modifierKind":[148]},{"name":"groupHelpText","defaultValue":"input(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":21,"modifierKind":[148]},{"name":"groupName","defaultValue":"input(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":15,"modifierKind":[148]},{"name":"groupTitle","defaultValue":"input(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":19,"modifierKind":[148]},{"name":"isDisplayed","defaultValue":"computed(() => !(this.disabled() && this.error()))","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":28,"modifierKind":[148]},{"name":"items","defaultValue":"input<string[]>([])","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":16,"modifierKind":[148]},{"name":"readOnly","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148],"required":false},{"name":"showGroupTitle","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":20,"modifierKind":[148],"required":false},{"name":"showHelpText","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148],"required":false},{"name":"showItemsLabel","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148],"required":false}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"RadioButtonComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, computed, input } from \\"@angular/core\\";\\n\\nimport { RadioButtonComponent } from \\"../radio-button/radio-button.component\\";\\n\\n@Component({\\n  selector: \\"rte-radio-button-group\\",\\n  imports: [CommonModule, RadioButtonComponent],\\n  standalone: true,\\n  templateUrl: \\"./radio-button-group.component.html\\",\\n  styleUrl: \\"./radio-button-group.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class RadioButtonGroupComponent {\\n  readonly groupName = input(\\"\\");\\n  readonly items = input<string[]>([]);\\n  readonly direction = input(\\"horizontal\\");\\n  readonly showItemsLabel = input(true);\\n  readonly groupTitle = input(\\"\\");\\n  readonly showGroupTitle = input(false);\\n  readonly groupHelpText = input(\\"\\");\\n  readonly showHelpText = input(false);\\n  readonly errorMessage = input(\\"\\");\\n  readonly error = input(false);\\n  readonly disabled = input(false);\\n  readonly readOnly = input(false);\\n\\n  readonly isDisplayed = computed(() => !(this.disabled() && this.error()));\\n}\\n","styleUrl":"./radio-button-group.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<div  \\n    *ngIf=\\"isDisplayed()\\"\\n    class=\\"radio-button-group-container\\">\\n    <div\\n        class=\\"radio-button-group-header\\"\\n        [ngClass]=\\"{\\n            \'disabled\': disabled(),\\n            \'error\': error(),\\n            \'read-only\': readOnly(),\\n        }\\">\\n        <h3\\n            *ngIf=\\"showGroupTitle()\\"\\n            class=\\"group-title\\"\\n            >\\n            {{ groupTitle() }}\\n        </h3>\\n        <p\\n            *ngIf=\\"showHelpText()\\"\\n            class=\\"group-help-text\\"\\n            >\\n            {{ groupHelpText() }}\\n\\n        </p>\\n        <p\\n            *ngIf=\\"error()\\"\\n            class=\\"group-error-message\\"\\n            >\\n            {{ errorMessage() }}\\n        </p>\\n    </div>\\n    <div class=\\"radio-button-group\\" \\n        [ngClass]=\\"{\'horizontal\': direction() === \'horizontal\', \'vertical\': direction() === \'vertical\'}\\">\\n        <ng-container \\n        *ngFor=\\"let item of items()\\">\\n            <rte-radio-button\\n                [label]=\\"item\\"\\n                [groupName]=\\"groupName()\\"\\n                [showLabel]=\\"showItemsLabel()\\"\\n                [disabled]=\\"disabled()\\"\\n                [error]=\\"error()\\"\\n                [readOnly]=\\"readOnly()\\"\\n            />\\n        </ng-container>\\n    </div>\\n</div>"},{"name":"SegmentedControlComponent","id":"component-SegmentedControlComponent-3a251c4dbf750590d9f8cc17821e77ef56549ba930e65539c4d9f291bb5e9bc805c7feb60996204012c818071d491fa3761d2a07dd78eb50c86a5cbd3e289414","file":"projects/ds-rte-lib/src/lib/components/segmented-control/segmented-control.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-segmented-control","styleUrls":[],"styles":[],"templateUrl":["./segmented-control.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"ariaLabel","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":54,"modifierKind":[148],"required":false},{"name":"ariaLabelledBy","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":55,"modifierKind":[148],"required":false},{"name":"selectedSegment","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":53,"modifierKind":[148],"required":false}],"outputsClass":[{"name":"change","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":52,"modifierKind":[148],"required":false}],"propertiesClass":[{"name":"ariaLabel","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":54,"modifierKind":[148],"required":false},{"name":"ariaLabelledBy","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":55,"modifierKind":[148],"required":false},{"name":"change","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":52,"modifierKind":[148],"required":false},{"name":"isValidOptions","defaultValue":"computed(() => isValidSegmentedControlOptions(this.options()))","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":67,"modifierKind":[148]},{"name":"lastKeydown","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"string | null","indexKey":"","optional":false,"description":"","line":159,"modifierKind":[123]},{"name":"onGlobalKeyDown","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":161,"modifierKind":[123]},{"name":"options","defaultValue":"input<SegmentOptions[]>([])","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":51,"modifierKind":[148]},{"name":"segmentRefs","defaultValue":"viewChildren<ElementRef<HTMLDivElement>>(\\"segment\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":57,"modifierKind":[148]},{"name":"segmentSelectedIndicatorStyle","defaultValue":"computed(() => ({\\n    left: `${this.sliderLeft()}px`,\\n    width: `${this.sliderWidth()}px`,\\n  }))","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":62,"modifierKind":[148]},{"name":"selectedSegment","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":53,"modifierKind":[148],"required":false},{"name":"sliderLeft","defaultValue":"signal(0)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":59,"modifierKind":[148]},{"name":"sliderWidth","defaultValue":"signal(0)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":60,"modifierKind":[148]}],"methodsClass":[{"name":"focusCurrentSegmentElement","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":165,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getSegmentPosition","args":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"","typeParameters":[],"line":145,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleKeyDown","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":128,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleKeyUp","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isSegmentSelected","args":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":""},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":69,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":85,"deprecated":false,"deprecationMessage":""},{"name":"selectSegment","args":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":94,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"updateSelectedSegmentIndicator","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport {\\n  ChangeDetectionStrategy,\\n  Component,\\n  ElementRef,\\n  input,\\n  output,\\n  viewChildren,\\n  AfterViewInit,\\n  OnDestroy,\\n  computed,\\n  signal,\\n  OnChanges,\\n  SimpleChanges,\\n} from \\"@angular/core\\";\\nimport {\\n  getSegmentPosition,\\n  focusNextNotSegmentElement,\\n  focusPreviousNotSegmentElement,\\n  focusNextSegmentElement,\\n  focusPreviousSegmentElement,\\n  isValidSegmentedControlOptions,\\n} from \\"@design-system-rte/core/components/segmented-control/segmented-control-utils\\";\\nimport {\\n  SegmentOptions,\\n  SegmentProps,\\n} from \\"@design-system-rte/core/components/segmented-control/segmented-control.interface\\";\\nimport { FOCUSABLE_ELEMENTS_QUERY } from \\"@design-system-rte/core/constants/dom/dom.constants\\";\\nimport {\\n  ARROW_LEFT_KEY,\\n  ARROW_RIGHT_KEY,\\n  ENTER_KEY,\\n  SPACE_KEY,\\n  TAB_KEY,\\n} from \\"@design-system-rte/core/constants/keyboard/keyboard.constants\\";\\n\\nimport { IconComponent } from \\"../icon/icon.component\\";\\n\\nconst segmentClass = \\"rte-segment\\";\\nconst segmentSelector = `.${segmentClass}`;\\n\\n@Component({\\n  selector: \\"rte-segmented-control\\",\\n  imports: [CommonModule, IconComponent],\\n  standalone: true,\\n  templateUrl: \\"./segmented-control.component.html\\",\\n  styleUrl: \\"./segmented-control.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class SegmentedControlComponent implements OnChanges, AfterViewInit, OnDestroy {\\n  readonly options = input<SegmentOptions[]>([]);\\n  readonly change = output<string>();\\n  readonly selectedSegment = input<string>();\\n  readonly ariaLabel = input<string>();\\n  readonly ariaLabelledBy = input<string>();\\n\\n  readonly segmentRefs = viewChildren<ElementRef<HTMLDivElement>>(\\"segment\\");\\n\\n  readonly sliderLeft = signal(0);\\n  readonly sliderWidth = signal(0);\\n\\n  readonly segmentSelectedIndicatorStyle = computed(() => ({\\n    left: `${this.sliderLeft()}px`,\\n    width: `${this.sliderWidth()}px`,\\n  }));\\n\\n  readonly isValidOptions = computed(() => isValidSegmentedControlOptions(this.options()));\\n\\n  ngOnChanges(changes: SimpleChanges): void {\\n    if (changes[\\"selectedSegment\\"]) {\\n      this.updateSelectedSegmentIndicator();\\n    }\\n  }\\n\\n  ngAfterViewInit() {\\n    this.updateSelectedSegmentIndicator();\\n    window.addEventListener(\\"resize\\", this.updateSelectedSegmentIndicator.bind(this));\\n    window.addEventListener(\\"keydown\\", this.onGlobalKeyDown.bind(this));\\n\\n    this.segmentRefs().forEach((segmentElement) => {\\n      segmentElement.nativeElement.addEventListener(\\"focus\\", this.focusCurrentSegmentElement.bind(this));\\n    });\\n  }\\n\\n  ngOnDestroy() {\\n    window.removeEventListener(\\"resize\\", this.updateSelectedSegmentIndicator.bind(this));\\n    window.removeEventListener(\\"keydown\\", this.onGlobalKeyDown.bind(this));\\n\\n    this.segmentRefs().forEach((segmentElement) => {\\n      segmentElement.nativeElement.addEventListener(\\"focus\\", this.focusCurrentSegmentElement.bind(this));\\n    });\\n  }\\n\\n  selectSegment(id: string) {\\n    this.change.emit(id);\\n  }\\n\\n  isSegmentSelected(id: string): boolean {\\n    return this.selectedSegment() === id;\\n  }\\n\\n  handleKeyUp(event: KeyboardEvent) {\\n    event.preventDefault();\\n    if (event.key === ARROW_RIGHT_KEY || event.key === ARROW_LEFT_KEY) {\\n      const allSegmentElements =\\n        Array.from(\\n          document.activeElement?.parentElement?.parentElement?.querySelectorAll(\\n            segmentSelector,\\n          ) as NodeListOf<HTMLElement>,\\n        ) || [];\\n\\n      const currentActiveSegmentElementIndex = Array.from(allSegmentElements).findIndex(\\n        (element) => element === document.activeElement,\\n      );\\n\\n      if (event.key === ARROW_RIGHT_KEY) {\\n        focusNextSegmentElement(currentActiveSegmentElementIndex, allSegmentElements);\\n      } else if (event.key === ARROW_LEFT_KEY) {\\n        focusPreviousSegmentElement(currentActiveSegmentElementIndex, allSegmentElements);\\n      }\\n    } else if (event.key === SPACE_KEY || event.key === ENTER_KEY) {\\n      const target = event.target as HTMLElement;\\n      const dataId = target.getAttribute(\\"data-id\\");\\n      this.selectSegment(dataId || \\"\\");\\n    }\\n  }\\n\\n  handleKeyDown(event: KeyboardEvent) {\\n    if (event.key === TAB_KEY || event.key === SPACE_KEY || event.key === ENTER_KEY) {\\n      event.preventDefault();\\n    }\\n    if (event.key === TAB_KEY) {\\n      const allFocusableElements = Array.from(document.querySelectorAll(FOCUSABLE_ELEMENTS_QUERY)) as HTMLElement[];\\n      const currentActiveElement = document.activeElement;\\n      const currentIndex = allFocusableElements.indexOf(currentActiveElement as HTMLElement);\\n\\n      if (event.shiftKey) {\\n        focusPreviousNotSegmentElement(currentIndex, allFocusableElements, segmentClass);\\n      } else {\\n        focusNextNotSegmentElement(currentIndex, allFocusableElements, segmentClass);\\n      }\\n    }\\n  }\\n\\n  getSegmentPosition(index: number): SegmentProps[\\"position\\"] {\\n    return getSegmentPosition(index, this.options().length);\\n  }\\n\\n  private updateSelectedSegmentIndicator() {\\n    const idx = this.options().findIndex((opt) => opt.id === this.selectedSegment());\\n    const segment = this.segmentRefs()[idx]?.nativeElement;\\n\\n    if (segment) {\\n      this.sliderWidth.set(segment.offsetWidth);\\n      this.sliderLeft.set(segment.offsetLeft);\\n    }\\n  }\\n\\n  private lastKeydown: string | null = null;\\n\\n  private onGlobalKeyDown = (event: KeyboardEvent) => {\\n    this.lastKeydown = event.key;\\n  };\\n\\n  private focusCurrentSegmentElement() {\\n    if (this.lastKeydown === \\"Tab\\") {\\n      const selectedSegmentElement = this.segmentRefs().find((segment) =>\\n        segment.nativeElement.classList.contains(\\"selected\\"),\\n      )?.nativeElement;\\n      if (selectedSegmentElement) {\\n        selectedSegmentElement.focus();\\n      } else {\\n        this.segmentRefs()[0]?.nativeElement?.focus();\\n      }\\n    }\\n  }\\n}\\n","styleUrl":"./segmented-control.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"implements":["OnChanges","AfterViewInit","OnDestroy"],"templateData":"<div *ngIf=\\"isValidOptions()\\" class=\\"rte-segmented-control\\" role=\\"radiogroup\\" [attr.aria-label]=\\"ariaLabel()\\">\\n  <span class=\\"rte-segment-selected-indicator\\" [ngStyle]=\\"segmentSelectedIndicatorStyle()\\"></span>\\n  <ng-container *ngFor=\\"let option of options(); let idx = index\\">\\n    <div class=\\"rte-segment-container\\" [attr.data-position]=\\"getSegmentPosition(idx)\\">\\n      <div\\n      #segment\\n      role=\\"radio\\"\\n      class=\\"rte-segment\\"\\n      tabindex=\\"0\\"\\n      [attr.data-id]=\\"option.id\\"\\n      [attr.data-segment-type]=\\"option.icon ?  \'icon\' : \'label\'\\"\\n      [class.selected]=\\"isSegmentSelected(option.id)\\"\\n      [attr.aria-checked]=\\"isSegmentSelected(option.id)\\"\\n      [attr.aria-label]=\\"option.label\\"\\n      (click)=\\"selectSegment(option.id)\\"\\n      (keydown)=\\"handleKeyDown($event)\\"\\n      (keyup)=\\"handleKeyUp($event)\\"\\n      >\\n      <rte-icon\\n          *ngIf=\\"isSegmentSelected(option.id)\\"\\n          name=\\"check-small\\"\\n          class=\\"rte-selected-icon\\"\\n          [size]=\\"24\\"\\n      />\\n      <div class=\\"rte-segment-content\\">\\n        <ng-container *ngIf=\\"option.icon; else label\\">\\n          <rte-icon [name]=\\"option.icon\\" [size]=\\"24\\" [appearance]=\\"isSegmentSelected(option.id) ? \'filled\' : \'outlined\' \\"></rte-icon>\\n        </ng-container>\\n        <ng-template #label>\\n          <span class=\\"rte-segment-label\\">{{ option.label }}</span>\\n        </ng-template>\\n      </div>\\n    </div>\\n  </div>\\n  </ng-container>\\n</div>"},{"name":"SplitButtonComponent","id":"component-SplitButtonComponent-ec347edf83082ab86e4dd701ddfd48f615ebc7fc55e986a4025fd900a8c2291fb06d313f73a844c7e913d7e172aa60aab0f0fcf52fd73dc5c31009d3df9cfd14","file":"projects/ds-rte-lib/src/lib/components/split-button/split-button.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-split-button","styleUrls":[],"styles":[],"templateUrl":["./split-button.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"ariaLabelRight","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":33,"modifierKind":[148],"required":false},{"name":"compactSpacing","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":28,"modifierKind":[148],"required":false},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":32,"modifierKind":[148],"required":false},{"name":"label","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[148],"required":true},{"name":"selected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":29,"modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[{"name":"appearance","defaultValue":"input<SplitButtonAppearance>(\\"primary\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148]},{"name":"ariaLabelRight","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":33,"modifierKind":[148],"required":false},{"name":"compactSpacing","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":28,"modifierKind":[148],"required":false},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":32,"modifierKind":[148],"required":false},{"name":"icon","defaultValue":"input<RegularIconIdKey | TogglableIconIdKey | null>(null)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":31,"modifierKind":[148]},{"name":"isOpen","defaultValue":"signal(false)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":38,"modifierKind":[148]},{"name":"label","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[148],"required":true},{"name":"position","defaultValue":"input<SplitButtonPosition>(\\"bottom-start\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":30,"modifierKind":[148]},{"name":"selected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":29,"modifierKind":[148],"required":false},{"name":"size","defaultValue":"input<SplitButtonSize>(\\"m\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148]},{"name":"splitButtonLeftIconSize","defaultValue":"computed(() => splitButtonLeftIconSize[this.size()])","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":35,"modifierKind":[148]},{"name":"splitButtonRightIconSize","defaultValue":"computed(() => splitButtonRightIconSize[this.size()])","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":36,"modifierKind":[148]}],"methodsClass":[{"name":"handleKeyDown","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""},{"name":"key","type":"string","deprecated":false,"deprecationMessage":""},{"name":"callback","type":"function","deprecated":false,"deprecationMessage":"","function":[]}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"key","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"callback","type":"function","deprecated":false,"deprecationMessage":"","function":[],"tagName":{"text":"param"}}]},{"name":"handleKeyDownOnMenu","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleKeyDownOnRightButton","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":40,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, computed, input, signal } from \\"@angular/core\\";\\nimport {\\n  splitButtonLeftIconSize,\\n  splitButtonRightIconSize,\\n} from \\"@design-system-rte/core/components/split-button/split-button.constants\\";\\nimport {\\n  SplitButtonAppearance,\\n  SplitButtonPosition,\\n  SplitButtonSize,\\n} from \\"@design-system-rte/core/components/split-button/split-button.interface\\";\\n\\nimport { IconComponent } from \\"../icon/icon.component\\";\\nimport { RegularIconIdKey, TogglableIconIdKey } from \\"../icon/icon.service\\";\\n\\n@Component({\\n  selector: \\"rte-split-button\\",\\n  imports: [CommonModule, IconComponent],\\n  standalone: true,\\n  templateUrl: \\"./split-button.component.html\\",\\n  styleUrl: \\"./split-button.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class SplitButtonComponent {\\n  readonly appearance = input<SplitButtonAppearance>(\\"primary\\");\\n  readonly size = input<SplitButtonSize>(\\"m\\");\\n  readonly label = input.required<string>();\\n  readonly compactSpacing = input(false);\\n  readonly selected = input(false);\\n  readonly position = input<SplitButtonPosition>(\\"bottom-start\\");\\n  readonly icon = input<RegularIconIdKey | TogglableIconIdKey | null>(null);\\n  readonly disabled = input(false);\\n  readonly ariaLabelRight = input<string>();\\n\\n  readonly splitButtonLeftIconSize = computed(() => splitButtonLeftIconSize[this.size()]);\\n  readonly splitButtonRightIconSize = computed(() => splitButtonRightIconSize[this.size()]);\\n\\n  readonly isOpen = signal(false);\\n\\n  handleKeyDownOnRightButton(event: KeyboardEvent): void {\\n    this.handleKeyDown(event, \\"ArrowDown\\", () => this.isOpen.set(true));\\n    this.handleKeyDown(event, \\"Escape\\", () => this.isOpen.set(false));\\n  }\\n\\n  handleKeyDownOnMenu(event: KeyboardEvent): void {\\n    this.handleKeyDown(event, \\"Escape\\", () => this.isOpen.set(false));\\n  }\\n\\n  private handleKeyDown(event: KeyboardEvent, key: string, callback: () => void): void {\\n    if (event.key === key) {\\n      event.preventDefault();\\n      callback();\\n    }\\n  }\\n}\\n","styleUrl":"./split-button.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<div \\n  class=\\"split-button-container size-{{ size() }} {{appearance()}}\\"\\n  [ngClass]=\\"{\'compact-spacing\': compactSpacing()}\\"\\n>\\n  <button\\n    class=\\"split-button-left size-{{ size() }}\\"\\n    data-testid=\\"Main action button\\" \\n    type=\\"button\\"\\n    [disabled]=\\"disabled()\\"\\n  >\\n    <rte-icon \\n      *ngIf=\\"icon()\\"\\n      [name]=\\"icon()!\\"\\n      [size]=\\"splitButtonLeftIconSize()\\"\\n    />\\n    <p class=\\"split-button-label size-{{ size() }}\\">\\n      {{label()}}\\n    </p>\\n  </button>\\n\\n  <div \\n    class=\\"split-button-divider\\"\\n    [ngClass]=\\"{\'disabled\': disabled()}\\"\\n  ></div>\\n\\n  <div class=\\"split-button-right-container\\">\\n    <button\\n      class=\\"split-button-right size-{{ size() }}\\"\\n      data-testid=\\"Menu button\\"\\n      type=\\"button\\"\\n      aria-haspopup=\\"menu\\"\\n      [attr.aria-expanded]=\\"isOpen()\\"\\n      [attr.aria-label]=\\"ariaLabelRight()\\"\\n      [attr.data-selected]=\\"selected()\\"\\n      [disabled]=\\"disabled()\\"\\n      (click)=\\"isOpen.set(true)\\"\\n      (mouseenter)=\\"isOpen.set(true)\\"\\n      (mouseleave)=\\"isOpen.set(false)\\"\\n      (keydown)=\\"handleKeyDownOnRightButton($event)\\"\\n    >\\n      <div class=\\"split-button-right-icon-container\\">\\n        <rte-icon name=\\"arrow-chevron-down\\" [size]=\\"splitButtonRightIconSize()\\"/>\\n      </div>\\n    </button>\\n\\n    <div\\n      class=\\"split-button-dropdown position-{{ position() }}\\"\\n      role=\\"menu\\"\\n      data-testid=\\"Menu container\\"\\n      [style.visibility]=\\"isOpen() ? \'visible\' : \'hidden\'\\"\\n      (keydown)=\\"handleKeyDownOnMenu($event)\\"\\n    >\\n      <ng-content/>\\n    </div>\\n  </div>\\n</div>"},{"name":"SwitchComponent","id":"component-SwitchComponent-5362ea5e7dc451eb9a3783d3e1e85c88ca81163d2a6619c0f85f7345f4632fdc967523b367d62bd76921de3070d4d8566539ddf5e72184c9817547d3e6d76812","file":"projects/ds-rte-lib/src/lib/components/switch/switch.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-switch","styleUrls":[],"styles":[],"templateUrl":["./switch.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"checked","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":23,"modifierKind":[148],"required":false},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":21,"modifierKind":[148],"required":false},{"name":"readOnly","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148],"required":false},{"name":"showIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":20,"modifierKind":[148],"required":false},{"name":"showLabel","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":19,"modifierKind":[148],"required":false}],"outputsClass":[{"name":"stateChange","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148],"required":false}],"propertiesClass":[{"name":"appearance","defaultValue":"input<SwitchProps[\\"appearance\\"]>(\\"brand\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148]},{"name":"checked","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":23,"modifierKind":[148],"required":false},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":21,"modifierKind":[148],"required":false},{"name":"isChecked","defaultValue":"signal(false)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":30,"modifierKind":[148]},{"name":"label","defaultValue":"input(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":17,"modifierKind":[148]},{"name":"readOnly","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148],"required":false},{"name":"showIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":20,"modifierKind":[148],"required":false},{"name":"showLabel","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":19,"modifierKind":[148],"required":false},{"name":"stateChange","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148],"required":false},{"name":"switchHeight","defaultValue":"switchHeight","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":27},{"name":"switchWidth","defaultValue":"switchWidth","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":28}],"methodsClass":[{"name":"handleChange","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleClick","args":[{"name":"event","type":"MouseEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"MouseEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, input, signal, OnInit, output } from \\"@angular/core\\";\\nimport { switchHeight, switchWidth } from \\"@design-system-rte/core/components/switch/switch.constants\\";\\nimport { SwitchProps } from \\"@design-system-rte/core/components/switch/switch.interface\\";\\n\\nimport { IconComponent } from \\"../icon/icon.component\\";\\n\\n@Component({\\n  selector: \\"rte-switch\\",\\n  imports: [CommonModule, IconComponent],\\n  standalone: true,\\n  templateUrl: \\"./switch.component.html\\",\\n  styleUrl: \\"./switch.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class SwitchComponent implements OnInit {\\n  readonly label = input(\\"\\");\\n  readonly appearance = input<SwitchProps[\\"appearance\\"]>(\\"brand\\");\\n  readonly showLabel = input(true);\\n  readonly showIcon = input(true);\\n  readonly disabled = input(false);\\n  readonly readOnly = input(false);\\n  readonly checked = input(false);\\n\\n  readonly stateChange = output<Event>();\\n\\n  switchHeight = switchHeight;\\n  switchWidth = switchWidth;\\n\\n  readonly isChecked = signal(false);\\n\\n  ngOnInit() {\\n    this.isChecked.set(this.checked());\\n  }\\n\\n  handleChange(event: Event): void {\\n    const target = event.target as HTMLInputElement;\\n    this.isChecked.set(target.checked);\\n    this.stateChange.emit(event);\\n  }\\n\\n  handleClick(event: MouseEvent): void {\\n    if (this.readOnly() || this.disabled()) {\\n      event.stopPropagation();\\n    } else {\\n      const inputElement = (event.currentTarget as HTMLInputElement).querySelector<HTMLInputElement>(\\n        \'input[type=\\"checkbox\\"]\',\\n      );\\n      if (inputElement) {\\n        inputElement.checked = !this.isChecked();\\n        const changeEvent = new Event(\\"change\\", { bubbles: true });\\n        Object.defineProperty(changeEvent, \\"target\\", {\\n          value: inputElement,\\n          writable: false,\\n        });\\n        this.handleChange(changeEvent);\\n      }\\n    }\\n  }\\n}\\n","styleUrl":"./switch.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"implements":["OnInit"],"templateData":"<div\\n    class=\\"switch-container appearance-{{appearance()}}\\"\\n    [ngClass]=\\"{\\n        \'disabled\': disabled(),\\n        \'read-only\': readOnly(),\\n        \'checked\': isChecked()\\n    }\\"\\n    (click)=\\"handleClick($event)\\"\\n>\\n    <input\\n        type=\\"checkbox\\"\\n        role=\\"switch\\"\\n        class=\\"switch\\"\\n        [attr.aria-checked]=\\"isChecked()\\"\\n        [attr.aria-label]=\\"label()\\"\\n        [attr.aria-disabled]=\\"disabled()\\"\\n        [attr.aria-readonly]=\\"readOnly()\\"\\n        [ariaLabel]=\\"label()\\"\\n        [name]=\\"label()\\"\\n        [ngClass]=\\"{\\n        \'disabled\': disabled(),\\n        \'read-only\': readOnly(),\\n        \'checked\': isChecked()\\n    }\\"\\n        [style.min-height.px]=\\"switchHeight\\"\\n        [style.min-width.px]=\\"switchWidth\\"\\n        [disabled]=\\"disabled()\\"\\n        [checked]=\\"isChecked()\\"\\n    />\\n    <div class=\\"switch-icon-check\\" [ngClass]=\\"{\'checked\': isChecked() }\\" (click)=\\"handleClick($event)\\">\\n        @if (showIcon()) {\\n            <rte-icon\\n            class=\\"icon\\"\\n            [name]=\\"isChecked() ? \'check\' : \'close\'\\"\\n            [size]=\\"16\\"\\n            (click)=\\"handleClick($event)\\"\\n            ></rte-icon>\\n        }\\n    </div>\\n    @if (showLabel() && label()) {\\n        <label\\n            class=\\"switch-label\\"\\n            [for]=\\"label()\\"\\n        >\\n        {{ label() }}\\n    </label>\\n    }\\n</div>"},{"name":"TagComponent","id":"component-TagComponent-33f6897c383fb84098ddccb51ce5c97575a1aa3615ac4ac9914a89a650ebfa69eef8b01ea028c9cdb401264d94aaa4ba90e6cf478a41f0e5f58995d1731cfea2","file":"projects/ds-rte-lib/src/lib/components/tag/tag.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-tag","styleUrls":[],"styles":[],"templateUrl":["./tag.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"compactSpacing","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":21,"modifierKind":[148],"required":false},{"name":"showLeftIcon","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":23,"modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[{"name":"color","defaultValue":"input<TagProps[\\"color\\"]>(\\"brand\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":20,"modifierKind":[148]},{"name":"compactSpacing","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":21,"modifierKind":[148],"required":false},{"name":"computedIconName","defaultValue":"computed(() => {\\n    if (this.tagType() === \\"status\\") {\\n      const statusIconMap: Record<string, RegularIconIdKey | TogglableIconIdKey> = {\\n        success: \\"check-circle\\",\\n        information: \\"info\\",\\n        warning: \\"warning\\",\\n        alert: \\"dangerous\\",\\n      };\\n      const statusValue = this.status();\\n      if (statusValue && statusIconMap[statusValue]) {\\n        return statusIconMap[statusValue];\\n      }\\n    }\\n    return this.iconName() ?? \\"check\\";\\n  })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148]},{"name":"iconName","defaultValue":"input<RegularIconIdKey | TogglableIconIdKey>()","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":24,"modifierKind":[148]},{"name":"isValidIconName","defaultValue":"computed(() => {\\n    const iconName = this.computedIconName();\\n    return !!iconName && isValidIconName(iconName);\\n  })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":42,"modifierKind":[148]},{"name":"label","defaultValue":"input<string>(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148]},{"name":"showLeftIcon","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":23,"modifierKind":[148],"required":false},{"name":"status","defaultValue":"input<TagProps[\\"status\\"]>(\\"success\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":19,"modifierKind":[148]},{"name":"tagType","defaultValue":"input<TagProps[\\"tagType\\"]>(\\"status\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, input, computed } from \\"@angular/core\\";\\nimport { TagProps } from \\"@design-system-rte/core/components/tag/tag.interface\\";\\n\\nimport { isValidIconName } from \\"../icon/icon-map\\";\\nimport { IconComponent } from \\"../icon/icon.component\\";\\nimport { RegularIconIdKey, TogglableIconIdKey } from \\"../icon/icon.service\\";\\n\\n@Component({\\n  selector: \\"rte-tag\\",\\n  imports: [CommonModule, IconComponent],\\n  standalone: true,\\n  templateUrl: \\"./tag.component.html\\",\\n  styleUrl: \\"./tag.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class TagComponent {\\n  readonly tagType = input<TagProps[\\"tagType\\"]>(\\"status\\");\\n  readonly status = input<TagProps[\\"status\\"]>(\\"success\\");\\n  readonly color = input<TagProps[\\"color\\"]>(\\"brand\\");\\n  readonly compactSpacing = input<boolean>(false);\\n  readonly label = input<string>(\\"\\");\\n  readonly showLeftIcon = input<boolean>(false);\\n  readonly iconName = input<RegularIconIdKey | TogglableIconIdKey>();\\n\\n  readonly computedIconName = computed(() => {\\n    if (this.tagType() === \\"status\\") {\\n      const statusIconMap: Record<string, RegularIconIdKey | TogglableIconIdKey> = {\\n        success: \\"check-circle\\",\\n        information: \\"info\\",\\n        warning: \\"warning\\",\\n        alert: \\"dangerous\\",\\n      };\\n      const statusValue = this.status();\\n      if (statusValue && statusIconMap[statusValue]) {\\n        return statusIconMap[statusValue];\\n      }\\n    }\\n    return this.iconName() ?? \\"check\\";\\n  });\\n\\n  readonly isValidIconName = computed(() => {\\n    const iconName = this.computedIconName();\\n    return !!iconName && isValidIconName(iconName);\\n  });\\n}\\n","styleUrl":"./tag.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<div\\n    class=\\"rte-tag\\"\\n    [attr.data-tag-type]=\\"tagType()\\"\\n    [attr.data-status]=\\"status()\\"\\n    [attr.data-color]=\\"color()\\"\\n    [attr.data-compact-spacing]=\\"compactSpacing()\\"\\n>\\n    <ng-container *ngIf=\\"showLeftIcon() && isValidIconName()\\">\\n        <rte-icon [name]=\\"computedIconName()\\" [size]=\\"16\\"></rte-icon>\\n    </ng-container>\\n    <ng-container *ngIf=\\"label\\">\\n        <label class=\\"tag-label\\">{{ label() }}</label>\\n    </ng-container>\\n</div>"},{"name":"TextareaComponent","id":"component-TextareaComponent-1ac40c9466e63dbcfc77a62c6731dfa27c4d22c1b3a0b19ece51a284ce40ee1c32e3a1941a40db6be2f94a19868e0a50528bb6a5f264b71b9703a42ce0d60192","file":"projects/ds-rte-lib/src/lib/components/textarea/textarea.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[{"name":"{\\n    provide: NG_VALUE_ACCESSOR, useExisting: TextareaComponent, multi: true,\\n}","type":"component"}],"selector":"rte-textarea","styleUrls":[],"styles":[],"templateUrl":["./textarea.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":44,"modifierKind":[148],"required":false},{"name":"readOnly","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":45,"modifierKind":[148],"required":false},{"name":"required","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":40,"modifierKind":[148],"required":false},{"name":"rows","defaultValue":"3","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":47,"modifierKind":[148],"required":false},{"name":"showCounter","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":49,"modifierKind":[148],"required":false},{"name":"showLabelRequirement","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":41,"modifierKind":[148],"required":false}],"outputsClass":[{"name":"blur","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":62,"modifierKind":[148],"required":false},{"name":"change","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":61,"modifierKind":[148],"required":false}],"propertiesClass":[{"name":"ariaLabelledby","defaultValue":"input<string | undefined>(undefined)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":33,"modifierKind":[148]},{"name":"assistiveTextAppearance","defaultValue":"input<TextareaAssistiveTextAppearance>(\\"description\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":38,"modifierKind":[148]},{"name":"assistiveTextIconSize","defaultValue":"TEXTAREA_ICON_SIZE","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":51,"modifierKind":[148]},{"name":"assistiveTextLabel","defaultValue":"input<string | undefined>(undefined)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":37,"modifierKind":[148]},{"name":"assistiveTextLink","defaultValue":"input<string | undefined>(undefined)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":39,"modifierKind":[148]},{"name":"blur","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":62,"modifierKind":[148],"required":false},{"name":"change","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":61,"modifierKind":[148],"required":false},{"name":"characterCount","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","indexKey":"","optional":false,"description":"","line":70},{"name":"defaultValue","defaultValue":"input<string | undefined>(undefined)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":48,"modifierKind":[148]},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":44,"modifierKind":[148],"required":false},{"name":"id","defaultValue":"input<string | undefined>(undefined)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":31,"modifierKind":[148]},{"name":"isAssistiveTextLinkVisible","defaultValue":"computed(\\n    () => this.assistiveTextAppearance() === \\"link\\" && this.assistiveTextLink() !== undefined,\\n  )","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":66,"modifierKind":[148]},{"name":"isCounterVisible","defaultValue":"computed(() => {\\n    return this.showCounter() && this.maxLength();\\n  })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":72,"modifierKind":[148]},{"name":"label","defaultValue":"input<string | undefined>(undefined)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":34,"modifierKind":[148]},{"name":"labelId","defaultValue":"input<string | undefined>(undefined)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":35,"modifierKind":[148]},{"name":"labelPosition","defaultValue":"input<TextareaLabelPosition>(\\"top\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":36,"modifierKind":[148]},{"name":"maxLength","defaultValue":"input<number | undefined>(undefined)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":43,"modifierKind":[148]},{"name":"name","defaultValue":"input<string | undefined>(undefined)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":32,"modifierKind":[148]},{"name":"readOnly","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":45,"modifierKind":[148],"required":false},{"name":"required","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":40,"modifierKind":[148],"required":false},{"name":"requirementIndicatorValue","defaultValue":"computed(() =>\\n    this.required()\\n      ? this.showLabelRequirement()\\n        ? TEXTAREA_REQUIREMENT_INDICATOR_VALUE.required\\n        : TEXTAREA_REQUIREMENT_INDICATOR_VALUE.requiredIcon\\n      : TEXTAREA_REQUIREMENT_INDICATOR_VALUE.optional,\\n  )","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":53,"modifierKind":[148]},{"name":"resizeable","defaultValue":"input<boolean | string>(true)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":42,"modifierKind":[148]},{"name":"rows","defaultValue":"3","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":47,"modifierKind":[148],"required":false},{"name":"showCounter","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":49,"modifierKind":[148],"required":false},{"name":"showLabelRequirement","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":41,"modifierKind":[148],"required":false},{"name":"textareaRef","defaultValue":"viewChild<ElementRef<HTMLTextAreaElement>>(\\"textarea\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":64,"modifierKind":[148]},{"name":"value","defaultValue":"input<string | undefined>(undefined)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":46,"modifierKind":[148]}],"methodsClass":[{"name":"onBlur","args":[{"name":"event","type":"FocusEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":82,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"FocusEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onInput","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconComponent","type":"component"},{"name":"LinkComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { Component, input, computed, output, ElementRef, viewChild } from \\"@angular/core\\";\\nimport { NG_VALUE_ACCESSOR } from \\"@angular/forms\\";\\nimport {\\n  TEXTAREA_ICON_SIZE,\\n  TEXTAREA_REQUIREMENT_INDICATOR_VALUE,\\n} from \\"@design-system-rte/core/components/textarea/textarea.constants\\";\\nimport type {\\n  TextareaAssistiveTextAppearance,\\n  TextareaLabelPosition,\\n} from \\"@design-system-rte/core/components/textarea/textarea.interface\\";\\n\\nimport { IconComponent } from \\"../icon/icon.component\\";\\nimport { LinkComponent } from \\"../link/link.component\\";\\n\\n@Component({\\n  selector: \\"rte-textarea\\",\\n  imports: [CommonModule, IconComponent, LinkComponent],\\n  standalone: true,\\n  templateUrl: \\"./textarea.component.html\\",\\n  styleUrl: \\"./textarea.component.scss\\",\\n  providers: [\\n    {\\n      provide: NG_VALUE_ACCESSOR,\\n      useExisting: TextareaComponent,\\n      multi: true,\\n    },\\n  ],\\n})\\nexport class TextareaComponent {\\n  readonly id = input<string | undefined>(undefined);\\n  readonly name = input<string | undefined>(undefined);\\n  readonly ariaLabelledby = input<string | undefined>(undefined);\\n  readonly label = input<string | undefined>(undefined);\\n  readonly labelId = input<string | undefined>(undefined);\\n  readonly labelPosition = input<TextareaLabelPosition>(\\"top\\");\\n  readonly assistiveTextLabel = input<string | undefined>(undefined);\\n  readonly assistiveTextAppearance = input<TextareaAssistiveTextAppearance>(\\"description\\");\\n  readonly assistiveTextLink = input<string | undefined>(undefined);\\n  readonly required = input<boolean>(false);\\n  readonly showLabelRequirement = input<boolean>(false);\\n  readonly resizeable = input<boolean | string>(true);\\n  readonly maxLength = input<number | undefined>(undefined);\\n  readonly disabled = input<boolean>(false);\\n  readonly readOnly = input<boolean>(false);\\n  readonly value = input<string | undefined>(undefined);\\n  readonly rows = input<number>(3);\\n  readonly defaultValue = input<string | undefined>(undefined);\\n  readonly showCounter = input<boolean>(false);\\n\\n  readonly assistiveTextIconSize = TEXTAREA_ICON_SIZE;\\n\\n  readonly requirementIndicatorValue = computed(() =>\\n    this.required()\\n      ? this.showLabelRequirement()\\n        ? TEXTAREA_REQUIREMENT_INDICATOR_VALUE.required\\n        : TEXTAREA_REQUIREMENT_INDICATOR_VALUE.requiredIcon\\n      : TEXTAREA_REQUIREMENT_INDICATOR_VALUE.optional,\\n  );\\n\\n  readonly change = output<Event>();\\n  readonly blur = output<FocusEvent>();\\n\\n  readonly textareaRef = viewChild<ElementRef<HTMLTextAreaElement>>(\\"textarea\\");\\n\\n  readonly isAssistiveTextLinkVisible = computed(\\n    () => this.assistiveTextAppearance() === \\"link\\" && this.assistiveTextLink() !== undefined,\\n  );\\n\\n  characterCount = 0;\\n\\n  readonly isCounterVisible = computed(() => {\\n    return this.showCounter() && this.maxLength();\\n  });\\n\\n  onInput(event: Event) {\\n    const target = event.target as HTMLTextAreaElement;\\n    this.characterCount = target.value.length;\\n    this.change.emit(event);\\n  }\\n\\n  onBlur(event: FocusEvent) {\\n    this.textareaRef()?.nativeElement?.scrollTo({ top: 0 });\\n    this.blur.emit(event);\\n  }\\n}\\n","styleUrl":"./textarea.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<div class=\\"container\\" [attr.data-label-position]=\\"labelPosition()\\"> \\n  <label *ngIf=\\"label() && labelPosition() === \'side\'\\" [attr.data-label-position]=\\"labelPosition()\\" [attr.id]=\\"labelId()\\" [attr.for]=\\"id()\\">{{label()}}<span *ngIf=\\"required() || showLabelRequirement()\\" class=\\"requirement-indicator\\" aria-hidden=\\"true\\" [ngClass]=\\"{\'required\': required(), \'show-label-requirement\': showLabelRequirement() }\\">{{requirementIndicatorValue()}}</span></label>\\n  <div class=\\"top-position-container\\" [attr.data-label-position]=\\"labelPosition()\\">\\n    <div class=\\"header-container\\" [attr.data-label-position]=\\"labelPosition()\\">\\n      <label *ngIf=\\"label() && labelPosition() === \'top\'\\" [attr.id]=\\"labelId()\\" [attr.for]=\\"id()\\">{{label()}}<span *ngIf=\\"required() || showLabelRequirement()\\" class=\\"requirement-indicator\\" aria-hidden=\\"true\\" [ngClass]=\\"{\'required\': required(), \'show-label-requirement\': showLabelRequirement() }\\">{{requirementIndicatorValue()}}</span></label>\\n      <span *ngIf=\\"isCounterVisible()\\" class=\\"character-counter\\">{{ characterCount }}/{{ maxLength() }}</span>\\n    </div>\\n    <div class=\\"textarea-container\\" [attr.data-label-position]=\\"labelPosition()\\">\\n      <textarea\\n      #textarea\\n      class=\\"textarea {{ assistiveTextAppearance() }}\\"\\n      [class.resizeable]=\\"resizeable()\\"\\n      [attr.id]=\\"id()\\"\\n      [attr.name]=\\"name()\\"\\n      [attr.aria-labelledby]=\\"labelId() || ariaLabelledby()\\"\\n      [attr.required]=\\"required() || null\\"\\n      [attr.maxLength]=\\"maxLength() !== undefined ? maxLength() : null\\"\\n      [attr.disabled]=\\"disabled() || null\\"\\n      [attr.readonly]=\\"readOnly() || null\\"\\n      [value]=\\"value() !== undefined ? value() : null\\"\\n      [defaultValue]=\\"defaultValue() !== undefined ? defaultValue() : null\\"\\n      [attr.rows]=\\"rows()\\"\\n      (input)=\\"onInput($event)\\"\\n      (blur)=\\"onBlur($event)\\"\\n      ></textarea>\\n      <rte-link *ngIf=\\"isAssistiveTextLinkVisible()\\" class=\\"assistive-text-link\\" [externalLink]=\\"true\\" [href]=\\"assistiveTextLink() || \'\'\\" [label]=\\"assistiveTextLabel() || \'\'\\">\\n      </rte-link>\\n      <div *ngIf=\\"assistiveTextAppearance() !== \'link\'\\" class=\\"assistive-text {{ assistiveTextAppearance() }}\\" [ngClass]=\\"{\'disabled\' : disabled()}\\">\\n        <rte-icon *ngIf=\\"assistiveTextAppearance() === \'error\'\\" name=\\"error\\" [size]=\\"assistiveTextIconSize\\"></rte-icon>\\n        <rte-icon *ngIf=\\"assistiveTextAppearance() === \'success\'\\" name=\\"check-circle\\" [size]=\\"assistiveTextIconSize\\"></rte-icon>\\n        <span>{{ assistiveTextLabel() }}</span>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n"},{"name":"TextInputComponent","id":"component-TextInputComponent-a3cb18e77b68cc48af37e24d8350d078beab3980426f32aac2231101ed49d0471b1d3e53ba110096b6c6594a49ec262d249e18ee3d57d3bb1494f3d072fda804","file":"projects/ds-rte-lib/src/lib/components/text-input/text-input.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-text-input","styleUrls":[],"styles":[],"templateUrl":["./text-input.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"ariaRequired","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":38,"modifierKind":[148],"required":false},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":34,"modifierKind":[148],"required":false},{"name":"error","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":32,"modifierKind":[148],"required":false},{"name":"id","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148],"required":false},{"name":"maxLength","defaultValue":"150","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":33,"modifierKind":[148],"required":false},{"name":"readOnly","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":35,"modifierKind":[148],"required":false},{"name":"required","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":21,"modifierKind":[148],"required":false},{"name":"showAssistiveIcon","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":30,"modifierKind":[148],"required":false},{"name":"showCounter","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148],"required":false},{"name":"showLabelRequirement","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":28,"modifierKind":[148],"required":false},{"name":"showRightIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148],"required":false}],"outputsClass":[{"name":"rightIconClick","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":42,"modifierKind":[148],"required":false},{"name":"valueChange","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":41,"modifierKind":[148],"required":false}],"propertiesClass":[{"name":"ariaLabel","defaultValue":"input<string>(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":37,"modifierKind":[148]},{"name":"ariaLabelledby","defaultValue":"input<string>(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":39,"modifierKind":[148]},{"name":"ariaRequired","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":38,"modifierKind":[148],"required":false},{"name":"assistiveAppearance","defaultValue":"input<\\"description\\" | \\"error\\" | \\"success\\" | \\"link\\">(\\"description\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":29,"modifierKind":[148]},{"name":"assistiveTextLabel","defaultValue":"input<string>(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":31,"modifierKind":[148]},{"name":"characterCount","defaultValue":"signal<number>(this.internalValue().length)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":44,"modifierKind":[148]},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":34,"modifierKind":[148],"required":false},{"name":"displayCounter","defaultValue":"computed(() => this.showCounter() && typeof this.maxLength() === \\"number\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":48,"modifierKind":[148]},{"name":"displayedLeftIcon","defaultValue":"computed(() => (this.error() ? \\"error\\" : this.leftIcon()))","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":46,"modifierKind":[148]},{"name":"error","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":32,"modifierKind":[148],"required":false},{"name":"id","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148],"required":false},{"name":"internalValue","defaultValue":"signal<string>(this.value())","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":24,"modifierKind":[148]},{"name":"isHiddenInput","defaultValue":"signal<boolean>(this.showRightIcon() && this.rightIconAction() === \\"visibilityOn\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":45,"modifierKind":[148]},{"name":"label","defaultValue":"input<string>(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":19,"modifierKind":[148]},{"name":"labelPosition","defaultValue":"input<\\"top\\" | \\"side\\">(\\"top\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":20,"modifierKind":[148]},{"name":"lastParentValue","defaultValue":"this.value()","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":78,"modifierKind":[123]},{"name":"leftIcon","defaultValue":"input<RegularIconIdKey | TogglableIconIdKey | null>(null)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148]},{"name":"maxLength","defaultValue":"150","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":33,"modifierKind":[148],"required":false},{"name":"readOnly","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":35,"modifierKind":[148],"required":false},{"name":"required","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":21,"modifierKind":[148],"required":false},{"name":"rightIconAction","defaultValue":"input<\\"clean\\" | \\"visibilityOn\\" | \\"visibilityOff\\">(\\"clean\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[148]},{"name":"rightIconAriaLabel","defaultValue":"computed(() => {\\n    if ([\\"visibilityOn\\", \\"visibilityOff\\"].includes(this.rightIconAction())) {\\n      return this.isHiddenInput() ? \\"show text\\" : \\"hide text\\";\\n    } else if (this.rightIconAction() === \\"clean\\") {\\n      return \\"clear\\";\\n    }\\n    return \\"\\";\\n  })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":59,"modifierKind":[148]},{"name":"rightIconClick","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":42,"modifierKind":[148],"required":false},{"name":"rightIconName","defaultValue":"computed(() => {\\n    if ([\\"visibilityOn\\", \\"visibilityOff\\"].includes(this.rightIconAction())) {\\n      return this.isHiddenInput() ? \\"visibility-show\\" : \\"visibility-hide\\";\\n    } else if (this.rightIconAction() === \\"clean\\") {\\n      return \\"close\\";\\n    }\\n    return \\"\\";\\n  })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":50,"modifierKind":[148]},{"name":"shouldShowRightIcon","defaultValue":"computed(() => {\\n    if (this.readOnly() || this.disabled()) {\\n      return false;\\n    }\\n    if (this.rightIconAction() === \\"clean\\") {\\n      return !!this.internalValue()?.length && this.showRightIcon();\\n    }\\n    return this.showRightIcon() && !!this.rightIconAction();\\n  })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":68,"modifierKind":[148]},{"name":"showAssistiveIcon","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":30,"modifierKind":[148],"required":false},{"name":"showCounter","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148],"required":false},{"name":"showLabelRequirement","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":28,"modifierKind":[148],"required":false},{"name":"showRightIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148],"required":false},{"name":"value","defaultValue":"input<string>(\\"\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":23,"modifierKind":[148]},{"name":"valueChange","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":41,"modifierKind":[148],"required":false},{"name":"width","defaultValue":"input<string>(\\"300px\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":36,"modifierKind":[148]}],"methodsClass":[{"name":"handleChange","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":93,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onRightIconClickHandler","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":103,"deprecated":false,"deprecationMessage":""},{"name":"toggleInputVisibility","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":108,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"triggerRightIconAction","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":112,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconComponent","type":"component"},{"name":"IconButtonComponent","type":"component"},{"name":"LinkComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, input, output, signal, computed, effect } from \\"@angular/core\\";\\n\\nimport { IconComponent } from \\"../icon/icon.component\\";\\nimport { RegularIconIdKey, TogglableIconIdKey } from \\"../icon/icon.service\\";\\nimport { IconButtonComponent } from \\"../icon-button/icon-button.component\\";\\nimport { LinkComponent } from \\"../link/link.component\\";\\n\\n@Component({\\n  selector: \\"rte-text-input\\",\\n  imports: [CommonModule, IconComponent, IconButtonComponent, LinkComponent],\\n  standalone: true,\\n  templateUrl: \\"./text-input.component.html\\",\\n  styleUrl: \\"./text-input.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class TextInputComponent {\\n  readonly id = input<string>();\\n  readonly label = input<string>(\\"\\");\\n  readonly labelPosition = input<\\"top\\" | \\"side\\">(\\"top\\");\\n  readonly required = input<boolean>(false);\\n  readonly showCounter = input<boolean>(false);\\n  readonly value = input<string>(\\"\\");\\n  readonly internalValue = signal<string>(this.value());\\n  readonly leftIcon = input<RegularIconIdKey | TogglableIconIdKey | null>(null);\\n  readonly showRightIcon = input<boolean>(true);\\n  readonly rightIconAction = input<\\"clean\\" | \\"visibilityOn\\" | \\"visibilityOff\\">(\\"clean\\");\\n  readonly showLabelRequirement = input<boolean>(false);\\n  readonly assistiveAppearance = input<\\"description\\" | \\"error\\" | \\"success\\" | \\"link\\">(\\"description\\");\\n  readonly showAssistiveIcon = input<boolean>(false);\\n  readonly assistiveTextLabel = input<string>(\\"\\");\\n  readonly error = input<boolean>(false);\\n  readonly maxLength = input<number>(150);\\n  readonly disabled = input<boolean>(false);\\n  readonly readOnly = input<boolean>(false);\\n  readonly width = input<string>(\\"300px\\");\\n  readonly ariaLabel = input<string>(\\"\\");\\n  readonly ariaRequired = input<boolean>(false);\\n  readonly ariaLabelledby = input<string>(\\"\\");\\n\\n  readonly valueChange = output<string>();\\n  readonly rightIconClick = output<void>();\\n\\n  readonly characterCount = signal<number>(this.internalValue().length);\\n  readonly isHiddenInput = signal<boolean>(this.showRightIcon() && this.rightIconAction() === \\"visibilityOn\\");\\n  readonly displayedLeftIcon = computed(() => (this.error() ? \\"error\\" : this.leftIcon()));\\n\\n  readonly displayCounter = computed(() => this.showCounter() && typeof this.maxLength() === \\"number\\");\\n\\n  readonly rightIconName = computed(() => {\\n    if ([\\"visibilityOn\\", \\"visibilityOff\\"].includes(this.rightIconAction())) {\\n      return this.isHiddenInput() ? \\"visibility-show\\" : \\"visibility-hide\\";\\n    } else if (this.rightIconAction() === \\"clean\\") {\\n      return \\"close\\";\\n    }\\n    return \\"\\";\\n  });\\n\\n  readonly rightIconAriaLabel = computed(() => {\\n    if ([\\"visibilityOn\\", \\"visibilityOff\\"].includes(this.rightIconAction())) {\\n      return this.isHiddenInput() ? \\"show text\\" : \\"hide text\\";\\n    } else if (this.rightIconAction() === \\"clean\\") {\\n      return \\"clear\\";\\n    }\\n    return \\"\\";\\n  });\\n\\n  readonly shouldShowRightIcon = computed(() => {\\n    if (this.readOnly() || this.disabled()) {\\n      return false;\\n    }\\n    if (this.rightIconAction() === \\"clean\\") {\\n      return !!this.internalValue()?.length && this.showRightIcon();\\n    }\\n    return this.showRightIcon() && !!this.rightIconAction();\\n  });\\n\\n  private lastParentValue = this.value();\\n\\n  constructor() {\\n    effect(\\n      () => {\\n        const parentValue = this.value();\\n        if (parentValue !== this.lastParentValue) {\\n          this.lastParentValue = parentValue;\\n          this.internalValue.set(parentValue);\\n        }\\n      },\\n      { allowSignalWrites: true },\\n    );\\n  }\\n\\n  handleChange(event: Event): void {\\n    const input = event.target as HTMLInputElement;\\n    this.internalValue.set(input.value);\\n    this.valueChange.emit(input.value);\\n    if (this.maxLength()) {\\n      this.characterCount.set(input.value.length);\\n    }\\n    this.valueChange.emit(input.value);\\n  }\\n\\n  onRightIconClickHandler(): void {\\n    this.rightIconClick.emit();\\n    this.triggerRightIconAction();\\n  }\\n\\n  private toggleInputVisibility(): void {\\n    this.isHiddenInput.set(!this.isHiddenInput());\\n  }\\n\\n  private triggerRightIconAction(): void {\\n    if (this.rightIconAction() === \\"clean\\") {\\n      this.internalValue.set(\\"\\");\\n      this.valueChange.emit(\\"\\");\\n      this.characterCount.set(0);\\n    }\\n    if ([\\"visibilityOn\\", \\"visibilityOff\\"].includes(this.rightIconAction())) {\\n      this.toggleInputVisibility();\\n    }\\n  }\\n}\\n","styleUrl":"./text-input.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":78},"extends":[],"templateData":"<div\\n  class=\\"container {{labelPosition()}}\\"\\n  [ngClass]=\\"{\'error\': error()}\\"\\n  [style.width]=\\"width()\\"\\n>\\n  <ng-container *ngIf=\\"label()\\">\\n    <div class=\\"text\\">\\n      <div class=\\"label-container\\">\\n        <label class=\\"input-label\\" [id]=\\"\'input-label-\' + id\\" [for]=\\"id()\\">\\n          {{ label() }}\\n        </label>\\n        <ng-container *ngIf=\\"required()\\">\\n          <ng-container *ngIf=\\"showLabelRequirement(); else requiredIcon\\">\\n            <span class=\\"required-text\\">(obligatoire)</span>\\n          </ng-container>\\n          <ng-template #requiredIcon>\\n            <span class=\\"required-icon-container\\">\\n              <rte-icon name=\\"asterisk\\" [size]=\\"8\\" />\\n            </span>\\n          </ng-template>\\n        </ng-container>\\n        <ng-container *ngIf=\\"!required() && showLabelRequirement()\\">\\n          <span class=\\"required-text\\">(optionnel)</span>\\n        </ng-container>\\n      </div>\\n      <ng-container *ngIf=\\"displayCounter() && labelPosition() === \'top\'\\">\\n        <p class=\\"input-counter\\" data-testid=\\"input-counter\\">\\n          {{ characterCount() }}/{{ maxLength() }}\\n        </p>\\n      </ng-container>\\n    </div>\\n  </ng-container>\\n\\n  <div class=\\"input-container\\">\\n    <div\\n      class=\\"input {{labelPosition()}}\\"\\n      [ngClass]=\\"{\'disabled\': disabled(), \'read-only\': readOnly()}\\"\\n    >\\n      <div class=\\"input-bar\\" [ngClass]=\\"{\'with-left-icon\': displayedLeftIcon(), \'with-right-icon\': rightIconAction()}\\">\\n        <ng-container *ngIf=\\"displayedLeftIcon()\\">\\n          <rte-icon\\n            appearance=\\"outlined\\"\\n            class=\\"left-icon\\"\\n            aria-hidden=\\"true\\"\\n            [name]=\\"displayedLeftIcon()!\\"\\n          />\\n        </ng-container>\\n\\n        <input\\n          #inputRef\\n          class=\\"input-field\\"\\n          [id]=\\"id()\\"\\n          [ngClass]=\\"{\'error\': error()}\\"\\n          [attr.aria-label]=\\"ariaLabel()\\"\\n          [attr.aria-labelledby]=\\"ariaLabelledby()\\"\\n          [attr.aria-required]=\\"ariaRequired()\\"\\n          [type]=\\"isHiddenInput() ? \'password\' : \'text\'\\"\\n          [maxLength]=\\"maxLength()\\"\\n          [disabled]=\\"disabled()\\"\\n          [readOnly]=\\"readOnly()\\"\\n          [value]=\\"internalValue()\\"\\n          (input)=\\"handleChange($event)\\"\\n        />\\n\\n        <ng-container *ngIf=\\"shouldShowRightIcon()\\">\\n          <rte-icon-button\\n            appearance=\\"outlined\\"\\n            variant=\\"transparent\\"\\n            class=\\"right-icon\\"\\n            data-testid=\\"right-icon\\"\\n            [name]=\\"rightIconName() || \'close\'\\"\\n            [ariaLabel]=\\"rightIconAriaLabel()\\"\\n            (click)=\\"onRightIconClickHandler()\\"\\n          />\\n        </ng-container>\\n      </div>\\n    </div>\\n\\n    <ng-container *ngIf=\\"assistiveTextLabel()\\">\\n      <div class=\\"assistive-text\\">\\n        <ng-container *ngIf=\\"showAssistiveIcon() && assistiveAppearance() === \'error\'\\">\\n          <rte-icon name=\\"error\\" appearance=\\"outlined\\" class=\\"assistive-icon-error\\" [size]=\\"12\\" />\\n        </ng-container>\\n        <ng-container *ngIf=\\"showAssistiveIcon() && assistiveAppearance() === \'success\'\\">\\n          <rte-icon name=\\"check\\" appearance=\\"outlined\\" class=\\"assistive-icon-success\\" [size]=\\"12\\" />\\n        </ng-container>\\n        <ng-container *ngIf=\\"assistiveAppearance() === \'link\'; else assistiveLabel\\">\\n          <rte-link [label]=\\"assistiveTextLabel()\\" />\\n        </ng-container>\\n        <ng-template #assistiveLabel>\\n          <p class=\\"assistive-label\\" [ngClass]=\\"assistiveAppearance()\\">\\n            {{ assistiveTextLabel() }}\\n          </p>\\n        </ng-template>\\n      </div>\\n    </ng-container>\\n  </div>\\n\\n  <ng-container *ngIf=\\"displayCounter() && labelPosition() === \'side\'\\">\\n    <p class=\\"input-counter\\" data-testid=\\"input-counter\\">\\n      {{ characterCount() }}/{{ maxLength() }}\\n    </p>\\n  </ng-container>\\n</div>"},{"name":"TooltipComponent","id":"component-TooltipComponent-4333432ae489d9c4efcc576284fb922fca4d486f13b187d4da95c5ee194c768d7c9c204817bfd180e9dc6ec999255538f15250a47754f528efc3e2c22d030b42","file":"projects/ds-rte-lib/src/lib/components/tooltip/tooltip.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-tooltip","styleUrls":[],"styles":[],"templateUrl":["./tooltip.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"arrow","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":15,"modifierKind":[148],"required":false},{"name":"label","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":12,"modifierKind":[148],"required":true}],"outputsClass":[],"propertiesClass":[{"name":"alignment","defaultValue":"input<string>(\\"center\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":14,"modifierKind":[148]},{"name":"arrow","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":15,"modifierKind":[148],"required":false},{"name":"label","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":12,"modifierKind":[148],"required":true},{"name":"position","defaultValue":"input<string>(\\"auto\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":13,"modifierKind":[148]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { Component, input } from \\"@angular/core\\";\\n\\n@Component({\\n  selector: \\"rte-tooltip\\",\\n  imports: [CommonModule],\\n  standalone: true,\\n  templateUrl: \\"./tooltip.component.html\\",\\n  styleUrl: \\"./tooltip.component.scss\\",\\n})\\nexport class TooltipComponent {\\n  readonly label = input.required<string>();\\n  readonly position = input<string>(\\"auto\\");\\n  readonly alignment = input<string>(\\"center\\");\\n  readonly arrow = input<boolean>(true);\\n}\\n","styleUrl":"./tooltip.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<div\\n    class=\\"tooltip {{position()}} {{alignment()}}\\"\\n    role=\\"tooltip\\"\\n    [ngClass]=\\"{\'arrow\': arrow()}\\"\\n>\\n    <span class=\\"tooltip-label\\"> {{label()}} </span>\\n</div>\\n"}],"modules":[],"miscellaneous":{"variables":[{"name":"RegularIcons","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/icon/icon-map.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  add: \\"add\\",\\n  \\"alt-route\\": \\"alt_route\\",\\n  apps: \\"apps\\",\\n  \\"arrow-alt-down\\": \\"arrow_alt_down\\",\\n  \\"arrow-alt-down-left\\": \\"arrow_alt_down_left\\",\\n  \\"arrow-alt-down-right\\": \\"arrow_alt_down_right\\",\\n  \\"arrow-alt-left\\": \\"arrow_alt_left\\",\\n  \\"arrow-alt-right\\": \\"arrow_alt_right\\",\\n  \\"arrow-alt-up\\": \\"arrow_alt_up\\",\\n  \\"arrow-alt-up-left\\": \\"arrow_alt_up_left\\",\\n  \\"arrow-alt-up-right\\": \\"arrow_alt_up_right\\",\\n  \\"arrow-angle-down-left\\": \\"arrow_angle_down_left\\",\\n  \\"arrow-angle-down-right\\": \\"arrow_angle_down_right\\",\\n  \\"arrow-angle-up-left\\": \\"arrow_angle_up_left\\",\\n  \\"arrow-angle-up-right\\": \\"arrow_angle_up_right\\",\\n  \\"arrow-chevron-down\\": \\"arrow_chevron_down\\",\\n  \\"arrow-chevron-left\\": \\"arrow_chevron_left\\",\\n  \\"arrow-chevron-right\\": \\"arrow_chevron_right\\",\\n  \\"arrow-chevron-up\\": \\"arrow_chevron_up\\",\\n  \\"arrow-double-down\\": \\"arrow_double_down\\",\\n  \\"arrow-double-left\\": \\"arrow_double_left\\",\\n  \\"arrow-double-right\\": \\"arrow_double_right\\",\\n  \\"arrow-double-up\\": \\"arrow_double_up\\",\\n  \\"arrow-down\\": \\"arrow_down\\",\\n  \\"arrow-down-left\\": \\"arrow_down_left\\",\\n  \\"arrow-down-right\\": \\"arrow_down_right\\",\\n  \\"arrow-drop-down\\": \\"arrow_drop_down\\",\\n  \\"arrow-drop-up\\": \\"arrow_drop_up\\",\\n  \\"arrow-left\\": \\"arrow_left\\",\\n  \\"arrow-right\\": \\"arrow_right\\",\\n  \\"arrow-up\\": \\"arrow_up\\",\\n  \\"arrow-up-left\\": \\"arrow_up_left\\",\\n  \\"arrow-up-right\\": \\"arrow_up_right\\",\\n  asterisk: \\"asterisk\\",\\n  \\"attach-file\\": \\"attach_file\\",\\n  \\"battery-alt-empty\\": \\"battery_alt_empty\\",\\n  \\"battery-alt-full\\": \\"battery_alt_full\\",\\n  \\"battery-charging\\": \\"battery_charging\\",\\n  \\"battery-empty\\": \\"battery_empty\\",\\n  \\"battery-full\\": \\"battery_full\\",\\n  bluetooth: \\"bluetooth\\",\\n  \\"bluetooth-off\\": \\"bluetooth_off\\",\\n  \\"chart-bar\\": \\"chart_bar\\",\\n  \\"chart-bar-stacked\\": \\"chart_bar_stacked\\",\\n  check: \\"check\\",\\n  \\"check-indeterminate\\": \\"check_indeterminate\\",\\n  \\"check-small\\": \\"check_small\\",\\n  \\"checkbox-empty\\": \\"checkbox_empty\\",\\n  close: \\"close\\",\\n  compare: \\"compare\\",\\n  \\"copy-all\\": \\"copy_all\\",\\n  \\"crisis-alert\\": \\"crisis_alert\\",\\n  cut: \\"cut\\",\\n  download: \\"download\\",\\n  \\"download-done\\": \\"download_done\\",\\n  \\"drag-handle\\": \\"drag_handle\\",\\n  \\"drag-indicator\\": \\"drag_indicator\\",\\n  exclamation: \\"exclamation\\",\\n  \\"explore-travel\\": \\"explore_travel\\",\\n  \\"external-link\\": \\"external_link\\",\\n  filter: \\"filter\\",\\n  \\"filter-off\\": \\"filter_off\\",\\n  \\"first-page\\": \\"first_page\\",\\n  forward: \\"forward\\",\\n  fullscreen: \\"fullscreen\\",\\n  \\"fullscreen-exit\\": \\"fullscreen_exit\\",\\n  history: \\"history\\",\\n  \\"hourglass-empty\\": \\"hourglass_empty\\",\\n  \\"info-i\\": \\"info_i\\",\\n  language: \\"language\\",\\n  \\"last-page\\": \\"last_page\\",\\n  link: \\"link\\",\\n  \\"link-off\\": \\"link_off\\",\\n  list: \\"list\\",\\n  \\"location-disabled\\": \\"location_disabled\\",\\n  login: \\"login\\",\\n  logout: \\"logout\\",\\n  menu: \\"menu\\",\\n  \\"menu-open\\": \\"menu_open\\",\\n  monitoring: \\"monitoring\\",\\n  \\"more-down\\": \\"more_down\\",\\n  \\"more-horiz\\": \\"more_horiz\\",\\n  \\"more-up\\": \\"more_up\\",\\n  \\"more-vert\\": \\"more_vert\\",\\n  ohm: \\"ohm\\",\\n  \\"open-in-full\\": \\"open_in_full\\",\\n  paste: \\"paste\\",\\n  \\"play-pause\\": \\"play_pause\\",\\n  \\"power-input\\": \\"power_input\\",\\n  \\"power-plug\\": \\"power_plug\\",\\n  \\"power-settings\\": \\"power_settings\\",\\n  \\"priority-high\\": \\"priority_high\\",\\n  public: \\"public\\",\\n  publish: \\"publish\\",\\n  \\"question-mark\\": \\"question_mark\\",\\n  radar: \\"radar\\",\\n  \\"radio-button-empty\\": \\"radio_button_empty\\",\\n  redo: \\"redo\\",\\n  reload: \\"reload\\",\\n  remove: \\"remove\\",\\n  reply: \\"reply\\",\\n  \\"reply-all\\": \\"reply_all\\",\\n  route: \\"route\\",\\n  search: \\"search\\",\\n  \\"side-navigation\\": \\"side_navigation\\",\\n  sort: \\"sort\\",\\n  \\"support-agent\\": \\"support_agent\\",\\n  timeline: \\"timeline\\",\\n  \\"trending-down\\": \\"trending_down\\",\\n  \\"trending-flat\\": \\"trending_flat\\",\\n  \\"trending-up\\": \\"trending_up\\",\\n  tune: \\"tune\\",\\n  undo: \\"undo\\",\\n  upload: \\"upload\\",\\n  water: \\"water\\",\\n  \\"water-alt\\": \\"water_alt\\",\\n  wifi: \\"wifi\\",\\n  \\"wifi-off\\": \\"wifi_off\\",\\n  windmill: \\"windmill\\",\\n  \\"zoom-in\\": \\"zoom_in\\",\\n  \\"zoom-out\\": \\"zoom_out\\",\\n}"},{"name":"segmentClass","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/segmented-control/segmented-control.component.ts","deprecated":false,"deprecationMessage":"","type":"string","defaultValue":"\\"rte-segment\\""},{"name":"segmentSelector","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/segmented-control/segmented-control.component.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"`.${segmentClass}`"},{"name":"TogglableIcons","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/icon/icon-map.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  \\"add-circle\\": [\\"add_circle_outlined\\", \\"add_circle_filled\\"],\\n  \\"admin-panel-settings\\": [\\"admin_panel_settings_outlined\\", \\"admin_panel_settings_filled\\"],\\n  analytics: [\\"analytics_outlined\\", \\"analytics_filled\\"],\\n  archive: [\\"archive_outlined\\", \\"archive_filled\\"],\\n  \\"arrow-circle-chevron-down\\": [\\"arrow_circle_chevron_down_outlined\\", \\"arrow_circle_chevron_down_filled\\"],\\n  \\"arrow-circle-chevron-left\\": [\\"arrow_circle_chevron_left_outlined\\", \\"arrow_circle_chevron_left_filled\\"],\\n  \\"arrow-circle-chevron-right\\": [\\"arrow_circle_chevron_right_outlined\\", \\"arrow_circle_chevron_right_filled\\"],\\n  \\"arrow-circle-chevron-up\\": [\\"arrow_circle_chevron_up_outlined\\", \\"arrow_circle_chevron_up_filled\\"],\\n  \\"arrow-circle-down\\": [\\"arrow_circle_down_outlined\\", \\"arrow_circle_down_filled\\"],\\n  \\"arrow-circle-left\\": [\\"arrow_circle_left_outlined\\", \\"arrow_circle_left_filled\\"],\\n  \\"arrow-circle-right\\": [\\"arrow_circle_right_outlined\\", \\"arrow_circle_right_filled\\"],\\n  \\"arrow-circle-up\\": [\\"arrow_circle_up_outlined\\", \\"arrow_circle_up_filled\\"],\\n  article: [\\"article_outlined\\", \\"article_filled\\"],\\n  \\"assignment-complete\\": [\\"assignment_complete_outlined\\", \\"assignment_complete_filled\\"],\\n  assignment: [\\"assignment_outlined\\", \\"assignment_filled\\"],\\n  \\"battery-alert\\": [\\"battery_alert_outlined\\", \\"battery_alert_filled\\"],\\n  \\"battery-charging-full\\": [\\"battery_charging_full_outlined\\", \\"battery_charging_full_filled\\"],\\n  \\"bolt-alt-circle\\": [\\"bolt_alt_circle_outlined\\", \\"bolt_alt_circle_filled\\"],\\n  \\"bolt-alt\\": [\\"bolt_alt_outlined\\", \\"bolt_alt_filled\\"],\\n  \\"bolt-circle\\": [\\"bolt_circle_outlined\\", \\"bolt_circle_filled\\"],\\n  bolt: [\\"bolt_outlined\\", \\"bolt_filled\\"],\\n  bookmark: [\\"bookmark_outlined\\", \\"bookmark_filled\\"],\\n  bookmarks: [\\"bookmarks_outlined\\", \\"bookmarks_filled\\"],\\n  build: [\\"build_outlined\\", \\"build_filled\\"],\\n  \\"calendar-available\\": [\\"calendar_available_outlined\\", \\"calendar_available_filled\\"],\\n  \\"calendar-busy\\": [\\"calendar_busy_outlined\\", \\"calendar_busy_filled\\"],\\n  \\"calendar-month\\": [\\"calendar_month_outlined\\", \\"calendar_month_filled\\"],\\n  \\"calendar-today\\": [\\"calendar_today_outlined\\", \\"calendar_today_filled\\"],\\n  call: [\\"call_outlined\\", \\"call_filled\\"],\\n  cancel: [\\"cancel_outlined\\", \\"cancel_filled\\"],\\n  category: [\\"category_outlined\\", \\"category_filled\\"],\\n  \\"chart-add\\": [\\"chart_add_outlined\\", \\"chart_add_filled\\"],\\n  \\"chart-area\\": [\\"chart_area_outlined\\", \\"chart_area_filled\\"],\\n  \\"chart-pie\\": [\\"chart_pie_outlined\\", \\"chart_pie_filled\\"],\\n  \\"chart-table\\": [\\"chart_table_outlined\\", \\"chart_table_filled\\"],\\n  \\"chat-alt\\": [\\"chat_alt_outlined\\", \\"chat_alt_filled\\"],\\n  \\"chat-alt-unread\\": [\\"chat_alt_unread_outlined\\", \\"chat_alt_unread_filled\\"],\\n  chat: [\\"chat_outlined\\", \\"chat_filled\\"],\\n  \\"chat-unread\\": [\\"chat_unread_outlined\\", \\"chat_unread_filled\\"],\\n  \\"check-circle\\": [\\"check_circle_outlined\\", \\"check_circle_filled\\"],\\n  checkbox: [\\"checkbox_outlined\\", \\"checkbox_filled\\"],\\n  \\"checkbox-indeterminate\\": [\\"checkbox_indeterminate_outlined\\", \\"checkbox_indeterminate_filled\\"],\\n  clock: [\\"clock_outlined\\", \\"clock_filled\\"],\\n  \\"cloud-download\\": [\\"cloud_download_outlined\\", \\"cloud_download_filled\\"],\\n  cloud: [\\"cloud_outlined\\", \\"cloud_filled\\"],\\n  \\"cloud-off\\": [\\"cloud_off_outlined\\", \\"cloud_off_filled\\"],\\n  \\"cloud-upload\\": [\\"cloud_upload_outlined\\", \\"cloud_upload_filled\\"],\\n  \\"comment-add\\": [\\"comment_add_outlined\\", \\"comment_add_filled\\"],\\n  comment: [\\"comment_outlined\\", \\"comment_filled\\"],\\n  copy: [\\"copy_outlined\\", \\"copy_filled\\"],\\n  dangerous: [\\"dangerous_outlined\\", \\"dangerous_filled\\"],\\n  dashboard: [\\"dashboard_outlined\\", \\"dashboard_filled\\"],\\n  database: [\\"database_outlined\\", \\"database_filled\\"],\\n  delete: [\\"delete_outlined\\", \\"delete_filled\\"],\\n  desktop: [\\"desktop_outlined\\", \\"desktop_filled\\"],\\n  devices: [\\"devices_outlined\\", \\"devices_filled\\"],\\n  draft: [\\"draft_outlined\\", \\"draft_filled\\"],\\n  eco: [\\"eco_outlined\\", \\"eco_filled\\"],\\n  edit: [\\"edit_outlined\\", \\"edit_filled\\"],\\n  \\"electric-meter\\": [\\"electric_meter_outlined\\", \\"electric_meter_filled\\"],\\n  error: [\\"error_outlined\\", \\"error_filled\\"],\\n  explore: [\\"explore_outlined\\", \\"explore_filled\\"],\\n  \\"explore-off\\": [\\"explore_off_outlined\\", \\"explore_off_filled\\"],\\n  \\"fast-forward\\": [\\"fast_forward_outlined\\", \\"fast_forward_filled\\"],\\n  \\"fast-rewind\\": [\\"fast_rewind_outlined\\", \\"fast_rewind_filled\\"],\\n  feedback: [\\"feedback_outlined\\", \\"feedback_filled\\"],\\n  \\"file-copy\\": [\\"file_copy_outlined\\", \\"file_copy_filled\\"],\\n  \\"file-download\\": [\\"file_download_outlined\\", \\"file_download_filled\\"],\\n  \\"file-upload\\": [\\"file_upload_outlined\\", \\"file_upload_filled\\"],\\n  \\"filter-alt\\": [\\"filter_alt_outlined\\", \\"filter_alt_filled\\"],\\n  \\"filter-alt-off\\": [\\"filter_alt_off_outlined\\", \\"filter_alt_off_filled\\"],\\n  fire: [\\"fire_outlined\\", \\"fire_filled\\"],\\n  \\"fit-screen\\": [\\"fit_screen_outlined\\", \\"fit_screen_filled\\"],\\n  flag: [\\"flag_outlined\\", \\"flag_filled\\"],\\n  flash: [\\"flash_outlined\\", \\"flash_filled\\"],\\n  \\"flash-off\\": [\\"flash_off_outlined\\", \\"flash_off_filled\\"],\\n  \\"folder-add\\": [\\"folder_add_outlined\\", \\"folder_add_filled\\"],\\n  folder: [\\"folder_outlined\\", \\"folder_filled\\"],\\n  \\"folder-move\\": [\\"folder_move_outlined\\", \\"folder_move_filled\\"],\\n  \\"folder-open\\": [\\"folder_open_outlined\\", \\"folder_open_filled\\"],\\n  \\"folder-shared\\": [\\"folder_shared_outlined\\", \\"folder_shared_filled\\"],\\n  forum: [\\"forum_outlined\\", \\"forum_filled\\"],\\n  \\"group-add\\": [\\"group_add_outlined\\", \\"group_add_filled\\"],\\n  group: [\\"group_outlined\\", \\"group_filled\\"],\\n  groups: [\\"groups_outlined\\", \\"groups_filled\\"],\\n  headphones: [\\"headphones_outlined\\", \\"headphones_filled\\"],\\n  heart: [\\"heart_outlined\\", \\"heart_filled\\"],\\n  help: [\\"help_outlined\\", \\"help_filled\\"],\\n  home: [\\"home_outlined\\", \\"home_filled\\"],\\n  hourglass: [\\"hourglass_outlined\\", \\"hourglass_filled\\"],\\n  \\"image-broken\\": [\\"image_broken_outlined\\", \\"image_broken_filled\\"],\\n  image: [\\"image_outlined\\", \\"image_filled\\"],\\n  \\"image-gallery\\": [\\"image_gallery_outlined\\", \\"image_gallery_filled\\"],\\n  inbox: [\\"inbox_outlined\\", \\"inbox_filled\\"],\\n  info: [\\"info_outlined\\", \\"info_filled\\"],\\n  keep: [\\"keep_outlined\\", \\"keep_filled\\"],\\n  \\"keep-off\\": [\\"keep_off_outlined\\", \\"keep_off_filled\\"],\\n  label: [\\"label_outlined\\", \\"label_filled\\"],\\n  laptop: [\\"laptop_outlined\\", \\"laptop_filled\\"],\\n  \\"left-panel-close\\": [\\"left_panel_close_outlined\\", \\"left_panel_close_filled\\"],\\n  \\"left-panel-open\\": [\\"left_panel_open_outlined\\", \\"left_panel_open_filled\\"],\\n  \\"light-off\\": [\\"light_off_outlined\\", \\"light_off_filled\\"],\\n  \\"lightbulb-alt\\": [\\"lightbulb_alt_outlined\\", \\"lightbulb_alt_filled\\"],\\n  \\"lightbulb-circle\\": [\\"lightbulb_circle_outlined\\", \\"lightbulb_circle_filled\\"],\\n  lightbulb: [\\"lightbulb_outlined\\", \\"lightbulb_filled\\"],\\n  \\"list-alt\\": [\\"list_alt_outlined\\", \\"list_alt_filled\\"],\\n  \\"location-me\\": [\\"location_me_outlined\\", \\"location_me_filled\\"],\\n  \\"location-off\\": [\\"location_off_outlined\\", \\"location_off_filled\\"],\\n  \\"location-on\\": [\\"location_on_outlined\\", \\"location_on_filled\\"],\\n  lock: [\\"lock_outlined\\", \\"lock_filled\\"],\\n  \\"lock-open\\": [\\"lock_open_outlined\\", \\"lock_open_filled\\"],\\n  \\"lock-open-right\\": [\\"lock_open_right_outlined\\", \\"lock_open_right_filled\\"],\\n  mail: [\\"mail_outlined\\", \\"mail_filled\\"],\\n  \\"mail-unread\\": [\\"mail_unread_outlined\\", \\"mail_unread_filled\\"],\\n  map: [\\"map_outlined\\", \\"map_filled\\"],\\n  mic: [\\"mic_outlined\\", \\"mic_filled\\"],\\n  \\"mic-off\\": [\\"mic_off_outlined\\", \\"mic_off_filled\\"],\\n  \\"mode-dark\\": [\\"mode_dark_outlined\\", \\"mode_dark_filled\\"],\\n  \\"mode-light\\": [\\"mode_light_outlined\\", \\"mode_light_filled\\"],\\n  notification: [\\"notification_outlined\\", \\"notification_filled\\"],\\n  \\"notification-important\\": [\\"notification_important_outlined\\", \\"notification_important_filled\\"],\\n  \\"notification-off\\": [\\"notification_off_outlined\\", \\"notification_off_filled\\"],\\n  \\"notification-unread\\": [\\"notification_unread_outlined\\", \\"notification_unread_filled\\"],\\n  palette: [\\"palette_outlined\\", \\"palette_filled\\"],\\n  \\"pause-circle\\": [\\"pause_circle_outlined\\", \\"pause_circle_filled\\"],\\n  pause: [\\"pause_outlined\\", \\"pause_filled\\"],\\n  \\"photo-camera\\": [\\"photo_camera_outlined\\", \\"photo_camera_filled\\"],\\n  \\"play-circle\\": [\\"play_circle_outlined\\", \\"play_circle_filled\\"],\\n  play: [\\"play_outlined\\", \\"play_filled\\"],\\n  power: [\\"power_outlined\\", \\"power_filled\\"],\\n  \\"power-off\\": [\\"power_off_outlined\\", \\"power_off_filled\\"],\\n  \\"power-plug-connect\\": [\\"power_plug_connect_outlined\\", \\"power_plug_connect_filled\\"],\\n  \\"power-settings-circle\\": [\\"power_settings_circle_outlined\\", \\"power_settings_circle_filled\\"],\\n  \\"power-solar\\": [\\"power_solar_outlined\\", \\"power_solar_filled\\"],\\n  \\"power-switch\\": [\\"power_switch_outlined\\", \\"power_switch_filled\\"],\\n  \\"power-wind\\": [\\"power_wind_outlined\\", \\"power_wind_filled\\"],\\n  print: [\\"print_outlined\\", \\"print_filled\\"],\\n  \\"right-panel-close\\": [\\"right_panel_close_outlined\\", \\"right_panel_close_filled\\"],\\n  \\"right-panel-open\\": [\\"right_panel_open_outlined\\", \\"right_panel_open_filled\\"],\\n  save: [\\"save_outlined\\", \\"save_filled\\"],\\n  send: [\\"send_outlined\\", \\"send_filled\\"],\\n  settings: [\\"settings_outlined\\", \\"settings_filled\\"],\\n  share: [\\"share_outlined\\", \\"share_filled\\"],\\n  \\"skip-next\\": [\\"skip_next_outlined\\", \\"skip_next_filled\\"],\\n  \\"skip-previous\\": [\\"skip_previous_outlined\\", \\"skip_previous_filled\\"],\\n  smartphone: [\\"smartphone_outlined\\", \\"smartphone_filled\\"],\\n  star: [\\"star_outlined\\", \\"star_filled\\"],\\n  \\"sticky-note\\": [\\"sticky_note_outlined\\", \\"sticky_note_filled\\"],\\n  \\"stop-circle\\": [\\"stop_circle_outlined\\", \\"stop_circle_filled\\"],\\n  stop: [\\"stop_outlined\\", \\"stop_filled\\"],\\n  subtitles: [\\"subtitles_outlined\\", \\"subtitles_filled\\"],\\n  \\"text-snippet\\": [\\"text_snippet_outlined\\", \\"text_snippet_filled\\"],\\n  \\"trash-restore\\": [\\"trash_restore_outlined\\", \\"trash_restore_filled\\"],\\n  unarchive: [\\"unarchive_outlined\\", \\"unarchive_filled\\"],\\n  \\"user-add\\": [\\"user_add_outlined\\", \\"user_add_filled\\"],\\n  \\"user-circle\\": [\\"user_circle_outlined\\", \\"user_circle_filled\\"],\\n  user: [\\"user_outlined\\", \\"user_filled\\"],\\n  \\"user-settings\\": [\\"user_settings_outlined\\", \\"user_settings_filled\\"],\\n  verified: [\\"verified_outlined\\", \\"verified_filled\\"],\\n  \\"video-camera\\": [\\"video_camera_outlined\\", \\"video_camera_filled\\"],\\n  \\"video-camera-off\\": [\\"video_camera_off_outlined\\", \\"video_camera_off_filled\\"],\\n  \\"video-gallery\\": [\\"video_gallery_outlined\\", \\"video_gallery_filled\\"],\\n  \\"view-agenda\\": [\\"view_agenda_outlined\\", \\"view_agenda_filled\\"],\\n  \\"view-column\\": [\\"view_column_outlined\\", \\"view_column_filled\\"],\\n  \\"view-grid\\": [\\"view_grid_outlined\\", \\"view_grid_filled\\"],\\n  \\"view-kanban\\": [\\"view_kanban_outlined\\", \\"view_kanban_filled\\"],\\n  \\"view-module\\": [\\"view_module_outlined\\", \\"view_module_filled\\"],\\n  \\"view-timeline\\": [\\"view_timeline_outlined\\", \\"view_timeline_filled\\"],\\n  \\"visibility-hide\\": [\\"visibility_hide_outlined\\", \\"visibility_hide_filled\\"],\\n  \\"visibility-show\\": [\\"visibility_show_outlined\\", \\"visibility_show_filled\\"],\\n  \\"volume-down\\": [\\"volume_down_outlined\\", \\"volume_down_filled\\"],\\n  \\"volume-mute\\": [\\"volume_mute_outlined\\", \\"volume_mute_filled\\"],\\n  \\"volume-off\\": [\\"volume_off_outlined\\", \\"volume_off_filled\\"],\\n  \\"volume-up\\": [\\"volume_up_outlined\\", \\"volume_up_filled\\"],\\n  warning: [\\"warning_outlined\\", \\"warning_filled\\"],\\n  waterdrop: [\\"waterdrop_outlined\\", \\"waterdrop_filled\\"],\\n}"},{"name":"TOOLTIP_GAP","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/tooltip/tooltip.directive.ts","deprecated":false,"deprecationMessage":"","type":"number","defaultValue":"8"}],"functions":[{"name":"isValidIconName","file":"projects/ds-rte-lib/src/lib/components/icon/icon-map.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"iconName","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"boolean","jsdoctags":[{"name":"iconName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"typealiases":[{"name":"RegularIconIdKey","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"projects/ds-rte-lib/src/lib/components/icon/icon.service.ts","deprecated":false,"deprecationMessage":"","description":"","kind":198},{"name":"TogglableIconIdKey","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"projects/ds-rte-lib/src/lib/components/icon/icon.service.ts","deprecated":false,"deprecationMessage":"","description":"","kind":198}],"enumerations":[],"groupedVariables":{"projects/ds-rte-lib/src/lib/components/icon/icon-map.ts":[{"name":"RegularIcons","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/icon/icon-map.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  add: \\"add\\",\\n  \\"alt-route\\": \\"alt_route\\",\\n  apps: \\"apps\\",\\n  \\"arrow-alt-down\\": \\"arrow_alt_down\\",\\n  \\"arrow-alt-down-left\\": \\"arrow_alt_down_left\\",\\n  \\"arrow-alt-down-right\\": \\"arrow_alt_down_right\\",\\n  \\"arrow-alt-left\\": \\"arrow_alt_left\\",\\n  \\"arrow-alt-right\\": \\"arrow_alt_right\\",\\n  \\"arrow-alt-up\\": \\"arrow_alt_up\\",\\n  \\"arrow-alt-up-left\\": \\"arrow_alt_up_left\\",\\n  \\"arrow-alt-up-right\\": \\"arrow_alt_up_right\\",\\n  \\"arrow-angle-down-left\\": \\"arrow_angle_down_left\\",\\n  \\"arrow-angle-down-right\\": \\"arrow_angle_down_right\\",\\n  \\"arrow-angle-up-left\\": \\"arrow_angle_up_left\\",\\n  \\"arrow-angle-up-right\\": \\"arrow_angle_up_right\\",\\n  \\"arrow-chevron-down\\": \\"arrow_chevron_down\\",\\n  \\"arrow-chevron-left\\": \\"arrow_chevron_left\\",\\n  \\"arrow-chevron-right\\": \\"arrow_chevron_right\\",\\n  \\"arrow-chevron-up\\": \\"arrow_chevron_up\\",\\n  \\"arrow-double-down\\": \\"arrow_double_down\\",\\n  \\"arrow-double-left\\": \\"arrow_double_left\\",\\n  \\"arrow-double-right\\": \\"arrow_double_right\\",\\n  \\"arrow-double-up\\": \\"arrow_double_up\\",\\n  \\"arrow-down\\": \\"arrow_down\\",\\n  \\"arrow-down-left\\": \\"arrow_down_left\\",\\n  \\"arrow-down-right\\": \\"arrow_down_right\\",\\n  \\"arrow-drop-down\\": \\"arrow_drop_down\\",\\n  \\"arrow-drop-up\\": \\"arrow_drop_up\\",\\n  \\"arrow-left\\": \\"arrow_left\\",\\n  \\"arrow-right\\": \\"arrow_right\\",\\n  \\"arrow-up\\": \\"arrow_up\\",\\n  \\"arrow-up-left\\": \\"arrow_up_left\\",\\n  \\"arrow-up-right\\": \\"arrow_up_right\\",\\n  asterisk: \\"asterisk\\",\\n  \\"attach-file\\": \\"attach_file\\",\\n  \\"battery-alt-empty\\": \\"battery_alt_empty\\",\\n  \\"battery-alt-full\\": \\"battery_alt_full\\",\\n  \\"battery-charging\\": \\"battery_charging\\",\\n  \\"battery-empty\\": \\"battery_empty\\",\\n  \\"battery-full\\": \\"battery_full\\",\\n  bluetooth: \\"bluetooth\\",\\n  \\"bluetooth-off\\": \\"bluetooth_off\\",\\n  \\"chart-bar\\": \\"chart_bar\\",\\n  \\"chart-bar-stacked\\": \\"chart_bar_stacked\\",\\n  check: \\"check\\",\\n  \\"check-indeterminate\\": \\"check_indeterminate\\",\\n  \\"check-small\\": \\"check_small\\",\\n  \\"checkbox-empty\\": \\"checkbox_empty\\",\\n  close: \\"close\\",\\n  compare: \\"compare\\",\\n  \\"copy-all\\": \\"copy_all\\",\\n  \\"crisis-alert\\": \\"crisis_alert\\",\\n  cut: \\"cut\\",\\n  download: \\"download\\",\\n  \\"download-done\\": \\"download_done\\",\\n  \\"drag-handle\\": \\"drag_handle\\",\\n  \\"drag-indicator\\": \\"drag_indicator\\",\\n  exclamation: \\"exclamation\\",\\n  \\"explore-travel\\": \\"explore_travel\\",\\n  \\"external-link\\": \\"external_link\\",\\n  filter: \\"filter\\",\\n  \\"filter-off\\": \\"filter_off\\",\\n  \\"first-page\\": \\"first_page\\",\\n  forward: \\"forward\\",\\n  fullscreen: \\"fullscreen\\",\\n  \\"fullscreen-exit\\": \\"fullscreen_exit\\",\\n  history: \\"history\\",\\n  \\"hourglass-empty\\": \\"hourglass_empty\\",\\n  \\"info-i\\": \\"info_i\\",\\n  language: \\"language\\",\\n  \\"last-page\\": \\"last_page\\",\\n  link: \\"link\\",\\n  \\"link-off\\": \\"link_off\\",\\n  list: \\"list\\",\\n  \\"location-disabled\\": \\"location_disabled\\",\\n  login: \\"login\\",\\n  logout: \\"logout\\",\\n  menu: \\"menu\\",\\n  \\"menu-open\\": \\"menu_open\\",\\n  monitoring: \\"monitoring\\",\\n  \\"more-down\\": \\"more_down\\",\\n  \\"more-horiz\\": \\"more_horiz\\",\\n  \\"more-up\\": \\"more_up\\",\\n  \\"more-vert\\": \\"more_vert\\",\\n  ohm: \\"ohm\\",\\n  \\"open-in-full\\": \\"open_in_full\\",\\n  paste: \\"paste\\",\\n  \\"play-pause\\": \\"play_pause\\",\\n  \\"power-input\\": \\"power_input\\",\\n  \\"power-plug\\": \\"power_plug\\",\\n  \\"power-settings\\": \\"power_settings\\",\\n  \\"priority-high\\": \\"priority_high\\",\\n  public: \\"public\\",\\n  publish: \\"publish\\",\\n  \\"question-mark\\": \\"question_mark\\",\\n  radar: \\"radar\\",\\n  \\"radio-button-empty\\": \\"radio_button_empty\\",\\n  redo: \\"redo\\",\\n  reload: \\"reload\\",\\n  remove: \\"remove\\",\\n  reply: \\"reply\\",\\n  \\"reply-all\\": \\"reply_all\\",\\n  route: \\"route\\",\\n  search: \\"search\\",\\n  \\"side-navigation\\": \\"side_navigation\\",\\n  sort: \\"sort\\",\\n  \\"support-agent\\": \\"support_agent\\",\\n  timeline: \\"timeline\\",\\n  \\"trending-down\\": \\"trending_down\\",\\n  \\"trending-flat\\": \\"trending_flat\\",\\n  \\"trending-up\\": \\"trending_up\\",\\n  tune: \\"tune\\",\\n  undo: \\"undo\\",\\n  upload: \\"upload\\",\\n  water: \\"water\\",\\n  \\"water-alt\\": \\"water_alt\\",\\n  wifi: \\"wifi\\",\\n  \\"wifi-off\\": \\"wifi_off\\",\\n  windmill: \\"windmill\\",\\n  \\"zoom-in\\": \\"zoom_in\\",\\n  \\"zoom-out\\": \\"zoom_out\\",\\n}"},{"name":"TogglableIcons","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/icon/icon-map.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  \\"add-circle\\": [\\"add_circle_outlined\\", \\"add_circle_filled\\"],\\n  \\"admin-panel-settings\\": [\\"admin_panel_settings_outlined\\", \\"admin_panel_settings_filled\\"],\\n  analytics: [\\"analytics_outlined\\", \\"analytics_filled\\"],\\n  archive: [\\"archive_outlined\\", \\"archive_filled\\"],\\n  \\"arrow-circle-chevron-down\\": [\\"arrow_circle_chevron_down_outlined\\", \\"arrow_circle_chevron_down_filled\\"],\\n  \\"arrow-circle-chevron-left\\": [\\"arrow_circle_chevron_left_outlined\\", \\"arrow_circle_chevron_left_filled\\"],\\n  \\"arrow-circle-chevron-right\\": [\\"arrow_circle_chevron_right_outlined\\", \\"arrow_circle_chevron_right_filled\\"],\\n  \\"arrow-circle-chevron-up\\": [\\"arrow_circle_chevron_up_outlined\\", \\"arrow_circle_chevron_up_filled\\"],\\n  \\"arrow-circle-down\\": [\\"arrow_circle_down_outlined\\", \\"arrow_circle_down_filled\\"],\\n  \\"arrow-circle-left\\": [\\"arrow_circle_left_outlined\\", \\"arrow_circle_left_filled\\"],\\n  \\"arrow-circle-right\\": [\\"arrow_circle_right_outlined\\", \\"arrow_circle_right_filled\\"],\\n  \\"arrow-circle-up\\": [\\"arrow_circle_up_outlined\\", \\"arrow_circle_up_filled\\"],\\n  article: [\\"article_outlined\\", \\"article_filled\\"],\\n  \\"assignment-complete\\": [\\"assignment_complete_outlined\\", \\"assignment_complete_filled\\"],\\n  assignment: [\\"assignment_outlined\\", \\"assignment_filled\\"],\\n  \\"battery-alert\\": [\\"battery_alert_outlined\\", \\"battery_alert_filled\\"],\\n  \\"battery-charging-full\\": [\\"battery_charging_full_outlined\\", \\"battery_charging_full_filled\\"],\\n  \\"bolt-alt-circle\\": [\\"bolt_alt_circle_outlined\\", \\"bolt_alt_circle_filled\\"],\\n  \\"bolt-alt\\": [\\"bolt_alt_outlined\\", \\"bolt_alt_filled\\"],\\n  \\"bolt-circle\\": [\\"bolt_circle_outlined\\", \\"bolt_circle_filled\\"],\\n  bolt: [\\"bolt_outlined\\", \\"bolt_filled\\"],\\n  bookmark: [\\"bookmark_outlined\\", \\"bookmark_filled\\"],\\n  bookmarks: [\\"bookmarks_outlined\\", \\"bookmarks_filled\\"],\\n  build: [\\"build_outlined\\", \\"build_filled\\"],\\n  \\"calendar-available\\": [\\"calendar_available_outlined\\", \\"calendar_available_filled\\"],\\n  \\"calendar-busy\\": [\\"calendar_busy_outlined\\", \\"calendar_busy_filled\\"],\\n  \\"calendar-month\\": [\\"calendar_month_outlined\\", \\"calendar_month_filled\\"],\\n  \\"calendar-today\\": [\\"calendar_today_outlined\\", \\"calendar_today_filled\\"],\\n  call: [\\"call_outlined\\", \\"call_filled\\"],\\n  cancel: [\\"cancel_outlined\\", \\"cancel_filled\\"],\\n  category: [\\"category_outlined\\", \\"category_filled\\"],\\n  \\"chart-add\\": [\\"chart_add_outlined\\", \\"chart_add_filled\\"],\\n  \\"chart-area\\": [\\"chart_area_outlined\\", \\"chart_area_filled\\"],\\n  \\"chart-pie\\": [\\"chart_pie_outlined\\", \\"chart_pie_filled\\"],\\n  \\"chart-table\\": [\\"chart_table_outlined\\", \\"chart_table_filled\\"],\\n  \\"chat-alt\\": [\\"chat_alt_outlined\\", \\"chat_alt_filled\\"],\\n  \\"chat-alt-unread\\": [\\"chat_alt_unread_outlined\\", \\"chat_alt_unread_filled\\"],\\n  chat: [\\"chat_outlined\\", \\"chat_filled\\"],\\n  \\"chat-unread\\": [\\"chat_unread_outlined\\", \\"chat_unread_filled\\"],\\n  \\"check-circle\\": [\\"check_circle_outlined\\", \\"check_circle_filled\\"],\\n  checkbox: [\\"checkbox_outlined\\", \\"checkbox_filled\\"],\\n  \\"checkbox-indeterminate\\": [\\"checkbox_indeterminate_outlined\\", \\"checkbox_indeterminate_filled\\"],\\n  clock: [\\"clock_outlined\\", \\"clock_filled\\"],\\n  \\"cloud-download\\": [\\"cloud_download_outlined\\", \\"cloud_download_filled\\"],\\n  cloud: [\\"cloud_outlined\\", \\"cloud_filled\\"],\\n  \\"cloud-off\\": [\\"cloud_off_outlined\\", \\"cloud_off_filled\\"],\\n  \\"cloud-upload\\": [\\"cloud_upload_outlined\\", \\"cloud_upload_filled\\"],\\n  \\"comment-add\\": [\\"comment_add_outlined\\", \\"comment_add_filled\\"],\\n  comment: [\\"comment_outlined\\", \\"comment_filled\\"],\\n  copy: [\\"copy_outlined\\", \\"copy_filled\\"],\\n  dangerous: [\\"dangerous_outlined\\", \\"dangerous_filled\\"],\\n  dashboard: [\\"dashboard_outlined\\", \\"dashboard_filled\\"],\\n  database: [\\"database_outlined\\", \\"database_filled\\"],\\n  delete: [\\"delete_outlined\\", \\"delete_filled\\"],\\n  desktop: [\\"desktop_outlined\\", \\"desktop_filled\\"],\\n  devices: [\\"devices_outlined\\", \\"devices_filled\\"],\\n  draft: [\\"draft_outlined\\", \\"draft_filled\\"],\\n  eco: [\\"eco_outlined\\", \\"eco_filled\\"],\\n  edit: [\\"edit_outlined\\", \\"edit_filled\\"],\\n  \\"electric-meter\\": [\\"electric_meter_outlined\\", \\"electric_meter_filled\\"],\\n  error: [\\"error_outlined\\", \\"error_filled\\"],\\n  explore: [\\"explore_outlined\\", \\"explore_filled\\"],\\n  \\"explore-off\\": [\\"explore_off_outlined\\", \\"explore_off_filled\\"],\\n  \\"fast-forward\\": [\\"fast_forward_outlined\\", \\"fast_forward_filled\\"],\\n  \\"fast-rewind\\": [\\"fast_rewind_outlined\\", \\"fast_rewind_filled\\"],\\n  feedback: [\\"feedback_outlined\\", \\"feedback_filled\\"],\\n  \\"file-copy\\": [\\"file_copy_outlined\\", \\"file_copy_filled\\"],\\n  \\"file-download\\": [\\"file_download_outlined\\", \\"file_download_filled\\"],\\n  \\"file-upload\\": [\\"file_upload_outlined\\", \\"file_upload_filled\\"],\\n  \\"filter-alt\\": [\\"filter_alt_outlined\\", \\"filter_alt_filled\\"],\\n  \\"filter-alt-off\\": [\\"filter_alt_off_outlined\\", \\"filter_alt_off_filled\\"],\\n  fire: [\\"fire_outlined\\", \\"fire_filled\\"],\\n  \\"fit-screen\\": [\\"fit_screen_outlined\\", \\"fit_screen_filled\\"],\\n  flag: [\\"flag_outlined\\", \\"flag_filled\\"],\\n  flash: [\\"flash_outlined\\", \\"flash_filled\\"],\\n  \\"flash-off\\": [\\"flash_off_outlined\\", \\"flash_off_filled\\"],\\n  \\"folder-add\\": [\\"folder_add_outlined\\", \\"folder_add_filled\\"],\\n  folder: [\\"folder_outlined\\", \\"folder_filled\\"],\\n  \\"folder-move\\": [\\"folder_move_outlined\\", \\"folder_move_filled\\"],\\n  \\"folder-open\\": [\\"folder_open_outlined\\", \\"folder_open_filled\\"],\\n  \\"folder-shared\\": [\\"folder_shared_outlined\\", \\"folder_shared_filled\\"],\\n  forum: [\\"forum_outlined\\", \\"forum_filled\\"],\\n  \\"group-add\\": [\\"group_add_outlined\\", \\"group_add_filled\\"],\\n  group: [\\"group_outlined\\", \\"group_filled\\"],\\n  groups: [\\"groups_outlined\\", \\"groups_filled\\"],\\n  headphones: [\\"headphones_outlined\\", \\"headphones_filled\\"],\\n  heart: [\\"heart_outlined\\", \\"heart_filled\\"],\\n  help: [\\"help_outlined\\", \\"help_filled\\"],\\n  home: [\\"home_outlined\\", \\"home_filled\\"],\\n  hourglass: [\\"hourglass_outlined\\", \\"hourglass_filled\\"],\\n  \\"image-broken\\": [\\"image_broken_outlined\\", \\"image_broken_filled\\"],\\n  image: [\\"image_outlined\\", \\"image_filled\\"],\\n  \\"image-gallery\\": [\\"image_gallery_outlined\\", \\"image_gallery_filled\\"],\\n  inbox: [\\"inbox_outlined\\", \\"inbox_filled\\"],\\n  info: [\\"info_outlined\\", \\"info_filled\\"],\\n  keep: [\\"keep_outlined\\", \\"keep_filled\\"],\\n  \\"keep-off\\": [\\"keep_off_outlined\\", \\"keep_off_filled\\"],\\n  label: [\\"label_outlined\\", \\"label_filled\\"],\\n  laptop: [\\"laptop_outlined\\", \\"laptop_filled\\"],\\n  \\"left-panel-close\\": [\\"left_panel_close_outlined\\", \\"left_panel_close_filled\\"],\\n  \\"left-panel-open\\": [\\"left_panel_open_outlined\\", \\"left_panel_open_filled\\"],\\n  \\"light-off\\": [\\"light_off_outlined\\", \\"light_off_filled\\"],\\n  \\"lightbulb-alt\\": [\\"lightbulb_alt_outlined\\", \\"lightbulb_alt_filled\\"],\\n  \\"lightbulb-circle\\": [\\"lightbulb_circle_outlined\\", \\"lightbulb_circle_filled\\"],\\n  lightbulb: [\\"lightbulb_outlined\\", \\"lightbulb_filled\\"],\\n  \\"list-alt\\": [\\"list_alt_outlined\\", \\"list_alt_filled\\"],\\n  \\"location-me\\": [\\"location_me_outlined\\", \\"location_me_filled\\"],\\n  \\"location-off\\": [\\"location_off_outlined\\", \\"location_off_filled\\"],\\n  \\"location-on\\": [\\"location_on_outlined\\", \\"location_on_filled\\"],\\n  lock: [\\"lock_outlined\\", \\"lock_filled\\"],\\n  \\"lock-open\\": [\\"lock_open_outlined\\", \\"lock_open_filled\\"],\\n  \\"lock-open-right\\": [\\"lock_open_right_outlined\\", \\"lock_open_right_filled\\"],\\n  mail: [\\"mail_outlined\\", \\"mail_filled\\"],\\n  \\"mail-unread\\": [\\"mail_unread_outlined\\", \\"mail_unread_filled\\"],\\n  map: [\\"map_outlined\\", \\"map_filled\\"],\\n  mic: [\\"mic_outlined\\", \\"mic_filled\\"],\\n  \\"mic-off\\": [\\"mic_off_outlined\\", \\"mic_off_filled\\"],\\n  \\"mode-dark\\": [\\"mode_dark_outlined\\", \\"mode_dark_filled\\"],\\n  \\"mode-light\\": [\\"mode_light_outlined\\", \\"mode_light_filled\\"],\\n  notification: [\\"notification_outlined\\", \\"notification_filled\\"],\\n  \\"notification-important\\": [\\"notification_important_outlined\\", \\"notification_important_filled\\"],\\n  \\"notification-off\\": [\\"notification_off_outlined\\", \\"notification_off_filled\\"],\\n  \\"notification-unread\\": [\\"notification_unread_outlined\\", \\"notification_unread_filled\\"],\\n  palette: [\\"palette_outlined\\", \\"palette_filled\\"],\\n  \\"pause-circle\\": [\\"pause_circle_outlined\\", \\"pause_circle_filled\\"],\\n  pause: [\\"pause_outlined\\", \\"pause_filled\\"],\\n  \\"photo-camera\\": [\\"photo_camera_outlined\\", \\"photo_camera_filled\\"],\\n  \\"play-circle\\": [\\"play_circle_outlined\\", \\"play_circle_filled\\"],\\n  play: [\\"play_outlined\\", \\"play_filled\\"],\\n  power: [\\"power_outlined\\", \\"power_filled\\"],\\n  \\"power-off\\": [\\"power_off_outlined\\", \\"power_off_filled\\"],\\n  \\"power-plug-connect\\": [\\"power_plug_connect_outlined\\", \\"power_plug_connect_filled\\"],\\n  \\"power-settings-circle\\": [\\"power_settings_circle_outlined\\", \\"power_settings_circle_filled\\"],\\n  \\"power-solar\\": [\\"power_solar_outlined\\", \\"power_solar_filled\\"],\\n  \\"power-switch\\": [\\"power_switch_outlined\\", \\"power_switch_filled\\"],\\n  \\"power-wind\\": [\\"power_wind_outlined\\", \\"power_wind_filled\\"],\\n  print: [\\"print_outlined\\", \\"print_filled\\"],\\n  \\"right-panel-close\\": [\\"right_panel_close_outlined\\", \\"right_panel_close_filled\\"],\\n  \\"right-panel-open\\": [\\"right_panel_open_outlined\\", \\"right_panel_open_filled\\"],\\n  save: [\\"save_outlined\\", \\"save_filled\\"],\\n  send: [\\"send_outlined\\", \\"send_filled\\"],\\n  settings: [\\"settings_outlined\\", \\"settings_filled\\"],\\n  share: [\\"share_outlined\\", \\"share_filled\\"],\\n  \\"skip-next\\": [\\"skip_next_outlined\\", \\"skip_next_filled\\"],\\n  \\"skip-previous\\": [\\"skip_previous_outlined\\", \\"skip_previous_filled\\"],\\n  smartphone: [\\"smartphone_outlined\\", \\"smartphone_filled\\"],\\n  star: [\\"star_outlined\\", \\"star_filled\\"],\\n  \\"sticky-note\\": [\\"sticky_note_outlined\\", \\"sticky_note_filled\\"],\\n  \\"stop-circle\\": [\\"stop_circle_outlined\\", \\"stop_circle_filled\\"],\\n  stop: [\\"stop_outlined\\", \\"stop_filled\\"],\\n  subtitles: [\\"subtitles_outlined\\", \\"subtitles_filled\\"],\\n  \\"text-snippet\\": [\\"text_snippet_outlined\\", \\"text_snippet_filled\\"],\\n  \\"trash-restore\\": [\\"trash_restore_outlined\\", \\"trash_restore_filled\\"],\\n  unarchive: [\\"unarchive_outlined\\", \\"unarchive_filled\\"],\\n  \\"user-add\\": [\\"user_add_outlined\\", \\"user_add_filled\\"],\\n  \\"user-circle\\": [\\"user_circle_outlined\\", \\"user_circle_filled\\"],\\n  user: [\\"user_outlined\\", \\"user_filled\\"],\\n  \\"user-settings\\": [\\"user_settings_outlined\\", \\"user_settings_filled\\"],\\n  verified: [\\"verified_outlined\\", \\"verified_filled\\"],\\n  \\"video-camera\\": [\\"video_camera_outlined\\", \\"video_camera_filled\\"],\\n  \\"video-camera-off\\": [\\"video_camera_off_outlined\\", \\"video_camera_off_filled\\"],\\n  \\"video-gallery\\": [\\"video_gallery_outlined\\", \\"video_gallery_filled\\"],\\n  \\"view-agenda\\": [\\"view_agenda_outlined\\", \\"view_agenda_filled\\"],\\n  \\"view-column\\": [\\"view_column_outlined\\", \\"view_column_filled\\"],\\n  \\"view-grid\\": [\\"view_grid_outlined\\", \\"view_grid_filled\\"],\\n  \\"view-kanban\\": [\\"view_kanban_outlined\\", \\"view_kanban_filled\\"],\\n  \\"view-module\\": [\\"view_module_outlined\\", \\"view_module_filled\\"],\\n  \\"view-timeline\\": [\\"view_timeline_outlined\\", \\"view_timeline_filled\\"],\\n  \\"visibility-hide\\": [\\"visibility_hide_outlined\\", \\"visibility_hide_filled\\"],\\n  \\"visibility-show\\": [\\"visibility_show_outlined\\", \\"visibility_show_filled\\"],\\n  \\"volume-down\\": [\\"volume_down_outlined\\", \\"volume_down_filled\\"],\\n  \\"volume-mute\\": [\\"volume_mute_outlined\\", \\"volume_mute_filled\\"],\\n  \\"volume-off\\": [\\"volume_off_outlined\\", \\"volume_off_filled\\"],\\n  \\"volume-up\\": [\\"volume_up_outlined\\", \\"volume_up_filled\\"],\\n  warning: [\\"warning_outlined\\", \\"warning_filled\\"],\\n  waterdrop: [\\"waterdrop_outlined\\", \\"waterdrop_filled\\"],\\n}"}],"projects/ds-rte-lib/src/lib/components/segmented-control/segmented-control.component.ts":[{"name":"segmentClass","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/segmented-control/segmented-control.component.ts","deprecated":false,"deprecationMessage":"","type":"string","defaultValue":"\\"rte-segment\\""},{"name":"segmentSelector","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/segmented-control/segmented-control.component.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"`.${segmentClass}`"}],"projects/ds-rte-lib/src/lib/components/tooltip/tooltip.directive.ts":[{"name":"TOOLTIP_GAP","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/tooltip/tooltip.directive.ts","deprecated":false,"deprecationMessage":"","type":"number","defaultValue":"8"}]},"groupedFunctions":{"projects/ds-rte-lib/src/lib/components/icon/icon-map.ts":[{"name":"isValidIconName","file":"projects/ds-rte-lib/src/lib/components/icon/icon-map.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"iconName","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"boolean","jsdoctags":[{"name":"iconName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}]},"groupedEnumerations":{},"groupedTypeAliases":{"projects/ds-rte-lib/src/lib/components/icon/icon.service.ts":[{"name":"RegularIconIdKey","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"projects/ds-rte-lib/src/lib/components/icon/icon.service.ts","deprecated":false,"deprecationMessage":"","description":"","kind":198},{"name":"TogglableIconIdKey","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"projects/ds-rte-lib/src/lib/components/icon/icon.service.ts","deprecated":false,"deprecationMessage":"","description":"","kind":198}]}},"routes":[],"coverage":{"count":0,"status":"low","files":[{"filePath":"projects/ds-rte-lib/src/lib/components/badge/badge.component.ts","type":"component","linktype":"component","name":"BadgeComponent","coveragePercent":0,"coverageCount":"0/13","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/badge/badge.directive.ts","type":"directive","linktype":"directive","name":"BadgeDirective","coveragePercent":0,"coverageCount":"0/17","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/button/button.component.ts","type":"component","linktype":"component","name":"ButtonComponent","coveragePercent":0,"coverageCount":"0/13","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/checkbox-group/checkbox-group.component.ts","type":"component","linktype":"component","name":"CheckboxGroupComponent","coveragePercent":0,"coverageCount":"0/21","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/checkbox/checkbox.component.ts","type":"component","linktype":"component","name":"CheckboxComponent","coveragePercent":0,"coverageCount":"0/22","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/chip/chip.component.ts","type":"component","linktype":"component","name":"ChipComponent","coveragePercent":0,"coverageCount":"0/20","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/divider/divider.component.ts","type":"component","linktype":"component","name":"DividerComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/grid/col/col.directive.ts","type":"directive","linktype":"directive","name":"ColDirective","coveragePercent":0,"coverageCount":"0/16","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/grid/grid.directive.ts","type":"directive","linktype":"directive","name":"GridDirective","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/icon-button-toggle/icon-button-toggle.component.ts","type":"component","linktype":"component","name":"IconButtonToggleComponent","coveragePercent":0,"coverageCount":"0/21","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/icon-button/icon-button.component.ts","type":"component","linktype":"component","name":"IconButtonComponent","coveragePercent":0,"coverageCount":"0/16","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/icon/icon-map.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"isValidIconName","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/icon/icon-map.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"RegularIcons","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/icon/icon-map.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"TogglableIcons","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/icon/icon.component.ts","type":"component","linktype":"component","name":"IconComponent","coveragePercent":0,"coverageCount":"0/16","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/icon/icon.service.ts","type":"injectable","linktype":"injectable","name":"IconService","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/icon/icon.service.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"RegularIconIdKey","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/icon/icon.service.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"TogglableIconIdKey","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/link/link.component.ts","type":"component","linktype":"component","name":"LinkComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/radio-button-group/radio-button-group.component.ts","type":"component","linktype":"component","name":"RadioButtonGroupComponent","coveragePercent":0,"coverageCount":"0/20","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/radio-button/radio-button.component.ts","type":"component","linktype":"component","name":"RadioButtonComponent","coveragePercent":0,"coverageCount":"0/13","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/segmented-control/segmented-control.component.ts","type":"component","linktype":"component","name":"SegmentedControlComponent","coveragePercent":0,"coverageCount":"0/27","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/segmented-control/segmented-control.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"segmentClass","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/segmented-control/segmented-control.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"segmentSelector","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/split-button/split-button.component.ts","type":"component","linktype":"component","name":"SplitButtonComponent","coveragePercent":0,"coverageCount":"0/21","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/switch/switch.component.ts","type":"component","linktype":"component","name":"SwitchComponent","coveragePercent":0,"coverageCount":"0/21","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/tag/tag.component.ts","type":"component","linktype":"component","name":"TagComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/text-input/text-input.component.ts","type":"component","linktype":"component","name":"TextInputComponent","coveragePercent":0,"coverageCount":"0/51","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/textarea/textarea.component.ts","type":"component","linktype":"component","name":"TextareaComponent","coveragePercent":0,"coverageCount":"0/38","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/tooltip/tooltip.component.ts","type":"component","linktype":"component","name":"TooltipComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/tooltip/tooltip.directive.ts","type":"directive","linktype":"directive","name":"TooltipDirective","coveragePercent":0,"coverageCount":"0/32","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/tooltip/tooltip.directive.ts","type":"interface","linktype":"interface","name":"TooltipBounds","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/tooltip/tooltip.directive.ts","type":"interface","linktype":"interface","name":"TooltipXBound","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/tooltip/tooltip.directive.ts","type":"interface","linktype":"interface","name":"TooltipYBound","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/tooltip/tooltip.directive.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"TOOLTIP_GAP","coveragePercent":0,"coverageCount":"0/1","status":"low"}]}}');(0,angular.$)(documentation_namespaceObject);const preview={parameters:{controls:{matchers:{color:/(background|color)$/i,date:/Date$/i}}},decorators:[...[(0,dist.applicationConfig)({providers:[(0,core.importProvidersFrom)(http.q1)]})],(0,dist.componentWrapperDecorator)(story=>`<div style="padding: 20px; background-color: var(--background-default); width: auto; height: 100%;">${story}</div>`)]};external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel().on("THEME_CHANGED",theme=>{document.querySelector("html")?.setAttribute("data-mode",theme.theme),document.querySelector("html")?.setAttribute("data-theme",theme.color)}),document.querySelector("html")?.setAttribute("data-theme","bleu_iceberg"),document.querySelector("html")?.setAttribute("data-mode","light");const _storybook_preview=preview},"./projects/ds-rte-lib/src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/projects\\/ds-rte-lib\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./lib/components/badge/stories/badge.mdx":["./projects/ds-rte-lib/src/lib/components/badge/stories/badge.mdx",29887,52767],"./lib/components/button/stories/button.mdx":["./projects/ds-rte-lib/src/lib/components/button/stories/button.mdx",29887,45601]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then(()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e});var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then(()=>__webpack_require__(id))}webpackAsyncContext.keys=()=>Object.keys(map),webpackAsyncContext.id="./projects/ds-rte-lib/src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/projects\\/ds-rte-lib\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$",module.exports=webpackAsyncContext},"./projects/ds-rte-lib/src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/projects\\/ds-rte-lib\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cmjs%7Cts%7Ctsx))$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./lib/components/badge/stories/badge.directive.stories":["./projects/ds-rte-lib/src/lib/components/badge/stories/badge.directive.stories.ts",19514,49517],"./lib/components/badge/stories/badge.directive.stories.ts":["./projects/ds-rte-lib/src/lib/components/badge/stories/badge.directive.stories.ts",19514,49517],"./lib/components/button/stories/button.component.stories":["./projects/ds-rte-lib/src/lib/components/button/stories/button.component.stories.ts",28289],"./lib/components/button/stories/button.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/button/stories/button.component.stories.ts",28289],"./lib/components/checkbox-group/checkbox-group.component.stories":["./projects/ds-rte-lib/src/lib/components/checkbox-group/checkbox-group.component.stories.ts",19514,26282,43171],"./lib/components/checkbox-group/checkbox-group.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/checkbox-group/checkbox-group.component.stories.ts",19514,26282,43171],"./lib/components/checkbox/checkbox.component.stories":["./projects/ds-rte-lib/src/lib/components/checkbox/checkbox.component.stories.ts",19514,26282,55667],"./lib/components/checkbox/checkbox.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/checkbox/checkbox.component.stories.ts",19514,26282,55667],"./lib/components/chip/stories/chip.component.stories":["./projects/ds-rte-lib/src/lib/components/chip/stories/chip.component.stories.ts",19514,3124,83579,94885],"./lib/components/chip/stories/chip.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/chip/stories/chip.component.stories.ts",19514,3124,83579,94885],"./lib/components/divider/divider.component.stories":["./projects/ds-rte-lib/src/lib/components/divider/divider.component.stories.ts",20235],"./lib/components/divider/divider.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/divider/divider.component.stories.ts",20235],"./lib/components/grid/grid.directive.stories":["./projects/ds-rte-lib/src/lib/components/grid/grid.directive.stories.ts",74683],"./lib/components/grid/grid.directive.stories.ts":["./projects/ds-rte-lib/src/lib/components/grid/grid.directive.stories.ts",74683],"./lib/components/icon-button-toggle/icon-button-toggle.stories":["./projects/ds-rte-lib/src/lib/components/icon-button-toggle/icon-button-toggle.stories.ts",19514,3124,28453],"./lib/components/icon-button-toggle/icon-button-toggle.stories.ts":["./projects/ds-rte-lib/src/lib/components/icon-button-toggle/icon-button-toggle.stories.ts",19514,3124,28453],"./lib/components/icon-button/icon-button.stories":["./projects/ds-rte-lib/src/lib/components/icon-button/icon-button.stories.ts",19514,3124,82929],"./lib/components/icon-button/icon-button.stories.ts":["./projects/ds-rte-lib/src/lib/components/icon-button/icon-button.stories.ts",19514,3124,82929],"./lib/components/icon/icon.stories":["./projects/ds-rte-lib/src/lib/components/icon/icon.stories.ts",19514,89097],"./lib/components/icon/icon.stories.ts":["./projects/ds-rte-lib/src/lib/components/icon/icon.stories.ts",19514,89097],"./lib/components/link/link.component.stories":["./projects/ds-rte-lib/src/lib/components/link/link.component.stories.ts",19514,59729],"./lib/components/link/link.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/link/link.component.stories.ts",19514,59729],"./lib/components/radio-button-group/radio-button-group.component.stories":["./projects/ds-rte-lib/src/lib/components/radio-button-group/radio-button-group.component.stories.ts",35489,42313],"./lib/components/radio-button-group/radio-button-group.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/radio-button-group/radio-button-group.component.stories.ts",35489,42313],"./lib/components/radio-button/radio-button.component.stories":["./projects/ds-rte-lib/src/lib/components/radio-button/radio-button.component.stories.ts",35489,82385],"./lib/components/radio-button/radio-button.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/radio-button/radio-button.component.stories.ts",35489,82385],"./lib/components/segmented-control/stories/segmented-control.component.stories":["./projects/ds-rte-lib/src/lib/components/segmented-control/stories/segmented-control.component.stories.ts",19514,55719],"./lib/components/segmented-control/stories/segmented-control.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/segmented-control/stories/segmented-control.component.stories.ts",19514,55719],"./lib/components/split-button/split-button.component.stories":["./projects/ds-rte-lib/src/lib/components/split-button/split-button.component.stories.ts",19514,60995],"./lib/components/split-button/split-button.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/split-button/split-button.component.stories.ts",19514,60995],"./lib/components/switch/switch.component.stories":["./projects/ds-rte-lib/src/lib/components/switch/switch.component.stories.ts",19514,5657],"./lib/components/switch/switch.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/switch/switch.component.stories.ts",19514,5657],"./lib/components/tag/tag.stories":["./projects/ds-rte-lib/src/lib/components/tag/tag.stories.ts",19514,86121],"./lib/components/tag/tag.stories.ts":["./projects/ds-rte-lib/src/lib/components/tag/tag.stories.ts",19514,86121],"./lib/components/text-input/text-input.component.stories":["./projects/ds-rte-lib/src/lib/components/text-input/text-input.component.stories.ts",19514,3124,83579,17445],"./lib/components/text-input/text-input.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/text-input/text-input.component.stories.ts",19514,3124,83579,17445],"./lib/components/textarea/textarea.component.stories":["./projects/ds-rte-lib/src/lib/components/textarea/textarea.component.stories.ts",19514,96179,3217],"./lib/components/textarea/textarea.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/textarea/textarea.component.stories.ts",19514,96179,3217],"./lib/components/tooltip/tooltip.directive.stories":["./projects/ds-rte-lib/src/lib/components/tooltip/tooltip.directive.stories.ts",49481],"./lib/components/tooltip/tooltip.directive.stories.ts":["./projects/ds-rte-lib/src/lib/components/tooltip/tooltip.directive.stories.ts",49481]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then(()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e});var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then(()=>__webpack_require__(id))}webpackAsyncContext.keys=()=>Object.keys(map),webpackAsyncContext.id="./projects/ds-rte-lib/src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/projects\\/ds-rte-lib\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cmjs%7Cts%7Ctsx))$",module.exports=webpackAsyncContext},"storybook/internal/channels":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CHANNELS__},"storybook/internal/client-logger":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CLIENT_LOGGER__},"storybook/internal/preview-errors":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS__},"storybook/internal/core-events":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CORE_EVENTS__},"@storybook/global":module=>{"use strict";module.exports=__STORYBOOK_MODULE_GLOBAL__},"storybook/internal/preview-api":module=>{"use strict";module.exports=__STORYBOOK_MODULE_PREVIEW_API__}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[77507],()=>(__webpack_exec__("../../node_modules/@angular/compiler/fesm2022/compiler.mjs"),__webpack_exec__("../../node_modules/zone.js/fesm2015/zone.js"),__webpack_exec__("./storybook-config-entry.js"),__webpack_exec__("../core/design-tokens/main.scss?ngGlobalStyle"),__webpack_exec__("./.storybook/preview.scss?ngGlobalStyle"),__webpack_exec__("./.storybook/main.scss?ngGlobalStyle")));__webpack_require__.O()}]);