"use strict";(self.webpackChunk_design_system_rte_angular_builder=self.webpackChunk_design_system_rte_angular_builder||[]).push([[5667],{"./projects/ds-rte-lib/src/lib/components/checkbox/checkbox.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Disabled:()=>Disabled,Error:()=>Error,Indeterminated:()=>Indeterminated,KeyboardInteractions:()=>KeyboardInteractions,ReadOnly:()=>ReadOnly,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _home_runner_work_design_system_rte_design_system_rte_packages_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"),_storybook_test__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@storybook/test/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Checkbox",component:__webpack_require__("./projects/ds-rte-lib/src/lib/components/checkbox/checkbox.component.ts").P,tags:["autodocs"],argTypes:{label:{control:"text",defaultValue:"Label"},description:{control:"text",defaultValue:"Description"},showLabel:{control:"boolean",defaultValue:!0},disabled:{control:"boolean",defaultValue:!1},indeterminate:{control:"boolean",defaultValue:!1},errorMessage:{control:"text",defaultValue:""},readOnly:{control:"boolean",defaultValue:!1},checked:{control:"boolean",defaultValue:!1}}},Default={args:{id:"my-checkbox",label:"Label",description:"Description",disabled:!1,readOnly:!1,showLabel:!0,indeterminate:!1,errorMessage:""},play:(_ref=(0,_home_runner_work_design_system_rte_design_system_rte_packages_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_2__.A)(function*({canvasElement}){const checkbox=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.ux)(canvasElement).getByRole("checkbox");yield _storybook_test__WEBPACK_IMPORTED_MODULE_0__.Q4.click(checkbox),(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.E3)(checkbox).toBeChecked(),checkbox.blur()}),function play(_x){return _ref.apply(this,arguments)})};var _ref;const Disabled={args:{...Default.args,disabled:!0},play:(_ref2=(0,_home_runner_work_design_system_rte_design_system_rte_packages_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_2__.A)(function*({canvasElement}){const checkbox=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.ux)(canvasElement).getByRole("checkbox");(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.E3)(checkbox).toBeDisabled(),yield _storybook_test__WEBPACK_IMPORTED_MODULE_0__.Q4.click(checkbox),(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.E3)(checkbox).not.toBeChecked()}),function play(_x2){return _ref2.apply(this,arguments)})};var _ref2;const Indeterminated={args:{...Default.args,indeterminate:!0}},ReadOnly={args:{...Default.args,readOnly:!0,checked:!0},play:(_ref3=(0,_home_runner_work_design_system_rte_design_system_rte_packages_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_2__.A)(function*({canvasElement}){const checkbox=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.ux)(canvasElement).getByRole("checkbox");yield _storybook_test__WEBPACK_IMPORTED_MODULE_0__.Q4.keyboard("{Tab}"),(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.E3)(checkbox).toHaveFocus(),yield _storybook_test__WEBPACK_IMPORTED_MODULE_0__.Q4.keyboard("{ }"),(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.E3)(checkbox).toBeChecked(),checkbox.blur()}),function play(_x3){return _ref3.apply(this,arguments)})};var _ref3;const Error={args:{...Default.args,errorMessage:"Error message"}},KeyboardInteractions={args:{...Default.args},play:(_ref4=(0,_home_runner_work_design_system_rte_design_system_rte_packages_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_2__.A)(function*({canvasElement}){const checkbox=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.ux)(canvasElement).getByRole("checkbox");yield _storybook_test__WEBPACK_IMPORTED_MODULE_0__.Q4.keyboard("{Tab}"),(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.E3)(checkbox).toHaveFocus(),yield _storybook_test__WEBPACK_IMPORTED_MODULE_0__.Q4.keyboard("{ }"),(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.E3)(checkbox).toBeChecked(),checkbox.blur()}),function play(_x4){return _ref4.apply(this,arguments)})};var _ref4;const __namedExportsOrder=["Default","Disabled","Indeterminated","ReadOnly","Error","KeyboardInteractions"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    id: "my-checkbox",\n    label: "Label",\n    description: "Description",\n    disabled: false,\n    readOnly: false,\n    showLabel: true,\n    indeterminate: false,\n    errorMessage: ""\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const checkbox = canvas.getByRole("checkbox");\n    await userEvent.click(checkbox);\n    expect(checkbox).toBeChecked();\n    checkbox.blur();\n  }\n}',...Default.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    disabled: true\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const checkbox = canvas.getByRole("checkbox");\n    expect(checkbox).toBeDisabled();\n    await userEvent.click(checkbox);\n    expect(checkbox).not.toBeChecked();\n  }\n}',...Disabled.parameters?.docs?.source}}},Indeterminated.parameters={...Indeterminated.parameters,docs:{...Indeterminated.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Default.args,\n    indeterminate: true\n  }\n}",...Indeterminated.parameters?.docs?.source}}},ReadOnly.parameters={...ReadOnly.parameters,docs:{...ReadOnly.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    readOnly: true,\n    checked: true\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const checkbox = canvas.getByRole("checkbox");\n    await userEvent.keyboard(`{Tab}`);\n    expect(checkbox).toHaveFocus();\n    await userEvent.keyboard(`{ }`);\n    expect(checkbox).toBeChecked();\n    checkbox.blur();\n  }\n}',...ReadOnly.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    errorMessage: "Error message"\n  }\n}',...Error.parameters?.docs?.source}}},KeyboardInteractions.parameters={...KeyboardInteractions.parameters,docs:{...KeyboardInteractions.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const checkbox = canvas.getByRole("checkbox");\n    await userEvent.keyboard(`{Tab}`);\n    expect(checkbox).toHaveFocus();\n    await userEvent.keyboard(`{ }`);\n    expect(checkbox).toBeChecked();\n    checkbox.blur();\n  }\n}',...KeyboardInteractions.parameters?.docs?.source}}}}}]);