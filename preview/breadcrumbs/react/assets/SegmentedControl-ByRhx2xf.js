import{j as u}from"./jsx-runtime-Cf8x2fCZ.js";import{r as d}from"./index-G8LIXM5I.js";import{S as L,E as b,T as x,a as S,A as _}from"./keyboard.constants-Ci2qhLdf.js";import{u as N}from"./useActiveKeyboard-DAXsdPh3.js";import{I as T}from"./Icon-DjEid3Hw.js";const j=(e,t)=>t===2?e===0?"left":"right":e===0?"left":e===t-1?"right":"middle",k=(e,t,n)=>{var o;let s=e<t.length-2?e+1:0;for(;(o=t[s])!=null&&o.classList.contains(n);)s<t.length-1?s++:s=0;t[s].focus()},C=(e,t,n)=>{var o;let s=e>0?e-1:t.length-1;for(;(o=t[s])!=null&&o.classList.contains(n);)s>0?s--:s=t.length-1;t[s].focus()},H=(e,t)=>{const n=e<t.length-1?e+1:0;t[n].focus()},O=(e,t)=>{const n=e>0?e-1:t.length-1;t[n].focus()},I=e=>{if(e.length<=1||e.length>3)return console.warn("SegmentedControl: 'options' should have 2 or 3 items."),!1;const t=e.filter(n=>n.icon).length;return t>0&&t<e.length?(console.warn("SegmentedControl: All options must either have an icon or none."),!1):!0},q="_segment_21860_3",m={"segmented-control":"_segmented-control_21860_3","segment-selected-indicator":"_segment-selected-indicator_21860_14","segment-container":"_segment-container_21860_23",segment:q,"segment-content":"_segment-content_21860_75","segment-label":"_segment-label_21860_82","selected-icon":"_selected-icon_21860_95"},P=(e,t,n)=>{const[s,o]=d.useState({left:0,width:0}),a=d.useCallback(()=>{if(!e.current)return;const c=t.findIndex(r=>r.id===n);if(c<0)return;const l=e.current.querySelectorAll(`.${m.segment}`)[c];l&&o({left:l.offsetLeft,width:l.offsetWidth})},[n,t,e]);return d.useEffect(()=>(a(),window.addEventListener("resize",a),()=>{window.removeEventListener("resize",a)}),[n,t,e,a]),s},U=["button","a[href]","input","select","textarea","details",'[tabindex]:not([tabindex="-1"])'],Y=U.map(e=>e+":not([disabled]):not([aria-hidden])").join(","),z=()=>{const[e,t]=d.useState([]);return d.useEffect(()=>{const n=()=>{t(Array.from(document.querySelectorAll(Y)))};n();const s=new MutationObserver(n);return s.observe(document.body,{childList:!0,subtree:!0,attributes:!0}),()=>s.disconnect()},[]),e},B=e=>{d.useEffect(()=>{var a;const t=e.current;if(!t)return;let n="";const s=c=>{n=c.key};window.addEventListener("keydown",s);const o=()=>{var c,l;if(n==="Tab"){const r=(c=t.parentElement)==null?void 0:c.parentElement,f=r==null?void 0:r.querySelector("[data-selected='true']");f?f.focus():(l=Array.from((r==null?void 0:r.querySelectorAll("."+m.segment))??[])[0])==null||l.focus()}};return(a=e.current)==null||a.addEventListener("focus",o),()=>{window.removeEventListener("keydown",s),t.removeEventListener("focus",o)}},[e])},R=({id:e,icon:t,label:n,position:s,isSelected:o,onClick:a,...c})=>{const l=d.useRef(null),r=z();B(l);const f=i=>{var p,g;if(i.key===L||i.key===b)y==null||y(i);else if(i.key===S||i.key===_){const v=(g=(p=l.current)==null?void 0:p.parentElement)==null?void 0:g.parentElement,h=Array.from((v==null?void 0:v.querySelectorAll("."+m.segment))??[]),w=h.findIndex(D=>D===document.activeElement);i.key===_?H(w,h):i.key===S&&O(w,h)}},E=i=>{if(i.key===x){const p=document.activeElement,g=Array.from(r).indexOf(p);i.shiftKey?C(g,r,m.segment):k(g,r,m.segment)}},{onBlur:K,onKeyDown:M,onKeyUp:A}=N({onKeyUp:f,onKeyDown:E},{id:e,interactiveKeyCodes:[L,b,x,S,_]}),y=i=>{i.preventDefault(),i.stopPropagation(),a==null||a(i)};return u.jsx("div",{className:m["segment-container"],"data-position":s,...c,children:u.jsxs("div",{id:e,role:"radio","aria-checked":o,"aria-label":n,className:m.segment,"data-segment-type":t?"icon":"label","data-selected":o,onKeyDown:M,onKeyUp:A,onBlur:K,onClick:y,tabIndex:0,ref:l,children:[o&&u.jsx(T,{name:"check-small",appearance:"filled",size:24,className:m["selected-icon"]}),u.jsx("div",{className:m["segment-content"],children:t?u.jsx(T,{name:t,appearance:o?"filled":"outlined",size:24}):u.jsx("span",{className:m["segment-label"],children:n})})]})})};R.__docgenInfo={description:"",methods:[],displayName:"Segment",props:{onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: React.MouseEvent<HTMLDivElement> | React.KeyboardEvent<HTMLDivElement>) => void",signature:{arguments:[{type:{name:"union",raw:"React.MouseEvent<HTMLDivElement> | React.KeyboardEvent<HTMLDivElement>",elements:[{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLDivElement>",elements:[{name:"HTMLDivElement"}]},{name:"ReactKeyboardEvent",raw:"React.KeyboardEvent<HTMLDivElement>",elements:[{name:"HTMLDivElement"}]}]},name:"event"}],return:{name:"void"}}},description:""},parentRef:{required:!1,tsType:{name:"MutableRefObject",elements:[{name:"union",raw:"HTMLDivElement | null",elements:[{name:"HTMLDivElement"},{name:"null"}]}],raw:"MutableRefObject<HTMLDivElement | null>"},description:""}},composes:["CoreSegmentProps","Omit"]};const W=d.forwardRef(({options:e,onChange:t,selectedSegment:n,...s},o)=>{const a=d.useRef(null),c=P(a,e,n),l=r=>{const E=r.currentTarget.getAttribute("id")||"";t(E)};return I(e)?u.jsxs("div",{ref:r=>{a.current=r,typeof o=="function"?o(r):o&&(o.current=r)},role:"radiogroup",className:m["segmented-control"],...s,children:[u.jsx("span",{className:m["segment-selected-indicator"],style:{left:c.left,width:c.width}}),e.map((r,f)=>u.jsx(R,{position:j(f,e.length),onClick:l,isSelected:n===r.id,...r},`${r.id}-${f}`))]}):null});W.__docgenInfo={description:"",methods:[],displayName:"SegmentedControl",props:{onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(id: string) => void",signature:{arguments:[{type:{name:"string"},name:"id"}],return:{name:"void"}}},description:""}},composes:["CoreSegmentedControlProps","Omit"]};export{W as S};
