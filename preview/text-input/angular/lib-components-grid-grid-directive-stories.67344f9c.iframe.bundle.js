"use strict";(self.webpackChunk_design_system_rte_angular_builder=self.webpackChunk_design_system_rte_angular_builder||[]).push([[4683],{"./projects/ds-rte-lib/src/lib/components/grid/grid.directive.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FixedNarrow:()=>FixedNarrow,FixedWide:()=>FixedWide,Fluid:()=>Fluid,ResponsiveColumns:()=>ResponsiveColumns,__namedExportsOrder:()=>__namedExportsOrder,default:()=>grid_directive_stories});var common=__webpack_require__("../../node_modules/@angular/common/fesm2022/common.mjs"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("../../node_modules/@angular/core/fesm2022/core.mjs");let ColDirective=class ColDirective{get colClasses(){return["col",this.generateColumnClass("col-xxs",this.xxs()),this.generateColumnClass("col-xs",this.xs()),this.generateColumnClass("col-s",this.s()),this.generateColumnClass("col-m",this.m()),this.generateColumnClass("col-l",this.l()),this.generateColumnClass("col-xl",this.xl())].filter(Boolean).join(" ")}constructor(){this.xxs=(0,core.input)(),this.xs=(0,core.input)(),this.s=(0,core.input)(),this.m=(0,core.input)(),this.l=(0,core.input)(),this.xl=(0,core.input)()}generateColumnClass(prefix,size){return size?`${prefix}-${size}`:""}static{this.ctorParameters=()=>[]}static{this.propDecorators={xxs:[{type:core.Input,args:[{isSignal:!0,alias:"xxs",required:!1,transform:void 0}]}],xs:[{type:core.Input,args:[{isSignal:!0,alias:"xs",required:!1,transform:void 0}]}],s:[{type:core.Input,args:[{isSignal:!0,alias:"s",required:!1,transform:void 0}]}],m:[{type:core.Input,args:[{isSignal:!0,alias:"m",required:!1,transform:void 0}]}],l:[{type:core.Input,args:[{isSignal:!0,alias:"l",required:!1,transform:void 0}]}],xl:[{type:core.Input,args:[{isSignal:!0,alias:"xl",required:!1,transform:void 0}]}],colClasses:[{type:core.HostBinding,args:["class"]}]}}};ColDirective=(0,tslib_es6.Cg)([(0,core.Directive)({selector:"[dsCol]",standalone:!0})],ColDirective);let GridDirective=class GridDirective{get hostClasses(){return"grid"}get hostDataClasses(){return`${this.gridType()}`}constructor(){this.gridType=(0,core.input)("fluid")}static{this.ctorParameters=()=>[]}static{this.propDecorators={gridType:[{type:core.Input,args:[{isSignal:!0,alias:"gridType",required:!1,transform:void 0}]}],hostClasses:[{type:core.HostBinding,args:["class"]}],hostDataClasses:[{type:core.HostBinding,args:["attr.data-gridtype"]}]}}};GridDirective=(0,tslib_es6.Cg)([(0,core.Directive)({selector:"[rte-grid]",standalone:!0})],GridDirective);const grid_directive_stories={title:"Grid",component:GridDirective,tags:["autodocs"],argTypes:{gridType:{control:"select",defaultValue:args=>args.gridType,options:["fluid","fixed-narrow","fixed-wide"],description:"The type of grid to use"}},decorators:[(0,dist.moduleMetadata)({imports:[common.CommonModule,ColDirective]}),(0,dist.componentWrapperDecorator)(story=>`<div class="sb-css-grid-container">${story}</div>`)]},defaultTemplate=gridType=>`\n        <div rte-grid \n          [gridType]="'${gridType}'"\n          data-testid="grid"\n          >\n            <ng-container *ngFor="let item of items">\n              <div\n                dsCol\n                ></div>\n            </ng-container>\n          </div>\n    `,Fluid={args:{gridType:"fluid"},render:args=>({props:{...args,items:Array.from(Array(12)).map((_,i)=>i+1)},template:defaultTemplate(args.gridType)})},FixedWide={args:{gridType:"fixed-wide"},render:args=>({props:{...args,items:Array.from(Array(12)).map((_,i)=>i+1)},template:defaultTemplate(args.gridType)})},FixedNarrow={args:{gridType:"fixed-narrow"},render:args=>({props:{...args,items:Array.from(Array(12)).map((_,i)=>i+1)},template:defaultTemplate(args.gridType)})},ResponsiveColumns={args:{gridType:"fluid"},render:args=>({template:`\n        <div rte-grid \n          [gridType]="'${args.gridType}'"\n          data-testid="grid"\n        >\n          <div dsCol [xxs]=1 [xs]=1 [s]=3 [m]=4 [l]=4 [xl]=12>\n            <div>\n              <p>xxs : Span 1 de 2</p>\n              <p>xs : Span 1 de 6</p>\n              <p>s : Span 3 de 6</p>\n            </div>\n            <div>\n              <p>m : Span 4 de 12</p>\n              <p>l : Span 4 de 12</p>\n              <p>xl : Span 12 de 12</p>\n            </div>\n          </div>\n          <div dsCol [xxs]=1 [xs]=3 [s]=3 [m]=4 [l]=8 [xl]=12>\n                  <div>\n            <p>xxs : Span 1 de 2</p>\n            <p>xs : Span 3 de 6</p>\n            <p>s : Span 3 de 6</p>\n          </div>\n          <div>\n            <p>m : Span 4 de 12</p>\n            <p>l : Span 8 de 12</p>\n            <p>xl : Span 12 de 12</p>\n          </div>\n          </div>\n          <div dsCol [xxs]=2 [xs]=2 [s]=3 [m]=4 [l]=10 [xl]=12>\n            <div>\n              <p>xxs : Span 2 de 2</p>\n              <p>xs : Span 2 de 6</p>\n              <p>s : Span 3 de 6</p>\n            </div>\n            <div>\n              <p>m : Span 4 de 12</p>\n              <p>l : Span 10 de 12</p>\n              <p>xl : Span 12 de 12</p>\n            </div>\n            </div>\n          <div dsCol [xxs]=2 [xs]=6 [s]=6 [m]=4 [l]=12 [xl]=12>\n            <div>\n              <p>xxs : Span 2 de 2</p>\n              <p>xs : Span 6 de 6</p>\n              <p>s : Span 6 de 6</p>\n            </div>\n            <div>\n              <p>m : Span 4 de 12</p>\n              <p>l : Span 12 de 12</p>\n              <p>xl : Span 12 de 12</p>\n            </div>\n          </div>\n        </div>\n    `})},__namedExportsOrder=["Fluid","FixedWide","FixedNarrow","ResponsiveColumns"];Fluid.parameters={...Fluid.parameters,docs:{...Fluid.parameters?.docs,source:{originalSource:'{\n  args: {\n    gridType: "fluid"\n  },\n  render: args => ({\n    props: {\n      ...args,\n      items: Array.from(Array(COLUMN_NUMBER)).map((_, i) => i + 1)\n    },\n    template: defaultTemplate(args.gridType)\n  })\n}',...Fluid.parameters?.docs?.source}}},FixedWide.parameters={...FixedWide.parameters,docs:{...FixedWide.parameters?.docs,source:{originalSource:'{\n  args: {\n    gridType: "fixed-wide"\n  },\n  render: args => ({\n    props: {\n      ...args,\n      items: Array.from(Array(COLUMN_NUMBER)).map((_, i) => i + 1)\n    },\n    template: defaultTemplate(args.gridType)\n  })\n}',...FixedWide.parameters?.docs?.source}}},FixedNarrow.parameters={...FixedNarrow.parameters,docs:{...FixedNarrow.parameters?.docs,source:{originalSource:'{\n  args: {\n    gridType: "fixed-narrow"\n  },\n  render: args => ({\n    props: {\n      ...args,\n      items: Array.from(Array(COLUMN_NUMBER)).map((_, i) => i + 1)\n    },\n    template: defaultTemplate(args.gridType)\n  })\n}',...FixedNarrow.parameters?.docs?.source}}},ResponsiveColumns.parameters={...ResponsiveColumns.parameters,docs:{...ResponsiveColumns.parameters?.docs,source:{originalSource:'{\n  args: {\n    gridType: "fluid"\n  },\n  render: args => ({\n    template: `\n        <div rte-grid \n          [gridType]="\'${args.gridType}\'"\n          data-testid="grid"\n        >\n          <div dsCol [xxs]=1 [xs]=1 [s]=3 [m]=4 [l]=4 [xl]=12>\n            <div>\n              <p>xxs : Span 1 de 2</p>\n              <p>xs : Span 1 de 6</p>\n              <p>s : Span 3 de 6</p>\n            </div>\n            <div>\n              <p>m : Span 4 de 12</p>\n              <p>l : Span 4 de 12</p>\n              <p>xl : Span 12 de 12</p>\n            </div>\n          </div>\n          <div dsCol [xxs]=1 [xs]=3 [s]=3 [m]=4 [l]=8 [xl]=12>\n                  <div>\n            <p>xxs : Span 1 de 2</p>\n            <p>xs : Span 3 de 6</p>\n            <p>s : Span 3 de 6</p>\n          </div>\n          <div>\n            <p>m : Span 4 de 12</p>\n            <p>l : Span 8 de 12</p>\n            <p>xl : Span 12 de 12</p>\n          </div>\n          </div>\n          <div dsCol [xxs]=2 [xs]=2 [s]=3 [m]=4 [l]=10 [xl]=12>\n            <div>\n              <p>xxs : Span 2 de 2</p>\n              <p>xs : Span 2 de 6</p>\n              <p>s : Span 3 de 6</p>\n            </div>\n            <div>\n              <p>m : Span 4 de 12</p>\n              <p>l : Span 10 de 12</p>\n              <p>xl : Span 12 de 12</p>\n            </div>\n            </div>\n          <div dsCol [xxs]=2 [xs]=6 [s]=6 [m]=4 [l]=12 [xl]=12>\n            <div>\n              <p>xxs : Span 2 de 2</p>\n              <p>xs : Span 6 de 6</p>\n              <p>s : Span 6 de 6</p>\n            </div>\n            <div>\n              <p>m : Span 4 de 12</p>\n              <p>l : Span 12 de 12</p>\n              <p>xl : Span 12 de 12</p>\n            </div>\n          </div>\n        </div>\n    `\n  })\n}',...ResponsiveColumns.parameters?.docs?.source}}}},"./node_modules/tslib/tslib.es6.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Cg:()=>__decorate});function __decorate(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r}Object.create;Object.create;"function"==typeof SuppressedError&&SuppressedError}}]);