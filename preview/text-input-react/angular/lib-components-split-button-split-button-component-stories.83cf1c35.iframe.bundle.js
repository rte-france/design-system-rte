(self.webpackChunk_design_system_rte_angular_builder=self.webpackChunk_design_system_rte_angular_builder||[]).push([[995],{"./projects/ds-rte-lib/src/lib/components/split-button/split-button.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Appearance:()=>Appearance,CompactSpacing:()=>CompactSpacing,Default:()=>Default,KeyboardInteraction:()=>KeyboardInteraction,Position:()=>Position,Size:()=>Size,__namedExportsOrder:()=>__namedExportsOrder,default:()=>split_button_component_stories});var asyncToGenerator=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"),keyboard_constants=__webpack_require__("../core/constants/keyboard.constants.ts"),dist=__webpack_require__("../../node_modules/@storybook/test/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var split_button_componentngResource=__webpack_require__("./projects/ds-rte-lib/src/lib/components/split-button/split-button.component.scss?ngResource"),split_button_componentngResource_default=__webpack_require__.n(split_button_componentngResource),common=__webpack_require__("../../node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("../../node_modules/@angular/core/fesm2022/core.mjs");const splitButtonLeftIconSize={s:16,m:20,l:24},splitButtonRightIconSize={s:20,m:24,l:28};var icon_component=__webpack_require__("./projects/ds-rte-lib/src/lib/components/icon/icon.component.ts");let SplitButtonComponent=class SplitButtonComponent{constructor(){this.appearance=(0,core.input)("primary"),this.size=(0,core.input)("m"),this.label=core.input.required(),this.compactSpacing=(0,core.input)(!1),this.selected=(0,core.input)(!1),this.position=(0,core.input)("bottom-start"),this.icon=(0,core.input)(),this.disabled=(0,core.input)(!1),this.ariaLabelRight=(0,core.input)(),this.splitButtonLeftIconSize=(0,core.computed)(()=>splitButtonLeftIconSize[this.size()]),this.splitButtonRightIconSize=(0,core.computed)(()=>splitButtonRightIconSize[this.size()]),this.isOpen=(0,core.signal)(!1)}handleKeyDownOnRightButton(event){this.handleKeyDown(event,"ArrowDown",()=>this.isOpen.set(!0)),this.handleKeyDown(event,"Escape",()=>this.isOpen.set(!1))}handleKeyDownOnMenu(event){this.handleKeyDown(event,"Escape",()=>this.isOpen.set(!1))}handleKeyDown(event,key,callback){event.key===key&&(event.preventDefault(),callback())}static{this.propDecorators={appearance:[{type:core.Input,args:[{isSignal:!0,alias:"appearance",required:!1,transform:void 0}]}],size:[{type:core.Input,args:[{isSignal:!0,alias:"size",required:!1,transform:void 0}]}],label:[{type:core.Input,args:[{isSignal:!0,alias:"label",required:!0,transform:void 0}]}],compactSpacing:[{type:core.Input,args:[{isSignal:!0,alias:"compactSpacing",required:!1,transform:void 0}]}],selected:[{type:core.Input,args:[{isSignal:!0,alias:"selected",required:!1,transform:void 0}]}],position:[{type:core.Input,args:[{isSignal:!0,alias:"position",required:!1,transform:void 0}]}],icon:[{type:core.Input,args:[{isSignal:!0,alias:"icon",required:!1,transform:void 0}]}],disabled:[{type:core.Input,args:[{isSignal:!0,alias:"disabled",required:!1,transform:void 0}]}],ariaLabelRight:[{type:core.Input,args:[{isSignal:!0,alias:"ariaLabelRight",required:!1,transform:void 0}]}]}}};SplitButtonComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"rte-split-button",imports:[common.CommonModule,icon_component.R],standalone:!0,template:'<div \n  class="split-button-container size-{{ size() }} {{appearance()}}"\n  [ngClass]="{\'compact-spacing\': compactSpacing()}"\n>\n  <button\n    class="split-button-left size-{{ size() }}"\n    data-testid="Main action button" \n    type="button"\n    [disabled]="disabled()"\n  >\n    <rte-icon \n      *ngIf="icon()"\n      [name]="icon()!"\n      [size]="splitButtonLeftIconSize()"\n    />\n    <p class="split-button-label size-{{ size() }}">\n      {{label()}}\n    </p>\n  </button>\n\n  <div \n    class="split-button-divider"\n    [ngClass]="{\'disabled\': disabled()}"\n  ></div>\n\n  <div class="split-button-right-container">\n    <button\n      class="split-button-right size-{{ size() }}"\n      data-testid="Menu button"\n      type="button"\n      aria-haspopup="menu"\n      [attr.aria-expanded]="isOpen()"\n      [attr.aria-label]="ariaLabelRight()"\n      [attr.data-selected]="selected()"\n      [disabled]="disabled()"\n      (click)="isOpen.set(true)"\n      (mouseenter)="isOpen.set(true)"\n      (mouseleave)="isOpen.set(false)"\n      (keydown)="handleKeyDownOnRightButton($event)"\n    >\n      <div class="split-button-right-icon-container">\n        <rte-icon name="arrow-chevron-down"[size]="splitButtonRightIconSize()"/>\n      </div>\n    </button>\n\n    <div\n      class="split-button-dropdown position-{{ position() }}"\n      role="menu"\n      data-testid="Menu container"\n      [style.visibility]="isOpen() ? \'visible\' : \'hidden\'"\n      (keydown)="handleKeyDownOnMenu($event)"\n    >\n      <ng-content/>\n    </div>\n  </div>\n</div>',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[split_button_componentngResource_default()]})],SplitButtonComponent);const mockChildren='\n  <div style="display: flex; flex-direction: column; gap: 8px; min-width: 120px">\n    <button\n      style="\n        padding: 8px 16px;\n        border: none;\n        border-radius: 4px;\n        background: #2563eb;\n        color: #fff;\n        font-weight: 500;\n        font-size: 15px;\n        cursor: pointer;\n      "\n    >\n      Action 1\n    </button>\n    <button\n      style="\n        padding: 8px 16px;\n        border: none;\n        border-radius: 4px;\n        background: #64748b;\n        color: #fff;\n        font-weight: 500;\n        font-size: 15px;\n        cursor: pointer;\n      "\n    >\n      Action 2\n    </button>\n  </div>\n',wipWarning='\n<div>\n  <span style="font-family: sans-serif; margin-bottom: 16px; border: 1px solid #F4922B; padding: 8px; border-radius: 5px; background-color: #FAFFC1; margin: 0;">\n    Ce composant est en cours de développement et n\'est pas encore disponible\n  </span>\n</div>\n<br/>\n',split_button_component_stories={title:"SplitButton (développement en cours)",id:"SplitButton",component:SplitButtonComponent,tags:["autodocs"],argTypes:{appearance:{control:"select",options:["primary","secondary"]},size:{control:"select",options:["s","m","l"]},compactSpacing:{control:"boolean"},selected:{control:"boolean"},position:{control:"select",options:["bottom-start","bottom-end","top-start","top-end"]},disabled:{control:"boolean"}}},Default={args:{label:"Button Label",ariaLabelRight:"Open menu",size:"m",compactSpacing:!1,appearance:"primary",position:"bottom-start",disabled:!1,selected:!1},render:args=>({props:args,template:`\n      ${wipWarning}\n      <rte-split-button\n        label="${args.label}"\n        ariaLabelRight="${args.ariaLabelRight}"\n        size="${args.size}"\n        [compactSpacing]="${args.compactSpacing}"\n        appearance="${args.appearance}"\n        position="${args.position}"\n        [disabled]="${args.disabled}"\n        [selected]="${args.selected}"\n      >\n        ${mockChildren}\n      </rte-split-button>\n    `}),play:(_ref=(0,asyncToGenerator.A)(function*({canvasElement}){const button=(0,dist.ux)(canvasElement).getByTestId("Main action button");yield dist.Q4.click(button)}),function play(_x){return _ref.apply(this,arguments)})};var _ref;const Appearance={render:args=>({props:args,template:`\n      ${wipWarning}\n      <div style="display: flex; gap: 16px">\n        <rte-split-button\n          label="${args.label}"\n          ariaLabelRight="${args.ariaLabelRight}"\n          size="${args.size}"\n          [compactSpacing]="${args.compactSpacing}"\n          appearance="primary"\n          position="${args.position}"\n          [disabled]="${args.disabled}"\n          [selected]="${args.selected}"\n        >\n          ${mockChildren}\n        </rte-split-button>\n        <rte-split-button\n          label="${args.label}"\n          ariaLabelRight="${args.ariaLabelRight}"\n          size="${args.size}"\n          [compactSpacing]="${args.compactSpacing}"\n          appearance="secondary"\n          position="${args.position}"\n          [disabled]="${args.disabled}"\n          [selected]="${args.selected}"\n        >\n          ${mockChildren}\n        </rte-split-button>\n      </div>\n    `}),args:{...Default.args}},Size={render:args=>({props:args,template:`\n      ${wipWarning}\n      <div style="display: flex; gap: 16px">\n        <rte-split-button\n          label="${args.label}"\n          ariaLabelRight="${args.ariaLabelRight}"\n          size="s"\n          [compactSpacing]="${args.compactSpacing}"\n          appearance="${args.appearance}"\n          position="${args.position}"\n          [disabled]="${args.disabled}"\n          [selected]="${args.selected}"\n        >\n          ${mockChildren}\n        </rte-split-button>\n        <rte-split-button\n          label="${args.label}"\n          ariaLabelRight="${args.ariaLabelRight}"\n          size="m"\n          [compactSpacing]="${args.compactSpacing}"\n          appearance="${args.appearance}"\n          position="${args.position}"\n          [disabled]="${args.disabled}"\n          [selected]="${args.selected}"\n        >\n          ${mockChildren}\n        </rte-split-button>\n        <rte-split-button\n          label="${args.label}"\n          ariaLabelRight="${args.ariaLabelRight}"\n          size="l"\n          [compactSpacing]="${args.compactSpacing}"\n          appearance="${args.appearance}"\n          position="${args.position}"\n          [disabled]="${args.disabled}"\n          [selected]="${args.selected}"\n        >\n          ${mockChildren}\n        </rte-split-button>\n      </div>\n    `}),args:{...Default.args}},CompactSpacing={render:args=>({props:args,template:`\n      ${wipWarning}\n      <div style="display: flex; gap: 16px">\n        <rte-split-button\n          label="${args.label}"\n          ariaLabelRight="${args.ariaLabelRight}"\n          size="s"\n          [compactSpacing]="${args.compactSpacing}"\n          appearance="${args.appearance}"\n          position="${args.position}"\n          [disabled]="${args.disabled}"\n          [selected]="${args.selected}"\n        >\n          ${mockChildren}\n        </rte-split-button>\n        <rte-split-button\n          label="${args.label}"\n          ariaLabelRight="${args.ariaLabelRight}"\n          size="m"\n          [compactSpacing]="${args.compactSpacing}"\n          appearance="${args.appearance}"\n          position="${args.position}"\n          [disabled]="${args.disabled}"\n          [selected]="${args.selected}"\n        >\n          ${mockChildren}\n        </rte-split-button>\n        <rte-split-button\n          label="${args.label}"\n          ariaLabelRight="${args.ariaLabelRight}"\n          size="l"\n          [compactSpacing]="${args.compactSpacing}"\n          appearance="${args.appearance}"\n          position="${args.position}"\n          [disabled]="${args.disabled}"\n          [selected]="${args.selected}"\n        >\n          ${mockChildren}\n        </rte-split-button>\n      </div>\n    `}),args:{...Default.args,compactSpacing:!0}},Position={render:args=>({props:args,template:`\n      ${wipWarning}\n      <div style="display: flex; justify-content: center; align-items: center; min-height: 600px">\n        <div style="display: grid; grid-template-columns: 2fr 2fr; gap: 24px">\n          <rte-split-button\n            label="${args.label}"\n            ariaLabelRight="${args.ariaLabelRight}"\n            size="${args.size}"\n            [compactSpacing]="${args.compactSpacing}"\n            appearance="${args.appearance}"\n            position="top-end"\n            [disabled]="${args.disabled}"\n            [selected]="${args.selected}"\n          >\n            ${mockChildren}\n          </rte-split-button>\n          <rte-split-button\n            label="${args.label}"\n            ariaLabelRight="${args.ariaLabelRight}"\n            size="${args.size}"\n            [compactSpacing]="${args.compactSpacing}"\n            appearance="${args.appearance}"\n            position="top-start"\n            [disabled]="${args.disabled}"\n            [selected]="${args.selected}"\n          >\n            ${mockChildren}\n          </rte-split-button>\n          <rte-split-button\n            label="${args.label}"\n            ariaLabelRight="${args.ariaLabelRight}"\n            size="${args.size}"\n            [compactSpacing]="${args.compactSpacing}"\n            appearance="${args.appearance}"\n            position="bottom-end"\n          >\n            ${mockChildren}\n          </rte-split-button>\n          <rte-split-button\n            label="${args.label}"\n            ariaLabelRight="${args.ariaLabelRight}"\n            size="${args.size}"\n            [compactSpacing]="${args.compactSpacing}"\n            appearance="${args.appearance}"\n            position="bottom-start"\n          >\n            ${mockChildren}\n          </rte-split-button>\n        </div>\n      </div>\n    `}),args:{...Default.args}},KeyboardInteraction={play:(_ref2=(0,asyncToGenerator.A)(function*({canvasElement}){const canvas=(0,dist.ux)(canvasElement),button=canvas.getByTestId("Menu button"),menuContainer=canvas.getByTestId("Menu container");yield dist.Q4.tab(),yield dist.Q4.tab(),(0,dist.E3)(document.activeElement).toBe(button),yield dist.Q4.keyboard(keyboard_constants.vx),yield(0,dist.fm)(()=>(0,dist.E3)(menuContainer).toBeVisible())}),function play(_x2){return _ref2.apply(this,arguments)}),args:{...Default.args}};var _ref2;const __namedExportsOrder=["Default","Appearance","Size","CompactSpacing","Position","KeyboardInteraction"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Button Label",\n    ariaLabelRight: "Open menu",\n    size: "m",\n    compactSpacing: false,\n    appearance: "primary",\n    position: "bottom-start",\n    disabled: false,\n    selected: false\n  },\n  render: args => ({\n    props: args,\n    template: `\n      ${wipWarning}\n      <rte-split-button\n        label="${args.label}"\n        ariaLabelRight="${args.ariaLabelRight}"\n        size="${args.size}"\n        [compactSpacing]="${args.compactSpacing}"\n        appearance="${args.appearance}"\n        position="${args.position}"\n        [disabled]="${args.disabled}"\n        [selected]="${args.selected}"\n      >\n        ${mockChildren}\n      </rte-split-button>\n    `\n  }),\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const button = canvas.getByTestId("Main action button");\n    await userEvent.click(button);\n  }\n}',...Default.parameters?.docs?.source}}},Appearance.parameters={...Appearance.parameters,docs:{...Appearance.parameters?.docs,source:{originalSource:'{\n  render: args => ({\n    props: args,\n    template: `\n      ${wipWarning}\n      <div style="display: flex; gap: 16px">\n        <rte-split-button\n          label="${args.label}"\n          ariaLabelRight="${args.ariaLabelRight}"\n          size="${args.size}"\n          [compactSpacing]="${args.compactSpacing}"\n          appearance="primary"\n          position="${args.position}"\n          [disabled]="${args.disabled}"\n          [selected]="${args.selected}"\n        >\n          ${mockChildren}\n        </rte-split-button>\n        <rte-split-button\n          label="${args.label}"\n          ariaLabelRight="${args.ariaLabelRight}"\n          size="${args.size}"\n          [compactSpacing]="${args.compactSpacing}"\n          appearance="secondary"\n          position="${args.position}"\n          [disabled]="${args.disabled}"\n          [selected]="${args.selected}"\n        >\n          ${mockChildren}\n        </rte-split-button>\n      </div>\n    `\n  }),\n  args: {\n    ...Default.args\n  }\n}',...Appearance.parameters?.docs?.source}}},Size.parameters={...Size.parameters,docs:{...Size.parameters?.docs,source:{originalSource:'{\n  render: args => ({\n    props: args,\n    template: `\n      ${wipWarning}\n      <div style="display: flex; gap: 16px">\n        <rte-split-button\n          label="${args.label}"\n          ariaLabelRight="${args.ariaLabelRight}"\n          size="s"\n          [compactSpacing]="${args.compactSpacing}"\n          appearance="${args.appearance}"\n          position="${args.position}"\n          [disabled]="${args.disabled}"\n          [selected]="${args.selected}"\n        >\n          ${mockChildren}\n        </rte-split-button>\n        <rte-split-button\n          label="${args.label}"\n          ariaLabelRight="${args.ariaLabelRight}"\n          size="m"\n          [compactSpacing]="${args.compactSpacing}"\n          appearance="${args.appearance}"\n          position="${args.position}"\n          [disabled]="${args.disabled}"\n          [selected]="${args.selected}"\n        >\n          ${mockChildren}\n        </rte-split-button>\n        <rte-split-button\n          label="${args.label}"\n          ariaLabelRight="${args.ariaLabelRight}"\n          size="l"\n          [compactSpacing]="${args.compactSpacing}"\n          appearance="${args.appearance}"\n          position="${args.position}"\n          [disabled]="${args.disabled}"\n          [selected]="${args.selected}"\n        >\n          ${mockChildren}\n        </rte-split-button>\n      </div>\n    `\n  }),\n  args: {\n    ...Default.args\n  }\n}',...Size.parameters?.docs?.source}}},CompactSpacing.parameters={...CompactSpacing.parameters,docs:{...CompactSpacing.parameters?.docs,source:{originalSource:'{\n  render: args => ({\n    props: args,\n    template: `\n      ${wipWarning}\n      <div style="display: flex; gap: 16px">\n        <rte-split-button\n          label="${args.label}"\n          ariaLabelRight="${args.ariaLabelRight}"\n          size="s"\n          [compactSpacing]="${args.compactSpacing}"\n          appearance="${args.appearance}"\n          position="${args.position}"\n          [disabled]="${args.disabled}"\n          [selected]="${args.selected}"\n        >\n          ${mockChildren}\n        </rte-split-button>\n        <rte-split-button\n          label="${args.label}"\n          ariaLabelRight="${args.ariaLabelRight}"\n          size="m"\n          [compactSpacing]="${args.compactSpacing}"\n          appearance="${args.appearance}"\n          position="${args.position}"\n          [disabled]="${args.disabled}"\n          [selected]="${args.selected}"\n        >\n          ${mockChildren}\n        </rte-split-button>\n        <rte-split-button\n          label="${args.label}"\n          ariaLabelRight="${args.ariaLabelRight}"\n          size="l"\n          [compactSpacing]="${args.compactSpacing}"\n          appearance="${args.appearance}"\n          position="${args.position}"\n          [disabled]="${args.disabled}"\n          [selected]="${args.selected}"\n        >\n          ${mockChildren}\n        </rte-split-button>\n      </div>\n    `\n  }),\n  args: {\n    ...Default.args,\n    compactSpacing: true\n  }\n}',...CompactSpacing.parameters?.docs?.source}}},Position.parameters={...Position.parameters,docs:{...Position.parameters?.docs,source:{originalSource:'{\n  render: args => ({\n    props: args,\n    template: `\n      ${wipWarning}\n      <div style="display: flex; justify-content: center; align-items: center; min-height: 600px">\n        <div style="display: grid; grid-template-columns: 2fr 2fr; gap: 24px">\n          <rte-split-button\n            label="${args.label}"\n            ariaLabelRight="${args.ariaLabelRight}"\n            size="${args.size}"\n            [compactSpacing]="${args.compactSpacing}"\n            appearance="${args.appearance}"\n            position="top-end"\n            [disabled]="${args.disabled}"\n            [selected]="${args.selected}"\n          >\n            ${mockChildren}\n          </rte-split-button>\n          <rte-split-button\n            label="${args.label}"\n            ariaLabelRight="${args.ariaLabelRight}"\n            size="${args.size}"\n            [compactSpacing]="${args.compactSpacing}"\n            appearance="${args.appearance}"\n            position="top-start"\n            [disabled]="${args.disabled}"\n            [selected]="${args.selected}"\n          >\n            ${mockChildren}\n          </rte-split-button>\n          <rte-split-button\n            label="${args.label}"\n            ariaLabelRight="${args.ariaLabelRight}"\n            size="${args.size}"\n            [compactSpacing]="${args.compactSpacing}"\n            appearance="${args.appearance}"\n            position="bottom-end"\n          >\n            ${mockChildren}\n          </rte-split-button>\n          <rte-split-button\n            label="${args.label}"\n            ariaLabelRight="${args.ariaLabelRight}"\n            size="${args.size}"\n            [compactSpacing]="${args.compactSpacing}"\n            appearance="${args.appearance}"\n            position="bottom-start"\n          >\n            ${mockChildren}\n          </rte-split-button>\n        </div>\n      </div>\n    `\n  }),\n  args: {\n    ...Default.args\n  }\n}',...Position.parameters?.docs?.source}}},KeyboardInteraction.parameters={...KeyboardInteraction.parameters,docs:{...KeyboardInteraction.parameters?.docs,source:{originalSource:'{\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const button = canvas.getByTestId("Menu button");\n    const menuContainer = canvas.getByTestId("Menu container");\n    await userEvent.tab();\n    await userEvent.tab();\n    expect(document.activeElement).toBe(button);\n    await userEvent.keyboard(DOWN_KEY);\n    await waitFor(() => expect(menuContainer).toBeVisible());\n  },\n  args: {\n    ...Default.args\n  }\n}',...KeyboardInteraction.parameters?.docs?.source}}}},"./projects/ds-rte-lib/src/lib/components/icon/icon.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("../../node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("../../node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,".rte-icon-container {\n  display: flex;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/ds-rte-lib/src/lib/components/split-button/split-button.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("../../node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("../../node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:wght,FILL,GRAD@400,0,0&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,200..1000;1,200..1000&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.split-button-container {\n  display: inline-flex;\n  padding: 0px;\n  align-items: center;\n  gap: 0px;\n  align-self: stretch;\n}\n.split-button-container.size-s {\n  height: 24px;\n}\n.split-button-container.size-s.compact-spacing {\n  height: 20px;\n}\n.split-button-container.size-m {\n  height: 32px;\n}\n.split-button-container.size-m.compact-spacing {\n  height: 24px;\n}\n.split-button-container.size-l {\n  height: 40px;\n}\n.split-button-container.size-l.compact-spacing {\n  height: 28px;\n}\n.split-button-container.secondary .split-button-left {\n  border-top: 1px solid var(--border-brand-default);\n  border-bottom: 1px solid var(--border-brand-default);\n  border-left: 1px solid var(--border-brand-default);\n  background-color: var(--background-default);\n  color: var(--content-brand-default);\n}\n.split-button-container.secondary .split-button-left:hover {\n  cursor: pointer;\n  background-color: var(--background-brand-inverse-hover);\n}\n.split-button-container.secondary .split-button-left:active {\n  background-color: var(--background-brand-inverse-pressed);\n}\n.split-button-container.secondary .split-button-left:disabled {\n  background-color: var(--background-disabled);\n  color: var(--content-disabled);\n  border-top: 1px solid var(--border-disabled);\n  border-bottom: 1px solid var(--border-disabled);\n  border-left: 1px solid var(--border-disabled);\n  cursor: not-allowed;\n}\n.split-button-container.secondary .split-button-divider {\n  background-color: var(--border-brand-default);\n}\n.split-button-container.secondary .split-button-right-container .split-button-right {\n  border-top: 1px solid var(--border-brand-default);\n  border-bottom: 1px solid var(--border-brand-default);\n  border-right: 1px solid var(--border-brand-default);\n  background-color: var(--background-default);\n  color: var(--content-brand-default);\n}\n.split-button-container.secondary .split-button-right-container .split-button-right:hover {\n  cursor: pointer;\n  background-color: var(--background-brand-inverse-hover);\n}\n.split-button-container.secondary .split-button-right-container .split-button-right:active {\n  background-color: var(--background-brand-inverse-pressed);\n}\n.split-button-container.secondary .split-button-right-container .split-button-right:disabled {\n  background-color: var(--background-disabled);\n  color: var(--content-disabled);\n  border-top: 1px solid var(--border-disabled);\n  border-bottom: 1px solid var(--border-disabled);\n  border-right: 1px solid var(--border-disabled);\n  cursor: not-allowed;\n}\n.split-button-container .split-button-left {\n  display: flex;\n  border: none;\n  padding: 0px 8px;\n  align-items: center;\n  gap: 0px;\n  align-self: stretch;\n  border-radius: 4px 0px 0px 4px;\n  border-color: var(--border-brand-default);\n  background-color: var(--background-brand-default);\n  color: var(--content-primary-inverse);\n}\n.split-button-container .split-button-left .split-button-label {\n  margin: 0;\n}\n.split-button-container .split-button-left .split-button-label.size-s {\n  font-feature-settings: "liga" off, "clig" off;\n  font-style: normal;\n  font-family: "Nunito";\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: -0.5px;\n}\n.split-button-container .split-button-left .split-button-label.size-m {\n  font-feature-settings: "liga" off, "clig" off;\n  font-style: normal;\n  font-family: "Nunito";\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: -0.5px;\n}\n.split-button-container .split-button-left .split-button-label.size-l {\n  font-feature-settings: "liga" off, "clig" off;\n  font-style: normal;\n  font-family: "Nunito";\n  font-weight: 600;\n  font-size: 20px;\n  line-height: 28px;\n  letter-spacing: -0.5px;\n}\n.split-button-container .split-button-left:hover {\n  cursor: pointer;\n  background-color: var(--background-brand-hover);\n}\n.split-button-container .split-button-left:active {\n  background-color: var(--background-brand-pressed);\n}\n.split-button-container .split-button-left:disabled {\n  background-color: var(--background-disabled);\n  color: var(--content-disabled);\n  border-top: 1px solid var(--border-disabled);\n  border-bottom: 1px solid var(--border-disabled);\n  border-left: 1px solid var(--border-disabled);\n  cursor: not-allowed;\n}\n.split-button-container .split-button-left:focus {\n  outline: none;\n  position: relative;\n  z-index: 1;\n}\n.split-button-container .split-button-left:focus::after {\n  content: "";\n  position: absolute;\n  top: -8px;\n  left: -8px;\n  bottom: -8px;\n  right: -1px;\n  border: 1px solid var(--border-brand-focused);\n  pointer-events: none;\n  border-radius: 4px;\n  z-index: 2;\n}\n.split-button-container .split-button-divider {\n  width: 1px;\n  height: 100%;\n  background-color: var(--content-primary-inverse);\n}\n.split-button-container .split-button-divider.disabled {\n  background-color: var(--border-disabled);\n}\n.split-button-container .split-button-right-container {\n  display: flex;\n  position: relative;\n  padding: 0px;\n  align-items: center;\n  justify-content: center;\n  gap: 0px;\n  align-self: stretch;\n}\n.split-button-container .split-button-right-container.size-s {\n  width: 24px;\n}\n.split-button-container .split-button-right-container.size-m {\n  width: 34px;\n}\n.split-button-container .split-button-right-container.size-l {\n  width: 44px;\n}\n.split-button-container .split-button-right-container .split-button-right {\n  display: flex;\n  border: none;\n  padding: 6px 16px;\n  align-items: center;\n  justify-content: center;\n  align-self: stretch;\n  border-radius: 0px 4px 4px 0px;\n  border-color: var(--border-brand-default);\n  background-color: var(--background-brand-default);\n  color: var(--content-primary-inverse);\n}\n.split-button-container .split-button-right-container .split-button-right:hover {\n  cursor: pointer;\n  background-color: var(--background-brand-hover);\n}\n.split-button-container .split-button-right-container .split-button-right:active {\n  background-color: var(--background-brand-pressed);\n}\n.split-button-container .split-button-right-container .split-button-right:disabled {\n  background-color: var(--background-disabled);\n  color: var(--content-disabled);\n  border-top: 1px solid var(--border-disabled);\n  border-bottom: 1px solid var(--border-disabled);\n  border-right: 1px solid var(--border-disabled);\n  cursor: not-allowed;\n}\n.split-button-container .split-button-right-container .split-button-right:focus {\n  outline: none;\n  position: relative;\n  z-index: 1;\n}\n.split-button-container .split-button-right-container .split-button-right:focus::after {\n  content: "";\n  position: absolute;\n  top: -8px;\n  left: -1px;\n  bottom: -8px;\n  right: -8px;\n  border: 1px solid var(--border-brand-focused);\n  pointer-events: none;\n  border-radius: 4px;\n  z-index: 2;\n}\n.split-button-container .split-button-right-container .split-button-right .split-button-right-icon-container {\n  pointer-events: none;\n}\n.split-button-container .split-button-right-container .split-button-dropdown {\n  position: absolute;\n}\n.split-button-container .split-button-right-container .split-button-dropdown.position-bottom-start {\n  top: 100%;\n  left: 0;\n}\n.split-button-container .split-button-right-container .split-button-dropdown.position-bottom-end {\n  top: 100%;\n  right: 0;\n}\n.split-button-container .split-button-right-container .split-button-dropdown.position-top-start {\n  bottom: 100%;\n  left: 0;\n}\n.split-button-container .split-button-right-container .split-button-dropdown.position-top-end {\n  bottom: 100%;\n  right: 0;\n}\n\n.animation-slide-from-top {\n  animation: slide-from-top 0.2s ease-in-out;\n}\n\n@keyframes slide-from-top {\n  from {\n    transform: translateY(-10px);\n    pointer-events: none;\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"../core/constants/keyboard.constants.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{jD:()=>ENTER_KEY,ot:()=>TAB_KEY,vx:()=>DOWN_KEY,zP:()=>SPACE_KEY});const SPACE_KEY="{ }",ENTER_KEY="{Enter}",TAB_KEY="{Tab}",DOWN_KEY="{ArrowDown}"},"./projects/ds-rte-lib/src/lib/components/icon/icon-map.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{vW:()=>icon_map_isValidIconName,HQ:()=>regularIcons,UB:()=>togglableIcons});const togglableIcons={"add-circle":["add_circle_outlined","add_circle_filled"],"admin-panel-settings":["admin_panel_settings_outlined","admin_panel_settings_filled"],analytics:["analytics_outlined","analytics_filled"],archive:["archive_outlined","archive_filled"],"arrow-circle-chevron-down":["arrow_circle_chevron_down_outlined","arrow_circle_chevron_down_filled"],"arrow-circle-chevron-left":["arrow_circle_chevron_left_outlined","arrow_circle_chevron_left_filled"],"arrow-circle-chevron-right":["arrow_circle_chevron_right_outlined","arrow_circle_chevron_right_filled"],"arrow-circle-chevron-up":["arrow_circle_chevron_up_outlined","arrow_circle_chevron_up_filled"],"arrow-circle-down":["arrow_circle_down_outlined","arrow_circle_down_filled"],"arrow-circle-left":["arrow_circle_left_outlined","arrow_circle_left_filled"],"arrow-circle-right":["arrow_circle_right_outlined","arrow_circle_right_filled"],"arrow-circle-up":["arrow_circle_up_outlined","arrow_circle_up_filled"],article:["article_outlined","article_filled"],"assignment-complete":["assignment_complete_outlined","assignment_complete_filled"],assignment:["assignment_outlined","assignment_filled"],"battery-alert":["battery_alert_outlined","battery_alert_filled"],"battery-charging-full":["battery_charging_full_outlined","battery_charging_full_filled"],"bolt-alt-circle":["bolt_alt_circle_outlined","bolt_alt_circle_filled"],"bolt-alt":["bolt_alt_outlined","bolt_alt_filled"],"bolt-circle":["bolt_circle_outlined","bolt_circle_filled"],bolt:["bolt_outlined","bolt_filled"],bookmark:["bookmark_outlined","bookmark_filled"],bookmarks:["bookmarks_outlined","bookmarks_filled"],build:["build_outlined","build_filled"],"calendar-available":["calendar_available_outlined","calendar_available_filled"],"calendar-busy":["calendar_busy_outlined","calendar_busy_filled"],"calendar-month":["calendar_month_outlined","calendar_month_filled"],"calendar-today":["calendar_today_outlined","calendar_today_filled"],call:["call_outlined","call_filled"],category:["category_outlined","category_filled"],"chart-add":["chart_add_outlined","chart_add_filled"],"chart-area":["chart_area_outlined","chart_area_filled"],"chart-pie":["chart_pie_outlined","chart_pie_filled"],"chart-table":["chart_table_outlined","chart_table_filled"],"chat-alt":["chat_alt_outlined","chat_alt_filled"],"chat-alt-unread":["chat_alt_unread_outlined","chat_alt_unread_filled"],chat:["chat_outlined","chat_filled"],"chat-unread":["chat_unread_outlined","chat_unread_filled"],"check-circle":["check_circle_outlined","check_circle_filled"],checkbox:["checkbox_outlined","checkbox_filled"],"checkbox-indeterminate":["checkbox_indeterminate_outlined","checkbox_indeterminate_filled"],clock:["clock_outlined","clock_filled"],"cloud-download":["cloud_download_outlined","cloud_download_filled"],cloud:["cloud_outlined","cloud_filled"],"cloud-off":["cloud_off_outlined","cloud_off_filled"],"cloud-upload":["cloud_upload_outlined","cloud_upload_filled"],"comment-add":["comment_add_outlined","comment_add_filled"],comment:["comment_outlined","comment_filled"],copy:["copy_outlined","copy_filled"],dangerous:["dangerous_outlined","dangerous_filled"],dashboard:["dashboard_outlined","dashboard_filled"],database:["database_outlined","database_filled"],delete:["delete_outlined","delete_filled"],desktop:["desktop_outlined","desktop_filled"],devices:["devices_outlined","devices_filled"],draft:["draft_outlined","draft_filled"],eco:["eco_outlined","eco_filled"],edit:["edit_outlined","edit_filled"],"electric-meter":["electric_meter_outlined","electric_meter_filled"],error:["error_outlined","error_filled"],explore:["explore_outlined","explore_filled"],"explore-off":["explore_off_outlined","explore_off_filled"],"fast-forward":["fast_forward_outlined","fast_forward_filled"],"fast-rewind":["fast_rewind_outlined","fast_rewind_filled"],feedback:["feedback_outlined","feedback_filled"],"file-copy":["file_copy_outlined","file_copy_filled"],"file-download":["file_download_outlined","file_download_filled"],"file-upload":["file_upload_outlined","file_upload_filled"],"filter-alt":["filter_alt_outlined","filter_alt_filled"],"filter-alt-off":["filter_alt_off_outlined","filter_alt_off_filled"],fire:["fire_outlined","fire_filled"],"fit-screen":["fit_screen_outlined","fit_screen_filled"],flag:["flag_outlined","flag_filled"],flash:["flash_outlined","flash_filled"],"flash-off":["flash_off_outlined","flash_off_filled"],"folder-add":["folder_add_outlined","folder_add_filled"],folder:["folder_outlined","folder_filled"],"folder-move":["folder_move_outlined","folder_move_filled"],"folder-open":["folder_open_outlined","folder_open_filled"],"folder-shared":["folder_shared_outlined","folder_shared_filled"],forum:["forum_outlined","forum_filled"],"group-add":["group_add_outlined","group_add_filled"],group:["group_outlined","group_filled"],groups:["groups_outlined","groups_filled"],headphones:["headphones_outlined","headphones_filled"],heart:["heart_outlined","heart_filled"],help:["help_outlined","help_filled"],home:["home_outlined","home_filled"],hourglass:["hourglass_outlined","hourglass_filled"],"image-broken":["image_broken_outlined","image_broken_filled"],image:["image_outlined","image_filled"],"image-gallery":["image_gallery_outlined","image_gallery_filled"],inbox:["inbox_outlined","inbox_filled"],info:["info_outlined","info_filled"],keep:["keep_outlined","keep_filled"],"keep-off":["keep_off_outlined","keep_off_filled"],label:["label_outlined","label_filled"],laptop:["laptop_outlined","laptop_filled"],"left-panel-open":["left_panel_open_outlined","left_panel_open_filled"],"left-panel-close":["left_panel_close_outlined","left_panel_close_filled"],"light-off":["light_off_outlined","light_off_filled"],"lightbulb-alt":["lightbulb_alt_outlined","lightbulb_alt_filled"],"lightbulb-circle":["lightbulb_circle_outlined","lightbulb_circle_filled"],lightbulb:["lightbulb_outlined","lightbulb_filled"],"list-alt":["list_alt_outlined","list_alt_filled"],"location-me":["location_me_outlined","location_me_filled"],"location-off":["location_off_outlined","location_off_filled"],"location-on":["location_on_outlined","location_on_filled"],lock:["lock_outlined","lock_filled"],"lock-open":["lock_open_outlined","lock_open_filled"],"lock-open-right":["lock_open_right_outlined","lock_open_right_filled"],mail:["mail_outlined","mail_filled"],"mail-unread":["mail_unread_outlined","mail_unread_filled"],map:["map_outlined","map_filled"],mic:["mic_outlined","mic_filled"],"mic-off":["mic_off_outlined","mic_off_filled"],"mode-dark":["mode_dark_outlined","mode_dark_filled"],"mode-light":["mode_light_outlined","mode_light_filled"],notification:["notification_outlined","notification_filled"],"notification-important":["notification_important_outlined","notification_important_filled"],"notification-off":["notification_off_outlined","notification_off_filled"],"notification-unread":["notification_unread_outlined","notification_unread_filled"],palette:["palette_outlined","palette_filled"],"pause-circle":["pause_circle_outlined","pause_circle_filled"],pause:["pause_outlined","pause_filled"],"photo-camera":["photo_camera_outlined","photo_camera_filled"],"play-circle":["play_circle_outlined","play_circle_filled"],play:["play_outlined","play_filled"],power:["power_outlined","power_filled"],"power-off":["power_off_outlined","power_off_filled"],"power-plug-connect":["power_plug_connect_outlined","power_plug_connect_filled"],"power-settings-circle":["power_settings_circle_outlined","power_settings_circle_filled"],"power-solar":["power_solar_outlined","power_solar_filled"],"power-switch":["power_switch_outlined","power_switch_filled"],"power-wind":["power_wind_outlined","power_wind_filled"],print:["print_outlined","print_filled"],"right-panel-close":["right_panel_close_outlined","right_panel_close_filled"],"right-panel-open":["right_panel_open_outlined","right_panel_open_filled"],save:["save_outlined","save_filled"],send:["send_outlined","send_filled"],settings:["settings_outlined","settings_filled"],share:["share_outlined","share_filled"],"skip-next":["skip_next_outlined","skip_next_filled"],"skip-previous":["skip_previous_outlined","skip_previous_filled"],smartphone:["smartphone_outlined","smartphone_filled"],star:["star_outlined","star_filled"],"sticky-note":["sticky_note_outlined","sticky_note_filled"],"stop-circle":["stop_circle_outlined","stop_circle_filled"],stop:["stop_outlined","stop_filled"],subtitles:["subtitles_outlined","subtitles_filled"],"text-snippet":["text_snippet_outlined","text_snippet_filled"],"trash-restore":["trash_restore_outlined","trash_restore_filled"],unarchive:["unarchive_outlined","unarchive_filled"],"user-add":["user_add_outlined","user_add_filled"],"user-circle":["user_circle_outlined","user_circle_filled"],user:["user_outlined","user_filled"],"user-settings":["user_settings_outlined","user_settings_filled"],verified:["verified_outlined","verified_filled"],"video-camera":["video_camera_outlined","video_camera_filled"],"video-camera-off":["video_camera_off_outlined","video_camera_off_filled"],"video-gallery":["video_gallery_outlined","video_gallery_filled"],"view-agenda":["view_agenda_outlined","view_agenda_filled"],"view-column":["view_column_outlined","view_column_filled"],"view-grid":["view_grid_outlined","view_grid_filled"],"view-kanban":["view_kanban_outlined","view_kanban_filled"],"view-module":["view_module_outlined","view_module_filled"],"view-timeline":["view_timeline_outlined","view_timeline_filled"],"visibility-hide":["visibility_hide_outlined","visibility_hide_filled"],"visibility-show":["visibility_show_outlined","visibility_show_filled"],"volume-down":["volume_down_outlined","volume_down_filled"],"volume-mute":["volume_mute_outlined","volume_mute_filled"],"volume-off":["volume_off_outlined","volume_off_filled"],"volume-up":["volume_up_outlined","volume_up_filled"],warning:["warning_outlined","warning_filled"],waterdrop:["waterdrop_outlined","waterdrop_filled"]},regularIcons={add:"add","alt-route":"alt_route",apps:"apps","arrow-alt-down":"arrow_alt_down","arrow-alt-down-left":"arrow_alt_down_left","arrow-alt-down-right":"arrow_alt_down_right","arrow-alt-left":"arrow_alt_left","arrow-alt-right":"arrow_alt_right","arrow-alt-up":"arrow_alt_up","arrow-alt-up-left":"arrow_alt_up_left","arrow-alt-up-right":"arrow_alt_up_right","arrow-angle-down-left":"arrow_angle_down_left","arrow-angle-down-right":"arrow_angle_down_right","arrow-angle-up-left":"arrow_angle_up_left","arrow-angle-up-right":"arrow_angle_up_right","arrow-chevron-down":"arrow_chevron_down","arrow-chevron-left":"arrow_chevron_left","arrow-chevron-right":"arrow_chevron_right","arrow-chevron-up":"arrow_chevron_up","arrow-double-down":"arrow_double_down","arrow-double-left":"arrow_double_left","arrow-double-right":"arrow_double_right","arrow-double-up":"arrow_double_up","arrow-down":"arrow_down","arrow-down-left":"arrow_down_left","arrow-down-right":"arrow_down_right","arrow-drop-down":"arrow_drop_down","arrow-drop-up":"arrow_drop_up","arrow-left":"arrow_left","arrow-right":"arrow_right","arrow-up":"arrow_up","arrow-up-left":"arrow_up_left","arrow-up-right":"arrow_up_right",asterisk:"asterisk","attach-file":"attach_file","battery-alt-empty":"battery_alt_empty","battery-alt-full":"battery_alt_full","battery-charging":"battery_charging","battery-empty":"battery_empty","battery-full":"battery_full",bluetooth:"bluetooth","bluetooth-off":"bluetooth_off","chart-bar":"chart_bar","chart-bar-stacked":"chart_bar_stacked",check:"check","check-indeterminate":"check_indeterminate","check-small":"check_small","checkbox-empty":"checkbox_empty",close:"close",compare:"compare","copy-all":"copy_all","crisis-alert":"crisis_alert",cut:"cut",download:"download","download-done":"download_done","drag-handle":"drag_handle","drag-indicator":"drag_indicator",exclamation:"exclamation","explore-travel":"explore_travel","external-link":"external_link",filter:"filter","filter-off":"filter_off","first-page":"first_page",forward:"forward",fullscreen:"fullscreen","fullscreen-exit":"fullscreen_exit",history:"history","hourglass-empty":"hourglass_empty","info-i":"info_i",language:"language","last-page":"last_page",link:"link","link-off":"link_off",list:"list","location-disabled":"location_disabled",login:"login",logout:"logout",menu:"menu","menu-open":"menu_open",monitoring:"monitoring","more-down":"more_down","more-horiz":"more_horiz","more-up":"more_up","more-vert":"more_vert",ohm:"ohm","open-in-full":"open_in_full",paste:"paste","play-pause":"play_pause","power-input":"power_input","power-plug":"power_plug","power-settings":"power_settings","priority-high":"priority_high",public:"public",publish:"publish","question-mark":"question_mark",radar:"radar","radio-button-empty":"radio_button_empty",redo:"redo",reload:"reload",remove:"remove",reply:"reply","reply-all":"reply_all",route:"route",search:"search","side-navigation":"side_navigation",sort:"sort","support-agent":"support_agent",timeline:"timeline","trending-down":"trending_down","trending-flat":"trending_flat","trending-up":"trending_up",tune:"tune",undo:"undo",upload:"upload",water:"water","water-alt":"water_alt",wifi:"wifi","wifi-off":"wifi_off",windmill:"windmill","zoom-out":"zoom_out","zoom-in":"zoom_in"},icon_map_isValidIconName=name=>function isValidIconName(name,...iconSets){return iconSets.some(iconSet=>name in iconSet)}(name,regularIcons,togglableIcons)},"./projects/ds-rte-lib/src/lib/components/icon/icon.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>IconComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var icon_componentngResource=__webpack_require__("./projects/ds-rte-lib/src/lib/components/icon/icon.component.scss?ngResource"),icon_componentngResource_default=__webpack_require__.n(icon_componentngResource),common=__webpack_require__("../../node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("../../node_modules/@angular/core/fesm2022/core.mjs"),rxjs_interop=__webpack_require__("../../node_modules/@angular/core/fesm2022/rxjs-interop.mjs"),platform_browser=__webpack_require__("../../node_modules/@angular/platform-browser/fesm2022/platform-browser.mjs"),http=__webpack_require__("../../node_modules/@angular/common/fesm2022/http.mjs"),icon_map=__webpack_require__("./projects/ds-rte-lib/src/lib/components/icon/icon-map.ts");let IconService=class IconService{constructor(){this.http=(0,core.inject)(http.Qq)}getSvg(name,appearance){if(!this.http)throw new Error("HttpClient is not available");const toggableIcon=icon_map.UB[name];if(toggableIcon){const[outlinedIconName,filledIconName]=toggableIcon,iconName="filled"===appearance?filledIconName:outlinedIconName;return this.http.get(`assets/icons/${iconName}.svg`,{responseType:"text"})}{const iconName=icon_map.HQ[name];if(!iconName)throw new Error(`Icon ${name} not found`);return this.http.get(`assets/icons/${iconName}.svg`,{responseType:"text"})}}};IconService=(0,tslib_es6.Cg)([(0,core.Injectable)()],IconService);let IconComponent=class IconComponent{constructor(){this.name=core.input.required(),this.size=(0,core.input)(20),this.color=(0,core.input)("currentColor"),this.classes=(0,core.input)(""),this.appearance=(0,core.input)(),this.destroyRef=(0,core.inject)(core.DestroyRef),this.svgContent=null,this.sanitizer=(0,core.inject)(platform_browser.DomSanitizer),this.iconService=(0,core.inject)(IconService),this.cdr=(0,core.inject)(core.ChangeDetectorRef),(0,core.effect)(()=>{this.setSvgContent(this.name())})}setSvgContent(svgName){this.iconService.getSvg(svgName,this.appearance()||"outlined").pipe((0,rxjs_interop.pQ)(this.destroyRef)).subscribe(res=>{const size=this.size(),svgWithSize=res.replace(/<svg([^>]*)>/,`<svg$1 width="${size}" height="${size}">`);this.svgContent=this.sanitizer.bypassSecurityTrustHtml(svgWithSize),this.cdr.markForCheck()})}static{this.ctorParameters=()=>[]}static{this.propDecorators={name:[{type:core.Input,args:[{isSignal:!0,alias:"name",required:!0,transform:void 0}]}],size:[{type:core.Input,args:[{isSignal:!0,alias:"size",required:!1,transform:void 0}]}],color:[{type:core.Input,args:[{isSignal:!0,alias:"color",required:!1,transform:void 0}]}],classes:[{type:core.Input,args:[{isSignal:!0,alias:"classes",required:!1,transform:void 0}]}],appearance:[{type:core.Input,args:[{isSignal:!0,alias:"appearance",required:!1,transform:void 0}]}]}}};IconComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"rte-icon",imports:[common.CommonModule],standalone:!0,template:'<div class="rte-icon-container" [innerHTML]="svgContent" [style.height]="(size())+\'px\'" [style.width]="(size())+\'px\'"></div>',changeDetection:core.ChangeDetectionStrategy.OnPush,providers:[IconService],styles:[icon_componentngResource_default()]})],IconComponent)}}]);