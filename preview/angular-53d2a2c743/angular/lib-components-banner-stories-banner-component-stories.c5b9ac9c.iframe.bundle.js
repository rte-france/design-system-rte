(self.webpackChunk_design_system_rte_angular_builder=self.webpackChunk_design_system_rte_angular_builder||[]).push([[37105],{"./projects/ds-rte-lib/src/lib/components/banner/banner.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("../../node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("../../node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:wght,FILL,GRAD@400,0,0&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,200..1000;1,200..1000&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.rte-banner-container {\n  display: flex;\n  box-sizing: border-box;\n  width: 100%;\n  min-width: 320px;\n  padding: 24px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 0px;\n  border-radius: 0px;\n  background: var(--background-info-default);\n  color: var(--content-info);\n  top: 0;\n  left: 0;\n  transition: opacity 200ms ease, transform 200ms ease;\n  z-index: 10;\n}\n.rte-banner-container.alert {\n  background: var(--background-danger-default);\n  color: var(--content-danger);\n}\n.rte-banner-container.overlay {\n  position: fixed;\n}\n.rte-banner-container.open {\n  opacity: 1;\n  transform: translateY(0);\n}\n.rte-banner-container.close {\n  opacity: 0;\n  transform: translateY(-10px);\n}\n.rte-banner-container .rte-banner {\n  display: flex;\n  padding: 16px;\n  align-items: flex-start;\n  gap: 16px;\n  align-self: stretch;\n  border-radius: var(--radius-S, 4px);\n  opacity: var(--100, 1);\n  box-shadow: 0px 8px 16px 0px var(--elevation-shadow-key), 0px 0px 2px 0px var(--elevation-shadow-ambient);\n  background: linear-gradient(0deg, var(--elevation-surface-shadow-4) 0%, var(--elevation-surface-shadow-4) 100%);\n  background-color: var(--background-default, #FFF);\n}\n.rte-banner-container .rte-banner .rte-banner-icon {\n  display: flex;\n  padding: 0px 0px 0px 16px;\n  justify-content: center;\n  align-items: center;\n  gap: var(--positive-spacing_0, 0);\n  align-self: stretch;\n}\n.rte-banner-container .rte-banner .banner-close-icon {\n  color: var(--content-secondary);\n}\n.rte-banner-container .rte-banner .rte-banner-content {\n  display: flex;\n  padding: 0px 16px;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 8px;\n  flex: 1 0 0;\n  border-radius: 0px;\n  opacity: 100%;\n}\n.rte-banner-container .rte-banner .rte-banner-content .rte-banner-title {\n  font-feature-settings: "liga" off, "clig" off;\n  font-style: normal;\n  font-family: "Nunito";\n  font-weight: 600;\n  font-size: 20px;\n  line-height: 28px;\n  letter-spacing: -0.5px;\n}\n.rte-banner-container .rte-banner .rte-banner-content .rte-banner-message {\n  font-feature-settings: "liga" off, "clig" off;\n  font-style: normal;\n  font-family: "Arial";\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: 0px;\n  color: var(--content-secondary);\n  display: flex;\n  align-items: center;\n  gap: 24px;\n  padding: 8px 0;\n  justify-content: space-between;\n  width: 100%;\n}\n.rte-banner-container .rte-banner .rte-banner-content .rte-banner-message .rte-banner-action-button {\n  width: max-content;\n}\n.rte-banner-container .rte-banner .rte-banner-close-icon {\n  color: var(--content-secondary);\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/ds-rte-lib/src/lib/components/banner/stories/banner.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Alert:()=>Alert,Closable:()=>Closable,Default:()=>Default,KeyboardInteraction:()=>KeyboardInteraction,Overlay:()=>Overlay,WithAction:()=>WithAction,WithIcon:()=>WithIcon,__namedExportsOrder:()=>__namedExportsOrder,default:()=>banner_component_stories});var asyncToGenerator=__webpack_require__("../../node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),test_dist=__webpack_require__("../../node_modules/@storybook/test/dist/index.mjs"),button_component=__webpack_require__("./projects/ds-rte-lib/src/lib/components/button/button.component.ts"),switch_component=__webpack_require__("./projects/ds-rte-lib/src/lib/components/switch/switch.component.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var _staticBlock,banner_componentngResource=__webpack_require__("./projects/ds-rte-lib/src/lib/components/banner/banner.component.scss?ngResource"),banner_componentngResource_default=__webpack_require__.n(banner_componentngResource),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),icon_component=__webpack_require__("./projects/ds-rte-lib/src/lib/components/icon/icon.component.ts"),icon_button_component=__webpack_require__("./projects/ds-rte-lib/src/lib/components/icon-button/icon-button.component.ts");let BannerComponent=(class BannerComponent{constructor(){this.type=(0,core.input)("default"),this.message=core.input.required(),this.position=(0,core.input)("push"),this.title=(0,core.input)(),this.closable=(0,core.input)(!1),this.showIcon=(0,core.input)(!1),this.isOpen=(0,core.input)(!0),this.actionLabel=(0,core.input)(),this.click=(0,core.output)(),this.visible=(0,core.signal)(!1),this.rendering=(0,core.signal)(!1),this.close=(0,core.output)()}ngOnInit(){this.visible.set(this.isOpen()),this.rendering.set(this.isOpen()),!1!==this.closable()||"overlay"!==this.position()||console.warn("Banner: 'closable' and 'close' props must be set when 'position' has 'overlay' value.")}ngOnChanges(changes){changes.isOpen&&(this.isOpen()?this.openBanner():this.closeBanner())}clickAction(){this.click.emit()}closeBanner(){this.visible.set(!1),setTimeout(()=>{this.rendering.set(!1),this.close.emit()},200)}openBanner(){this.rendering()||(this.rendering.set(!0),requestAnimationFrame(()=>{requestAnimationFrame(()=>this.visible.set(!0))}))}static#_=_staticBlock=()=>(this.propDecorators={type:[{type:core.Input,args:[{isSignal:!0,alias:"type",required:!1,transform:void 0}]}],message:[{type:core.Input,args:[{isSignal:!0,alias:"message",required:!0,transform:void 0}]}],position:[{type:core.Input,args:[{isSignal:!0,alias:"position",required:!1,transform:void 0}]}],title:[{type:core.Input,args:[{isSignal:!0,alias:"title",required:!1,transform:void 0}]}],closable:[{type:core.Input,args:[{isSignal:!0,alias:"closable",required:!1,transform:void 0}]}],showIcon:[{type:core.Input,args:[{isSignal:!0,alias:"showIcon",required:!1,transform:void 0}]}],isOpen:[{type:core.Input,args:[{isSignal:!0,alias:"isOpen",required:!1,transform:void 0}]}],actionLabel:[{type:core.Input,args:[{isSignal:!0,alias:"actionLabel",required:!1,transform:void 0}]}],click:[{type:core.Output,args:["click"]}],close:[{type:core.Output,args:["close"]}]},this)},_staticBlock());BannerComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"rte-banner",imports:[common.CommonModule,icon_component.R,icon_button_component.x,button_component.Q],standalone:!0,template:'<section\n  *ngIf="rendering()"\n  class="rte-banner-container {{ type() }} {{ position() }}"\n  [ngClass]="{ open: visible(), close: !visible() }"\n  [attr.role]="type() === \'default\' ? \'status\' : \'alert\'"\n>\n  <div class="rte-banner">\n    <div *ngIf="showIcon()" class="rte-banner-icon">\n      <rte-icon [name]="type() === \'default\' ? \'info\' : \'error\'" [size]="32" />\n    </div>\n    <div class="rte-banner-content">\n      <span *ngIf="title()" class="rte-banner-title">{{ title() }}</span>\n      <div *ngIf="message()" class="rte-banner-message">\n        <span>{{ message() }}</span>\n        <rte-button\n          *ngIf="actionLabel()"\n          variant="neutral"\n          size="s"\n          [label]="actionLabel()!"\n          [ariaLabel]="actionLabel()!"\n          (click)="clickAction()"\n        />\n      </div>\n    </div>\n    <div *ngIf="closable()" class="rte-banner-close-icon">\n      <rte-icon-button\n        name="close"\n        variant="neutral"\n        ariaLabel="close banner"\n        (click)="closeBanner()"\n      />\n    </div>\n  </div>\n</section>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[banner_componentngResource_default()]})],BannerComponent);const banner_component_stories={title:"Banner",component:BannerComponent,tags:["autodocs"],argTypes:{type:{control:"select",options:["default","alert"]},title:{control:"text"},message:{control:"text"},actionLabel:{control:"text"},position:{control:"select",options:["push","overlay"]},closable:{control:"boolean"},showIcon:{control:"boolean"},isOpen:{control:"boolean"},close:{action:"close"}},args:{close:(0,test_dist.fn)()}},Default={args:{title:"La mise à jour est disponible !",message:"Une nouvelle mise à jour a été déployée sur l’environnement de production. Pour découvrir toutes les fonctionnalités et corrections d’anomalies, veuillez cliquer sur le bouton ci-contre.",type:"default",isOpen:!0}},Alert={args:{...Default.args,title:"Indisponibilité de l’application",message:"Dans le cadre des changements de serveur à venir le 18 mai 2026, votre application évolue et sera par conséquent indisponible du 29 mars au 12 avril 2026.",type:"alert"}},WithIcon={args:{...Default.args},render:args=>({props:args,template:'\n    <div style="display: flex; flex-direction: column; gap: 16px;">\n        <rte-banner\n          [title]="title"\n          [message]="message"\n          [type]="type"\n          [showIcon]="true"\n          />\n        <rte-banner\n          [title]="title"\n          [message]="message"\n          [type]="\'alert\'"\n          [showIcon]="true"\n          />\n    </div>\n    '})},Closable={decorators:[(0,dist.moduleMetadata)({imports:[button_component.Q]})],args:{...Default.args,closable:!0,isOpen:!1},render:args=>({props:{...args,close(){this.isOpen=!1},toggleBanner(){this.isOpen=!this.isOpen}},template:'\n    <div style="display: flex; flex-direction: column; gap: 16px;">\n        <rte-banner\n          [title]="title"\n          [message]="message"\n          [type]="type"\n          [showIcon]="true"\n          [closable]="true"\n          [isOpen]="isOpen"\n          (close)="close()"\n          />\n        <rte-button [label]="isOpen ? \'Hide banner\' : \'Show banner\' " (click)="toggleBanner()" style="margin-top: 16px;"/>\n    </div>\n    '})},WithAction={args:{...Default.args,closable:!0,actionLabel:"Voir les détails"},render:args=>({props:{...args,actionCallback:()=>{console.log("Action button clicked")}},template:'\n    <div style="display: flex; flex-direction: column; gap: 16px;">\n        <rte-banner\n          [title]="title"\n          [message]="message"\n          [type]="type"\n          [showIcon]="true"\n          [isOpen]="isOpen"\n          [actionLabel]="actionLabel"\n          (click)="actionCallback()"\n          />\n    </div>\n    '})},Overlay={decorators:[(0,dist.moduleMetadata)({imports:[button_component.Q,switch_component.c]})],args:{...Default.args,closable:!0,isOpen:!1,position:"overlay"},render:args=>({props:{...args,close(){this.isOpen=!1},toggleBanner(){this.isOpen=!this.isOpen},toggleOverlay(){this.position="overlay"===this.position?"push":"overlay"}},template:'\n      <rte-banner\n        [title]="title"\n        [message]="message"\n        [type]="type"\n        [showIcon]="true"\n        [closable]="true"\n        [isOpen]="isOpen"\n        (close)="close()"\n        [position]="position"\n      />\n    <div style="display: flex; flex-direction: column; gap: 16px;">\n        <rte-button [label]="isOpen ? \'Hide banner\' : \'Show banner\' " (click)="toggleBanner()" style="margin-top: 16px;"/>\n         <rte-switch\n            label="{{position === \'overlay\' ? \'Overlay\' : \'Push\'}} mode"\n            [checked]="position === \'overlay\'"\n            (stateChange)="toggleOverlay()"\n          />\n        <div style="width: 100%; display: flex; gap: 16px; flexWrap: wrap">\n          <div style="width: 200px; height: 300px; backgroundColor: #e1e1e0"></div>\n          <div style="width: 400px; height: 300px; backgroundColor: #e1e1e0"></div>\n          <div style="width: 200px; height: 300px; backgroundColor: #e1e1e0"></div>\n          <div style="width: 400px; height: 300px; backgroundColor: #e1e1e0"></div>\n          <div style="width: 200px; height: 300px; backgroundColor: #e1e1e0"></div>\n          <div style="width: 200px; height: 300px; backgroundColor: #e1e1e0"></div>\n          <div style="width: 200px; height: 300px; backgroundColor: #e1e1e0"></div>\n          <div style="width: 200px; height: 300px; backgroundColor: #e1e1e0"></div>\n          <div style="width: 400px; height: 300px; backgroundColor: #e1e1e0"></div>\n        </div>\n    </div>\n    '})},KeyboardInteraction={decorators:[(0,dist.moduleMetadata)({imports:[button_component.Q]})],args:{...Default.args,closable:!0,isOpen:!0,actionLabel:"Voir les détails"},render:args=>({props:{...args,close(){this.isOpen=!1},toggleBanner(){this.isOpen=!this.isOpen},actionCallback:()=>{console.log("Action button clicked")}},template:'\n    <div style="display: flex; flex-direction: column; gap: 16px;">\n        <rte-banner\n          [title]="title"\n          [message]="message"\n          [type]="type"\n          [showIcon]="true"\n          [closable]="true"\n          [isOpen]="isOpen"\n          (close)="close()"\n          [actionLabel]="actionLabel"\n          (click)="actionCallback()"\n          />\n        <rte-button [label]="isOpen ? \'Hide banner\' : \'Show banner\' " (click)="toggleBanner()" style="margin-top: 16px;"/>\n    </div>\n    '}),play:(_ref=(0,asyncToGenerator.A)(function*({canvasElement}){const canvas=(0,test_dist.ux)(canvasElement),banner=yield canvas.getByRole("status"),actionButton=yield(0,test_dist.ux)(banner).getAllByRole("button")[0],closeButton=yield(0,test_dist.ux)(banner).getAllByRole("button")[1];yield test_dist.Q4.tab(),(0,test_dist.E3)(actionButton).toHaveFocus(),yield test_dist.Q4.tab(),(0,test_dist.E3)(closeButton).toHaveFocus(),yield test_dist.Q4.keyboard("{Enter}"),yield(0,test_dist.fm)(()=>(0,test_dist.E3)(banner).not.toBeInTheDocument())}),function play(_x){return _ref.apply(this,arguments)})};var _ref;const __namedExportsOrder=["Default","Alert","WithIcon","Closable","WithAction","Overlay","KeyboardInteraction"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    title: "La mise à jour est disponible !",\n    message: "Une nouvelle mise à jour a été déployée sur l’environnement de production. Pour découvrir toutes les fonctionnalités et corrections d’anomalies, veuillez cliquer sur le bouton ci-contre.",\n    type: "default",\n    isOpen: true\n  }\n}',...Default.parameters?.docs?.source}}},Alert.parameters={...Alert.parameters,docs:{...Alert.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    title: "Indisponibilité de l’application",\n    message: "Dans le cadre des changements de serveur à venir le 18 mai 2026, votre application évolue et sera par conséquent indisponible du 29 mars au 12 avril 2026.",\n    type: "alert"\n  }\n}',...Alert.parameters?.docs?.source}}},WithIcon.parameters={...WithIcon.parameters,docs:{...WithIcon.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args\n  },\n  render: args => ({\n    props: args,\n    template: `\n    <div style="display: flex; flex-direction: column; gap: 16px;">\n        <rte-banner\n          [title]="title"\n          [message]="message"\n          [type]="type"\n          [showIcon]="true"\n          />\n        <rte-banner\n          [title]="title"\n          [message]="message"\n          [type]="\'alert\'"\n          [showIcon]="true"\n          />\n    </div>\n    `\n  })\n}',...WithIcon.parameters?.docs?.source}}},Closable.parameters={...Closable.parameters,docs:{...Closable.parameters?.docs,source:{originalSource:'{\n  decorators: [moduleMetadata({\n    imports: [ButtonComponent]\n  })],\n  args: {\n    ...Default.args,\n    closable: true,\n    isOpen: false\n  },\n  render: args => ({\n    props: {\n      ...args,\n      close() {\n        this["isOpen"] = false;\n      },\n      toggleBanner() {\n        this["isOpen"] = !this["isOpen"];\n      }\n    },\n    template: `\n    <div style="display: flex; flex-direction: column; gap: 16px;">\n        <rte-banner\n          [title]="title"\n          [message]="message"\n          [type]="type"\n          [showIcon]="true"\n          [closable]="true"\n          [isOpen]="isOpen"\n          (close)="close()"\n          />\n        <rte-button [label]="isOpen ? \'Hide banner\' : \'Show banner\' " (click)="toggleBanner()" style="margin-top: 16px;"/>\n    </div>\n    `\n  })\n}',...Closable.parameters?.docs?.source}}},WithAction.parameters={...WithAction.parameters,docs:{...WithAction.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    closable: true,\n    actionLabel: "Voir les détails"\n  },\n  render: args => ({\n    props: {\n      ...args,\n      actionCallback: () => {\n        console.log("Action button clicked");\n      }\n    },\n    template: `\n    <div style="display: flex; flex-direction: column; gap: 16px;">\n        <rte-banner\n          [title]="title"\n          [message]="message"\n          [type]="type"\n          [showIcon]="true"\n          [isOpen]="isOpen"\n          [actionLabel]="actionLabel"\n          (click)="actionCallback()"\n          />\n    </div>\n    `\n  })\n}',...WithAction.parameters?.docs?.source}}},Overlay.parameters={...Overlay.parameters,docs:{...Overlay.parameters?.docs,source:{originalSource:'{\n  decorators: [moduleMetadata({\n    imports: [ButtonComponent, SwitchComponent]\n  })],\n  args: {\n    ...Default.args,\n    closable: true,\n    isOpen: false,\n    position: "overlay"\n  },\n  render: args => ({\n    props: {\n      ...args,\n      close() {\n        this["isOpen"] = false;\n      },\n      toggleBanner() {\n        this["isOpen"] = !this["isOpen"];\n      },\n      toggleOverlay() {\n        this["position"] = this["position"] === "overlay" ? "push" : "overlay";\n      }\n    },\n    template: `\n      <rte-banner\n        [title]="title"\n        [message]="message"\n        [type]="type"\n        [showIcon]="true"\n        [closable]="true"\n        [isOpen]="isOpen"\n        (close)="close()"\n        [position]="position"\n      />\n    <div style="display: flex; flex-direction: column; gap: 16px;">\n        <rte-button [label]="isOpen ? \'Hide banner\' : \'Show banner\' " (click)="toggleBanner()" style="margin-top: 16px;"/>\n         <rte-switch\n            label="{{position === \'overlay\' ? \'Overlay\' : \'Push\'}} mode"\n            [checked]="position === \'overlay\'"\n            (stateChange)="toggleOverlay()"\n          />\n        <div style="width: 100%; display: flex; gap: 16px; flexWrap: wrap">\n          <div style="width: 200px; height: 300px; backgroundColor: #e1e1e0"></div>\n          <div style="width: 400px; height: 300px; backgroundColor: #e1e1e0"></div>\n          <div style="width: 200px; height: 300px; backgroundColor: #e1e1e0"></div>\n          <div style="width: 400px; height: 300px; backgroundColor: #e1e1e0"></div>\n          <div style="width: 200px; height: 300px; backgroundColor: #e1e1e0"></div>\n          <div style="width: 200px; height: 300px; backgroundColor: #e1e1e0"></div>\n          <div style="width: 200px; height: 300px; backgroundColor: #e1e1e0"></div>\n          <div style="width: 200px; height: 300px; backgroundColor: #e1e1e0"></div>\n          <div style="width: 400px; height: 300px; backgroundColor: #e1e1e0"></div>\n        </div>\n    </div>\n    `\n  })\n}',...Overlay.parameters?.docs?.source}}},KeyboardInteraction.parameters={...KeyboardInteraction.parameters,docs:{...KeyboardInteraction.parameters?.docs,source:{originalSource:'{\n  decorators: [moduleMetadata({\n    imports: [ButtonComponent]\n  })],\n  args: {\n    ...Default.args,\n    closable: true,\n    isOpen: true,\n    actionLabel: "Voir les détails"\n  },\n  render: args => ({\n    props: {\n      ...args,\n      close() {\n        this["isOpen"] = false;\n      },\n      toggleBanner() {\n        this["isOpen"] = !this["isOpen"];\n      },\n      actionCallback: () => {\n        console.log("Action button clicked");\n      }\n    },\n    template: `\n    <div style="display: flex; flex-direction: column; gap: 16px;">\n        <rte-banner\n          [title]="title"\n          [message]="message"\n          [type]="type"\n          [showIcon]="true"\n          [closable]="true"\n          [isOpen]="isOpen"\n          (close)="close()"\n          [actionLabel]="actionLabel"\n          (click)="actionCallback()"\n          />\n        <rte-button [label]="isOpen ? \'Hide banner\' : \'Show banner\' " (click)="toggleBanner()" style="margin-top: 16px;"/>\n    </div>\n    `\n  }),\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const banner = await canvas.getByRole("status");\n    const actionButton = await within(banner).getAllByRole("button")[0];\n    const closeButton = await within(banner).getAllByRole("button")[1];\n    await userEvent.tab();\n    expect(actionButton).toHaveFocus();\n    await userEvent.tab();\n    expect(closeButton).toHaveFocus();\n    await userEvent.keyboard("{Enter}");\n    await waitFor(() => expect(banner).not.toBeInTheDocument());\n  }\n}',...KeyboardInteraction.parameters?.docs?.source}}}},"./projects/ds-rte-lib/src/lib/components/button/button.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("../../node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("../../node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:wght,FILL,GRAD@400,0,0&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,200..1000;1,200..1000&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,':host {\n  display: inline-flex;\n  flex-shrink: 0;\n}\n\n.rte-button {\n  align-items: center;\n  cursor: pointer;\n  display: inline-flex;\n  justify-content: center;\n}\n.rte-button:focus-visible {\n  outline: 1px solid var(--border-brand-focused);\n  outline-offset: 4px;\n}\n.rte-button.size-s {\n  font-feature-settings: "liga" off, "clig" off;\n  font-style: normal;\n  font-family: "Nunito";\n  font-size: 14px;\n  letter-spacing: -0.5px;\n  font-weight: 600;\n  line-height: 20px;\n  height: 24px;\n  border-radius: 4px;\n  padding: 4px 8px;\n}\n.rte-button.size-s .rte-button-label {\n  margin: 0 4px;\n}\n.rte-button.size-m {\n  font-feature-settings: "liga" off, "clig" off;\n  font-style: normal;\n  font-family: "Nunito";\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: -0.5px;\n  height: 32px;\n  border-radius: 4px;\n  padding: 4px 12px;\n}\n.rte-button.size-m .rte-button-label {\n  margin: 0 6px;\n}\n.rte-button.size-l {\n  font-feature-settings: "liga" off, "clig" off;\n  font-style: normal;\n  font-family: "Nunito";\n  font-weight: 600;\n  font-size: 20px;\n  line-height: 28px;\n  letter-spacing: -0.5px;\n  height: 40px;\n  border-radius: 8px;\n  padding: 4px 16px;\n}\n.rte-button.size-l .rte-button-label {\n  margin: 0 8px;\n}\n.rte-button.primary {\n  border: var(--border-brand-default);\n  color: var(--content-primary-inverse);\n  background: var(--background-brand-default);\n}\n.rte-button.primary:hover {\n  background: var(--background-brand-hover);\n  border: var(--background-brand-hover);\n}\n.rte-button.primary:active {\n  background: var(--background-brand-pressed);\n}\n.rte-button.primary:disabled {\n  background: var(--background-disabled);\n  border: solid 1px var(--border-disabled);\n  color: var(--content-disabled);\n  box-shadow: none;\n  cursor: default;\n}\n.rte-button.secondary {\n  background: var(--background-default);\n  border: solid 1px var(--border-brand-default);\n  color: var(--content-brand-default);\n}\n.rte-button.secondary:hover {\n  background: var(--background-brand-inverse-hover);\n}\n.rte-button.secondary:active {\n  background: var(--background-brand-inverse-pressed);\n}\n.rte-button.secondary:disabled {\n  background: var(--background-disabled);\n  border: solid 1px var(--border-disabled);\n  color: var(--content-disabled);\n  cursor: default;\n}\n.rte-button.text {\n  background: transparent;\n  border: none;\n  color: var(--content-brand-default);\n}\n.rte-button.text:hover {\n  background: var(--background-brand-inverse-hover);\n}\n.rte-button.text:active {\n  background: var(--background-brand-inverse-pressed);\n}\n.rte-button.text:disabled {\n  background: var(--background-disabled);\n  color: var(--content-disabled);\n  cursor: default;\n}\n.rte-button.transparent {\n  background: transparent;\n  border: none;\n  color: var(--content-brand-default);\n}\n.rte-button.transparent:hover {\n  color: var(--content-brand-hover);\n}\n.rte-button.transparent:active {\n  color: var(--content-brand-press);\n}\n.rte-button.transparent:disabled {\n  color: var(--content-disabled);\n  box-shadow: none;\n  cursor: default;\n}\n.rte-button.danger {\n  background: var(--background-danger-default);\n  border: none;\n  color: var(--content-primary-inverse);\n  border-radius: 8px;\n}\n.rte-button.danger:hover {\n  background: var(--background-danger-hover);\n}\n.rte-button.danger:active {\n  background: var(--background-danger-pressed);\n}\n.rte-button.danger:disabled {\n  background: var(--background-disabled);\n  border: var(--border-disabled);\n  color: var(--content-disabled);\n  box-shadow: none;\n  cursor: default;\n}\n.rte-button.neutral {\n  background: none;\n  border: none;\n  color: var(--content-primary);\n}\n.rte-button.neutral:hover {\n  color: var(--content-secondary);\n}\n.rte-button.neutral:active {\n  color: var(--content-tertiary);\n}\n.rte-button.neutral:disabled {\n  background: var(--background-disabled);\n  box-shadow: none;\n  color: var(--content-disabled);\n  cursor: default;\n}\n.rte-button.reverse {\n  background: none;\n  border: none;\n  color: var(--content-primary-inverse);\n}\n.rte-button.reverse:hover {\n  color: var(--background-hover);\n}\n.rte-button.reverse:active {\n  color: var(--content-primary-inverse);\n}\n.rte-button.reverse:disabled {\n  background: var(--background-disabled);\n  box-shadow: none;\n  color: var(--content-disabled);\n  cursor: default;\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/ds-rte-lib/src/lib/components/button/button.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Q:()=>ButtonComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var _staticBlock,button_componentngResource=__webpack_require__("./projects/ds-rte-lib/src/lib/components/button/button.component.scss?ngResource"),button_componentngResource_default=__webpack_require__.n(button_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let ButtonComponent=(class ButtonComponent{constructor(){this.label=(0,core.input)(""),this.variant=(0,core.input)("primary"),this.size=(0,core.input)("m"),this.disabled=(0,core.input)(!1),this.icon=(0,core.input)(""),this.ariaLabel=(0,core.input)(""),this.ariaLabelledBy=(0,core.input)(""),this.buttonType=(0,core.input)("button"),this.click=(0,core.output)()}onClick(event){event.stopPropagation(),this.click.emit()}static#_=_staticBlock=()=>(this.propDecorators={label:[{type:core.Input,args:[{isSignal:!0,alias:"label",required:!1,transform:void 0}]}],variant:[{type:core.Input,args:[{isSignal:!0,alias:"variant",required:!1,transform:void 0}]}],size:[{type:core.Input,args:[{isSignal:!0,alias:"size",required:!1,transform:void 0}]}],disabled:[{type:core.Input,args:[{isSignal:!0,alias:"disabled",required:!1,transform:void 0}]}],icon:[{type:core.Input,args:[{isSignal:!0,alias:"icon",required:!1,transform:void 0}]}],ariaLabel:[{type:core.Input,args:[{isSignal:!0,alias:"ariaLabel",required:!1,transform:void 0}]}],ariaLabelledBy:[{type:core.Input,args:[{isSignal:!0,alias:"ariaLabelledBy",required:!1,transform:void 0}]}],buttonType:[{type:core.Input,args:[{isSignal:!0,alias:"buttonType",required:!1,transform:void 0}]}],click:[{type:core.Output,args:["click"]}]},this)},_staticBlock());ButtonComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"rte-button",imports:[],standalone:!0,template:'<button\n    class="rte-button {{ variant() }} size-{{ size() }}"\n    [attr.aria-label]="ariaLabel()"\n    [attr.aria-labelledby]="ariaLabelledBy()"\n    [attr.type]="buttonType()"\n    [disabled]="disabled()"\n    (click)="onClick($event)"\n>\n    <span class="rte-button-label">{{ label() }}</span>\n</button>',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[button_componentngResource_default()]})],ButtonComponent)},"./projects/ds-rte-lib/src/lib/components/switch/switch.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("../../node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("../../node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:wght,FILL,GRAD@400,0,0&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,200..1000;1,200..1000&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.switch-container {\n  display: inline-flex;\n  align-items: center;\n  gap: 12px;\n  position: relative;\n}\n.switch-container:hover .switch-icon-check {\n  background-color: var(--background-neutral-bold-hover);\n}\n.switch-container.checked:hover .switch {\n  background-color: var(--background-brand-selected-hover);\n}\n.switch-container .switch {\n  appearance: none;\n  cursor: pointer;\n  position: relative;\n  display: block;\n  padding: 0px;\n  margin: 0px;\n  background-color: var(--background-neutral-regular-default);\n  border: 2px solid var(--border-primary);\n  border-radius: 999px;\n  transition: background-color 0.4s ease-in-out, border-color 0.4s ease-in-out;\n}\n.switch-container .switch:focus-visible {\n  outline: 1px solid var(--border-brand-focused);\n  outline-offset: 4px;\n}\n.switch-container .checked {\n  background-color: var(--background-brand-selected-default);\n  border: none;\n}\n.switch-container .switch-icon-check {\n  content: "";\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  background-color: var(--background-neutral-bold-default);\n  color: var(--background-default);\n  height: 16px;\n  width: 16px;\n  border-radius: 999px;\n  top: calc(50% - 8px);\n  left: 4px;\n  transition: background-color 0.4s ease-in-out, color 0.4s ease-in-out, transform 0.4s ease-in-out;\n}\n.switch-container .switch-icon-check.checked {\n  background-color: var(--background-default);\n  color: var(--background-brand-selected-default);\n  transform: translateX(16px);\n}\n.switch-container.appearance-neutral .switch {\n  background-color: var(--background-neutral-regular-default);\n  border: 2px solid var(--border-primary);\n}\n.switch-container.appearance-neutral .switch-icon-check {\n  background-color: var(--background-neutral-bold-default);\n  color: var(--content-primary-inverse);\n  border: none;\n}\n.switch-container.appearance-neutral:hover .switch-icon-check {\n  background-color: var(--background-neutral-bold-hover);\n}\n.switch-container.appearance-neutral.checked .switch {\n  background-color: var(--background-neutral-bold-default);\n  border: none;\n}\n.switch-container.appearance-neutral.checked .switch-icon-check {\n  background-color: var(--background-default);\n  color: var(--content-tertiary);\n}\n.switch-container.appearance-neutral.checked:hover .switch {\n  background-color: var(--background-neutral-bold-hover);\n}\n.switch-container.appearance-neutral.read-only {\n  cursor: not-allowed;\n}\n.switch-container.appearance-neutral.read-only:hover .switch {\n  background-color: var(--background-disabled);\n}\n.switch-container.appearance-neutral.read-only .switch {\n  background-color: var(--background-disabled);\n  border: none;\n}\n.switch-container.appearance-neutral.read-only .switch-icon-check {\n  cursor: not-allowed;\n  top: calc(50% - 10px);\n  left: 2px;\n  background-color: var(--background-default);\n  color: var(--border-primary);\n  border: 2px solid var(--border-primary);\n}\n.switch-container.appearance-neutral.read-only .switch-icon-check .icon {\n  cursor: not-allowed;\n}\n.switch-container.appearance-neutral.disabled {\n  cursor: not-allowed;\n}\n.switch-container.appearance-neutral.disabled .switch {\n  background-color: var(--background-disabled);\n  border: none;\n}\n.switch-container.appearance-neutral.disabled .switch-icon-check {\n  cursor: not-allowed;\n  top: calc(50% - 10px);\n  left: 2px;\n  background-color: var(--background-default);\n  color: var(--border-disabled);\n  border: 2px solid var(--border-disabled);\n}\n.switch-container.appearance-neutral.disabled .switch-icon-check .icon {\n  cursor: not-allowed;\n}\n.switch-container .switch-label {\n  cursor: pointer;\n  font-feature-settings: "liga" off, "clig" off;\n  font-style: normal;\n  font-family: "Arial";\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: 0px;\n  color: var(--content-primary);\n  word-wrap: break-word;\n}\n.switch-container.read-only {\n  cursor: not-allowed;\n}\n.switch-container.read-only:hover .switch {\n  background-color: var(--background-disabled);\n}\n.switch-container.read-only .switch {\n  cursor: not-allowed;\n  background-color: var(--background-disabled);\n  border: none;\n}\n.switch-container.read-only .switch-icon-check {\n  cursor: not-allowed;\n  top: calc(50% - 10px);\n  left: 2px;\n  background-color: var(--background-default);\n  color: var(--border-primary);\n  border: 2px solid var(--border-primary);\n}\n.switch-container.read-only .switch-label {\n  cursor: not-allowed;\n  color: var(--content-tertiary);\n}\n.switch-container.disabled {\n  cursor: not-allowed;\n}\n.switch-container.disabled:hover .switch {\n  background-color: var(--background-disabled);\n}\n.switch-container.disabled .switch {\n  cursor: not-allowed;\n  background-color: var(--background-disabled);\n  border: none;\n}\n.switch-container.disabled .switch-icon-check {\n  cursor: not-allowed;\n  top: calc(50% - 10px);\n  left: 2px;\n  background-color: var(--background-default);\n  color: var(--border-disabled);\n  border: 2px solid var(--border-disabled);\n}\n.switch-container.disabled .switch-label {\n  cursor: not-allowed;\n  color: var(--content-disabled);\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/ds-rte-lib/src/lib/components/switch/switch.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{c:()=>SwitchComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var switch_componentngResource=__webpack_require__("./projects/ds-rte-lib/src/lib/components/switch/switch.component.scss?ngResource"),switch_componentngResource_default=__webpack_require__.n(switch_componentngResource),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");var _staticBlock,icon_component=__webpack_require__("./projects/ds-rte-lib/src/lib/components/icon/icon.component.ts");let SwitchComponent=(class SwitchComponent{constructor(){this.label=(0,core.input)(""),this.appearance=(0,core.input)("brand"),this.showLabel=(0,core.input)(!0),this.showIcon=(0,core.input)(!0),this.disabled=(0,core.input)(!1),this.readOnly=(0,core.input)(!1),this.checked=(0,core.input)(!1),this.stateChange=(0,core.output)(),this.switchHeight=24,this.switchWidth=40,this.isChecked=(0,core.signal)(!1)}ngOnInit(){this.isChecked.set(this.checked())}handleChange(event){const target=event.target;this.isChecked.set(target.checked),this.stateChange.emit(event)}handleClick(event){if(this.readOnly()||this.disabled())event.stopPropagation();else{const inputElement=event.currentTarget.querySelector('input[type="checkbox"]');if(inputElement){inputElement.checked=!this.isChecked();const changeEvent=new Event("change",{bubbles:!0});Object.defineProperty(changeEvent,"target",{value:inputElement,writable:!1}),this.handleChange(changeEvent)}}}static#_=_staticBlock=()=>(this.propDecorators={label:[{type:core.Input,args:[{isSignal:!0,alias:"label",required:!1,transform:void 0}]}],appearance:[{type:core.Input,args:[{isSignal:!0,alias:"appearance",required:!1,transform:void 0}]}],showLabel:[{type:core.Input,args:[{isSignal:!0,alias:"showLabel",required:!1,transform:void 0}]}],showIcon:[{type:core.Input,args:[{isSignal:!0,alias:"showIcon",required:!1,transform:void 0}]}],disabled:[{type:core.Input,args:[{isSignal:!0,alias:"disabled",required:!1,transform:void 0}]}],readOnly:[{type:core.Input,args:[{isSignal:!0,alias:"readOnly",required:!1,transform:void 0}]}],checked:[{type:core.Input,args:[{isSignal:!0,alias:"checked",required:!1,transform:void 0}]}],stateChange:[{type:core.Output,args:["stateChange"]}]},this)},_staticBlock());SwitchComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"rte-switch",imports:[common.CommonModule,icon_component.R],standalone:!0,template:'<div\n    class="switch-container appearance-{{appearance()}}"\n    [ngClass]="{\n        \'disabled\': disabled(),\n        \'read-only\': readOnly(),\n        \'checked\': isChecked()\n    }"\n    (click)="handleClick($event)"\n>\n    <input\n        type="checkbox"\n        role="switch"\n        class="switch"\n        [attr.aria-checked]="isChecked()"\n        [attr.aria-label]="label()"\n        [attr.aria-disabled]="disabled()"\n        [attr.aria-readonly]="readOnly()"\n        [ariaLabel]="label()"\n        [name]="label()"\n        [ngClass]="{\n        \'disabled\': disabled(),\n        \'read-only\': readOnly(),\n        \'checked\': isChecked()\n    }"\n        [style.min-height.px]="switchHeight"\n        [style.min-width.px]="switchWidth"\n        [disabled]="disabled()"\n        [checked]="isChecked()"\n    />\n    <div class="switch-icon-check" [ngClass]="{\'checked\': isChecked() }" (click)="handleClick($event)">\n        @if (showIcon()) {\n            <rte-icon\n            class="icon"\n            [name]="isChecked() ? \'check\' : \'close\'"\n            [size]="16"\n            (click)="handleClick($event)"\n            ></rte-icon>\n        }\n    </div>\n    @if (showLabel() && label()) {\n        <label\n            class="switch-label"\n            [for]="label()"\n        >\n        {{ label() }}\n    </label>\n    }\n</div>',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[switch_componentngResource_default()]})],SwitchComponent)}}]);