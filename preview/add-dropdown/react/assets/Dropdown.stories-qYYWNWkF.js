import{j as t}from"./jsx-runtime-Cf8x2fCZ.js";import{r as l}from"./index-G8LIXM5I.js";import{u as ge,b as z,c as G,a as J,O as Ie}from"./Overlay-BijRMGwf.js";import{S as F,E as U,T as $,c as K,d as V,e as Y}from"./keyboard.constants-YQ0IdItO.js";import{u as oe}from"./useActiveKeyboard-CyCI8mio.js";import{c as he}from"./index-DSdvzt-y.js";import{D as Q}from"./Divider-B0TD5a92.js";import{I as q}from"./Icon-DjEid3Hw.js";import"./index-yBjzXJbu.js";import"./_commonjsHelpers-CqkleIqs.js";import"./index-DoK7PxrN.js";import"./index-fNjTmf9T.js";const W=l.createContext(void 0),ne=({dropdownId:n,closeRoot:e,autoClose:o=!0,children:s})=>t.jsx(W.Provider,{value:{dropdownId:n,closeRoot:e,autoClose:o},children:s});ne.__docgenInfo={description:"",methods:[],displayName:"DropdownContextProvider",props:{dropdownId:{required:!0,tsType:{name:"string"},description:""},autoClose:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},closeRoot:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""}}};const xe="_trigger_1n20h_3",ye="_dropdown_1n20h_14",H={trigger:xe,dropdown:ye,"dropdown-items":"_dropdown-items_1n20h_39"};let j={};const v={};class c{static generateId(){return`dropdown-${Math.random().toString(36).substr(2,9)}`}static isOpen(e){return j[e]||!1}static open(e){j[e]=!0,this.notifyListeners(e)}static close(e){delete j[e],this.notifyListeners(e)}static closeAll(){j={},Object.values(v).flat().forEach(e=>e())}static getOpenedDropdowns(){return Object.keys(j)}static getParentDropdownId(e){const o=e.split("-");return o.length<=2?null:(o.pop(),o.join("-"))}static closeSubMenus(e){Object.keys(j).filter(a=>a.startsWith(e)&&a!==e).forEach(a=>c.close(a))}static subscribe(e,o){return v[e]||(v[e]=[]),v[e].push(o),()=>{v[e]=v[e].filter(s=>s!==o)}}static notifyListeners(e){var o;(o=v[e])==null||o.forEach(s=>s())}}const ve=n=>{var s;const e=se(n),o=e.findIndex(a=>a===document.activeElement);o<e.length-1?e[o+1].focus():(s=e[0])==null||s.focus()},be=n=>{var s;const e=se(n),o=e.findIndex(a=>a===document.activeElement);o>0?e[o-1].focus():(s=e[e.length-1])==null||s.focus()},De=n=>{var o;const e=document.querySelector(`[data-dropdown-id='${n}']`);e&&((o=(e==null?void 0:e.querySelectorAll('li[role="menuitem"]'))[0])==null||o.focus())},Ee=n=>{var s;const e=c.getParentDropdownId(n),o=document.querySelector(`[data-dropdown-id='${e}']`);(s=o==null?void 0:o.querySelector("[data-active=true]"))==null||s.focus()},se=n=>{const e=n==null?void 0:n.querySelectorAll('li[role="menuitem"]');return e?Array.from(e):[]},re=n=>{const e=l.useRef(n||c.generateId()),[o,s]=l.useState(!1);l.useEffect(()=>c.subscribe(e.current,()=>{s(c.isOpen(e.current))}),[]);const a=()=>{c.open(e.current)},d=()=>{c.close(e.current)},h=()=>{o?d():a()};return{dropdownId:e.current,isOpen:o,open:a,close:d,toggle:h}},N=l.forwardRef(({trigger:n,className:e,style:o,dropdownId:s,hasParent:a,position:d="bottom",autoClose:h=!0,isOpen:u=!1,onClose:O=()=>{},children:m,...P},I)=>{const{dropdownId:D}=re(s),[C,R]=l.useState(d),{closeRoot:E}=l.useContext(W)||{},S=l.useRef(null),_=l.useRef(null),[f,k]=l.useState(null),[x,p]=l.useState(null),[X,B]=l.useState({top:500,left:500}),{shouldRender:ae,isAnimating:le}=ge(u,150),ie=l.useCallback(r=>{_.current=r,k(r),typeof I=="function"?I(r):I&&(I.current=r)},[I]),ce=l.useCallback(r=>{S.current=r,p(r)},[]),M=l.useCallback(()=>{a&&E?E():O(),c.closeAll()},[E,a,O]),de=r=>{if(r.key===K||r.key===V){if(r.stopPropagation(),r.preventDefault(),f===null)return;r.key===K?ve(f):be(f)}r.key===Y&&M()},{onKeyDown:ue,onKeyUp:pe}=oe({onKeyUp:de},{interactiveKeyCodes:[F,U,$,K,V,Y]});l.useEffect(()=>{const r=w=>{var A;const g=w.target,y=document.querySelectorAll("[data-dropdown-id]");Array.from(y).some(we=>we.contains(g))||((A=S.current)==null?void 0:A.contains(g))||M()};return document.addEventListener("mousedown",r),()=>document.removeEventListener("mousedown",r)},[M]),l.useEffect(()=>{u&&(!x||!f||(a?me(x,f):fe(x,f,d)))},[u,a,f,x,d]);const me=(r,w)=>{const g=z(r,w,"right",0,!0),y=G(r,w,g),T=J(g,r,w,0,y);R(g),B(T)},fe=(r,w,g)=>{const y=g==="auto"?z(r,w,"bottom"):g,T=G(r,w,y),A=J(y,r,w,0,T);R(y),B(A)};return t.jsxs(ne,{dropdownId:D,closeRoot:M,autoClose:h,children:[t.jsx("div",{ref:ce,className:H.trigger,children:n}),ae&&t.jsx(Ie,{children:t.jsx("div",{className:he(H.dropdown,e),"data-dropdown-id":D,"data-position":C,"data-open":le||void 0,...P,style:{...o,top:X.top,left:X.left},ref:ie,onKeyUp:pe,onKeyDown:ue,children:t.jsx("ul",{className:H["dropdown-items"],role:"menu",children:m})})})]})});N.__docgenInfo={description:"",methods:[],displayName:"Dropdown",props:{trigger:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},position:{defaultValue:{value:'"bottom"',computed:!1},required:!1},autoClose:{defaultValue:{value:"true",computed:!1},required:!1},isOpen:{defaultValue:{value:"false",computed:!1},required:!1},onClose:{defaultValue:{value:"() => {}",computed:!1},required:!1}},composes:["CoreDropdownProps"]};const b={"dropdown-item":"_dropdown-item_h8tgc_3","dropdown-divider":"_dropdown-divider_h8tgc_40"},i=({label:n,leftIcon:e,trailingText:o,disabled:s,hasSeparator:a,hasIndent:d,children:h,onClick:u,...O})=>{const{dropdownId:m,autoClose:P,closeRoot:I}=l.useContext(W)||{},D=`${m}-${n&&n.replace(/\s+/g,"")}`,{isOpen:C,open:R}=re(D),E=()=>{m&&(c.closeSubMenus(m),R())},S=()=>{m&&c.closeSubMenus(m)};d&&e&&console.warn(`DropdownItem: 'hasIndent' prop is ignored when 'leftIcon' is provided : displaying icon '${e}' for dropdownitem with label '${n}' without indentation.`);const _=p=>{s||(u&&(u==null||u(p)),P&&I&&I())},f=p=>{if(p.preventDefault(),p.key===$&&(C&&De(D),p.shiftKey&&m&&Ee(m)),p.key===U||p.key===F){if(s)return;u&&_(p),h&&R()}},{onKeyUp:k,onFocus:x}=oe({onKeyUp:f,onFocus:S},{interactiveKeyCodes:[F,U,$,K,V,Y]});return h?t.jsx(N,{hasParent:!0,dropdownId:D,isOpen:C,trigger:t.jsxs(t.Fragment,{children:[t.jsxs("li",{className:b["dropdown-item"],"data-active":C,"data-disabled":s,role:"menuitem",onMouseOver:E,onKeyUp:k,onFocus:x,tabIndex:0,children:[d&&t.jsx("span",{style:{width:"20px"}}),e&&t.jsx(q,{name:e,className:b["dropdown-item-icon"]}),t.jsx("span",{style:{flex:"2"},children:n}),t.jsx(q,{name:"arrow-chevron-right",className:b["dropdown-item-icon"]})]}),a&&t.jsx("div",{className:b["dropdown-divider"],children:t.jsx(Q,{})})]}),children:h}):t.jsxs(t.Fragment,{children:[t.jsxs("li",{className:b["dropdown-item"],"data-disabled":s,role:"menuitem",onClick:_,onMouseOver:E,onKeyUp:k,onFocus:x,tabIndex:0,...O,children:[d&&!e&&t.jsx("span",{style:{width:"20px"}}),e&&t.jsx(q,{name:e,className:b["dropdown-item-icon"]}),t.jsx("span",{style:{flex:"2"},children:n}),o&&t.jsx("div",{children:o})]}),a&&t.jsx("div",{className:b["dropdown-divider"],children:t.jsx(Q,{})})]})};i.__docgenInfo={description:"",methods:[],displayName:"DropdownItem",props:{onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: React.MouseEvent<HTMLLIElement> | React.KeyboardEventHandler<HTMLLIElement>) => void",signature:{arguments:[{type:{name:"union",raw:"React.MouseEvent<HTMLLIElement> | React.KeyboardEventHandler<HTMLLIElement>",elements:[{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLLIElement>",elements:[{name:"HTMLLIElement"}]},{name:"ReactKeyboardEventHandler",raw:"React.KeyboardEventHandler<HTMLLIElement>",elements:[{name:"HTMLLIElement"}]}]},name:"event"}],return:{name:"void"}}},description:""}},composes:["Omit"]};const Ne={title:"Dropdown",component:N,args:{}},L={args:{},render:n=>{const[e,o]=l.useState(!1);return t.jsx("div",{style:{position:"relative",width:"800px",height:"200px",display:"flex",justifyContent:"space-between",gap:"500px"},children:t.jsxs(N,{...n,onClose:()=>{o(!1)},trigger:t.jsx("button",{onClick:()=>o(!0),style:{color:"black"},children:"Click Me!"}),style:{width:"250px"},isOpen:e,children:[t.jsx(i,{label:"Messages",leftIcon:"mail",hasSeparator:!0,onClick:()=>console.log("click")}),t.jsxs(i,{label:"Actions",leftIcon:"settings",children:[t.jsxs(i,{label:"Edit",leftIcon:"edit",children:[t.jsx(i,{label:"Cut",leftIcon:"cut",trailingText:"⌘X"}),t.jsx(i,{label:"Copy",leftIcon:"copy",trailingText:"⌘X",onClick:()=>console.log("click")}),t.jsx(i,{label:"Paste",leftIcon:"paste",trailingText:"⌘V"})]}),t.jsx(i,{label:"Archive",leftIcon:"archive"}),t.jsx(i,{label:"Delete",leftIcon:"delete"})]}),t.jsx(i,{label:"Help",leftIcon:"help"}),t.jsx(i,{label:"More information",leftIcon:"info",hasSeparator:!0}),t.jsx(i,{label:"First option",hasIndent:!0}),t.jsx(i,{label:"Second option",hasIndent:!0}),t.jsx(i,{label:"Third option",hasSeparator:!0,hasIndent:!0}),t.jsx(i,{label:"Username",leftIcon:"user-circle",disabled:!0})]})})}};var Z,ee,te;L.parameters={...L.parameters,docs:{...(Z=L.parameters)==null?void 0:Z.docs,source:{originalSource:`{
  args: {},
  render: args => {
    const [isOpen, setIsOpen] = useState<boolean>(false);
    return <div style={{
      position: "relative",
      width: "800px",
      height: "200px",
      display: "flex",
      justifyContent: "space-between",
      gap: "500px"
    }}>
        <Dropdown {...args} onClose={() => {
        setIsOpen(false);
      }} trigger={<button onClick={() => setIsOpen(true)} style={{
        color: "black"
      }}>
              Click Me!
            </button>} style={{
        width: "250px"
      }} isOpen={isOpen}>
          <DropdownItem label="Messages" leftIcon="mail" hasSeparator onClick={() => console.log("click")} />
          <DropdownItem label="Actions" leftIcon="settings">
            <DropdownItem label="Edit" leftIcon="edit">
              <DropdownItem label="Cut" leftIcon="cut" trailingText="⌘X" />
              <DropdownItem label="Copy" leftIcon="copy" trailingText="⌘X" onClick={() => console.log("click")} />
              <DropdownItem label="Paste" leftIcon="paste" trailingText="⌘V" />
            </DropdownItem>
            <DropdownItem label="Archive" leftIcon="archive" />
            <DropdownItem label="Delete" leftIcon="delete" />
          </DropdownItem>
          <DropdownItem label="Help" leftIcon="help" />
          <DropdownItem label="More information" leftIcon="info" hasSeparator />
          <DropdownItem label="First option" hasIndent />
          <DropdownItem label="Second option" hasIndent />
          <DropdownItem label="Third option" hasSeparator hasIndent />
          <DropdownItem label="Username" leftIcon="user-circle" disabled />
        </Dropdown>
      </div>;
  }
}`,...(te=(ee=L.parameters)==null?void 0:ee.docs)==null?void 0:te.source}}};const Pe=["Default"];export{L as Default,Pe as __namedExportsOrder,Ne as default};
