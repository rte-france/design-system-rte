import{j as t}from"./jsx-runtime-Cf8x2fCZ.js";import{r as l}from"./index-G8LIXM5I.js";import{u as Ie,b as J,c as Q,a as Z,O as be}from"./Overlay-BijRMGwf.js";import{S as U,E as V,T as $,c as K,d as Y,e as W}from"./keyboard.constants-YQ0IdItO.js";import{u as se}from"./useActiveKeyboard-CyCI8mio.js";import{c as xe}from"./index-DSdvzt-y.js";import{D as ee}from"./Divider-B0TD5a92.js";import{I as H}from"./Icon-DjEid3Hw.js";import"./index-yBjzXJbu.js";import"./_commonjsHelpers-CqkleIqs.js";import"./index-DoK7PxrN.js";import"./index-fNjTmf9T.js";const X=l.createContext(void 0),re=({dropdownId:o,closeRoot:e,autoClose:n=!0,children:s})=>t.jsx(X.Provider,{value:{dropdownId:o,closeRoot:e,autoClose:n},children:s});re.__docgenInfo={description:"",methods:[],displayName:"DropdownContextProvider",props:{dropdownId:{required:!0,tsType:{name:"string"},description:""},autoClose:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},closeRoot:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""}}};const ve="_trigger_1n20h_3",De="_dropdown_1n20h_14",F={trigger:ve,dropdown:De,"dropdown-items":"_dropdown-items_1n20h_39"};let E={};const b={};class d{static generateId(){return`dropdown-${Math.random().toString(36).substr(2,9)}`}static isOpen(e){return E[e]||!1}static open(e){E[e]=!0,this.notifyListeners(e)}static close(e){delete E[e],this.notifyListeners(e)}static closeAll(){E={},Object.values(b).flat().forEach(e=>e())}static getOpenedDropdowns(){return Object.keys(E)}static getParentDropdownId(e){const n=e.split("-");return n.length<=2?null:(n.pop(),n.join("-"))}static closeSubMenus(e){Object.keys(E).filter(a=>a.startsWith(e)&&a!==e).forEach(a=>d.close(a))}static subscribe(e,n){return b[e]||(b[e]=[]),b[e].push(n),()=>{b[e]=b[e].filter(s=>s!==n)}}static notifyListeners(e){var n;(n=b[e])==null||n.forEach(s=>s())}}const Ee=o=>{var s;const e=ae(o),n=e.findIndex(a=>a===document.activeElement);n<e.length-1?e[n+1].focus():(s=e[0])==null||s.focus()},je=o=>{var s;const e=ae(o),n=e.findIndex(a=>a===document.activeElement);n>0?e[n-1].focus():(s=e[e.length-1])==null||s.focus()},Ce=o=>{var n;const e=document.querySelector(`[data-dropdown-id='${o}']`);e&&((n=(e==null?void 0:e.querySelectorAll('li[role="menuitem"]'))[0])==null||n.focus())},Te=o=>{var s;const e=d.getParentDropdownId(o),n=document.querySelector(`[data-dropdown-id='${e}']`);(s=n==null?void 0:n.querySelector("[data-active=true]"))==null||s.focus()},ae=o=>{const e=o==null?void 0:o.querySelectorAll('li[role="menuitem"]');return e?Array.from(e):[]},le=o=>{const e=l.useRef(o||d.generateId()),[n,s]=l.useState(!1);l.useEffect(()=>d.subscribe(e.current,()=>{s(d.isOpen(e.current))}),[]);const a=()=>{d.open(e.current)},c=()=>{d.close(e.current)},h=()=>{n?c():a()};return{dropdownId:e.current,isOpen:n,open:a,close:c,toggle:h}},N=l.forwardRef(({trigger:o,className:e,style:n,dropdownId:s,hasParent:a,position:c="bottom",autoClose:h=!0,isOpen:u=!1,onOpen:C=()=>{},onClose:p=()=>{},children:P,...T},w)=>{const{dropdownId:v,open:j}=le(s),[R,O]=l.useState(c),{closeRoot:D}=l.useContext(X)||{},S=l.useRef(null),_=l.useRef(null),[m,f]=l.useState(null),[k,ie]=l.useState(null),[B,z]=l.useState({top:500,left:500}),{shouldRender:de,isAnimating:ce}=Ie(u,150),ue=l.useCallback(r=>{_.current=r,f(r),typeof w=="function"?w(r):w&&(w.current=r)},[w]),pe=l.useCallback(r=>{S.current=r,ie(r)},[]),q=l.useCallback(()=>{a&&D?D():p(),d.closeAll()},[D,a,p]),G=l.useCallback(()=>{C(),j()},[C,j]),me=r=>{if(r.key===K||r.key===Y){if(r.stopPropagation(),r.preventDefault(),m===null)return;r.key===K?Ee(m):je(m)}r.key===W&&q()},{onKeyDown:fe,onKeyUp:we}=se({onKeyUp:me},{interactiveKeyCodes:[U,V,$,K,Y,W]});l.useEffect(()=>{const r=g=>{var A;const y=g.target,I=document.querySelectorAll("[data-dropdown-id]");Array.from(I).some(he=>he.contains(y))||((A=S.current)==null?void 0:A.contains(y))||q()};return document.addEventListener("mousedown",r),()=>document.removeEventListener("mousedown",r)},[q]),l.useEffect(()=>{u&&(!k||!m||(G(),a?ge(k,m):ye(k,m,c)))},[u,a,G,m,k,c]);const ge=(r,g)=>{const y=J(r,g,"right",0,!0),I=Q(r,g,y),M=Z(y,r,g,0,I);O(y),z(M)},ye=(r,g,y)=>{const I=y==="auto"?J(r,g,"bottom"):y,M=Q(r,g,I),A=Z(I,r,g,0,M);O(I),z(A)};return t.jsxs(re,{dropdownId:v,closeRoot:q,autoClose:h,children:[t.jsx("div",{ref:pe,className:F.trigger,children:o}),de&&t.jsx(be,{children:t.jsx("div",{className:xe(F.dropdown,e),"data-dropdown-id":v,"data-position":R,"data-open":ce||void 0,...T,style:{...n,top:B.top,left:B.left},ref:ue,onKeyUp:we,onKeyDown:fe,children:t.jsx("ul",{className:F["dropdown-items"],role:"menu",children:P})})})]})});N.__docgenInfo={description:"",methods:[],displayName:"Dropdown",props:{dropdownId:{required:!0,tsType:{name:"string"},description:""},trigger:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},hasParent:{required:!1,tsType:{name:"boolean"},description:""},disabled:{required:!1,tsType:{name:"boolean"},description:""},position:{required:!1,tsType:{name:"union",raw:'"top" | "bottom" | "left" | "right" | "auto"',elements:[{name:"literal",value:'"top"'},{name:"literal",value:'"bottom"'},{name:"literal",value:'"left"'},{name:"literal",value:'"right"'},{name:"literal",value:'"auto"'}]},description:"",defaultValue:{value:'"bottom"',computed:!1}},autoOpen:{required:!1,tsType:{name:"boolean"},description:""},autoClose:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},onOpen:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",defaultValue:{value:"() => {}",computed:!1}},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"",defaultValue:{value:"() => {}",computed:!1}},isOpen:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}}}};const x={"dropdown-item":"_dropdown-item_h8tgc_3","dropdown-divider":"_dropdown-divider_h8tgc_40"},i=({label:o,leftIcon:e,trailingText:n,disabled:s,hasSeparator:a,hasIndent:c,children:h,onClick:u,...C})=>{const{dropdownId:p,autoClose:P,closeRoot:T}=l.useContext(X)||{},w=`${p}-${o&&o.replace(/\s+/g,"")}`,{isOpen:v,open:j}=le(w),R=()=>{p&&(d.closeSubMenus(p),j())},O=()=>{p&&d.closeSubMenus(p)};c&&e&&console.warn(`DropdownItem: 'hasIndent' prop is ignored when 'leftIcon' is provided : displaying icon '${e}' for dropdownitem with label '${o}' without indentation.`);const D=f=>{s||(u&&(u==null||u(f)),P&&T&&T())},S=f=>{if(f.preventDefault(),f.key===$&&(v&&Ce(w),f.shiftKey&&p&&Te(p)),f.key===V||f.key===U){if(s)return;u&&D(f),h&&j()}},{onKeyUp:_,onFocus:m}=se({onKeyUp:S,onFocus:O},{interactiveKeyCodes:[U,V,$,K,Y,W]});return h?t.jsx(N,{hasParent:!0,dropdownId:w,isOpen:v,trigger:t.jsxs(t.Fragment,{children:[t.jsxs("li",{className:x["dropdown-item"],"data-active":v,"data-disabled":s,role:"menuitem",onMouseOver:R,onKeyUp:_,onFocus:m,tabIndex:0,children:[c&&t.jsx("span",{style:{width:"20px"}}),e&&t.jsx(H,{name:e,className:x["dropdown-item-icon"]}),t.jsx("span",{style:{flex:"2"},children:o}),t.jsx(H,{name:"arrow-chevron-right",className:x["dropdown-item-icon"]})]}),a&&t.jsx("div",{className:x["dropdown-divider"],children:t.jsx(ee,{})})]}),children:h}):t.jsxs(t.Fragment,{children:[t.jsxs("li",{className:x["dropdown-item"],"data-disabled":s,role:"menuitem",onClick:D,onMouseOver:R,onKeyUp:_,onFocus:m,tabIndex:0,...C,children:[c&&!e&&t.jsx("span",{style:{width:"20px"}}),e&&t.jsx(H,{name:e,className:x["dropdown-item-icon"]}),t.jsx("span",{style:{flex:"2"},children:o}),n&&t.jsx("div",{children:n})]}),a&&t.jsx("div",{className:x["dropdown-divider"],children:t.jsx(ee,{})})]})};i.__docgenInfo={description:"",methods:[],displayName:"DropdownItem",props:{label:{required:!1,tsType:{name:"string"},description:""},leftIcon:{required:!1,tsType:{name:"string"},description:""},trailingText:{required:!1,tsType:{name:"string"},description:""},disabled:{required:!1,tsType:{name:"boolean"},description:""},hasSeparator:{required:!1,tsType:{name:"boolean"},description:""},hasIndent:{required:!1,tsType:{name:"boolean"},description:""},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: React.MouseEvent<HTMLLIElement> | React.KeyboardEventHandler<HTMLLIElement>) => void",signature:{arguments:[{type:{name:"union",raw:"React.MouseEvent<HTMLLIElement> | React.KeyboardEventHandler<HTMLLIElement>",elements:[{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLLIElement>",elements:[{name:"HTMLLIElement"}]},{name:"ReactKeyboardEventHandler",raw:"React.KeyboardEventHandler<HTMLLIElement>",elements:[{name:"HTMLLIElement"}]}]},name:"event"}],return:{name:"void"}}},description:""}}};const He={title:"Dropdown",component:N,args:{}},L={args:{},render:o=>{const[e,n]=l.useState(!1);return t.jsx("div",{style:{position:"relative",width:"800px",height:"200px",display:"flex",justifyContent:"space-between",gap:"500px"},children:t.jsxs(N,{...o,onClose:()=>{console.log("closing from component state managemen"),n(!1)},trigger:t.jsx("button",{onClick:()=>n(!0),style:{color:"black"},children:"Click Me!"}),style:{width:"250px"},isOpen:e,children:[t.jsx(i,{label:"Messages",leftIcon:"mail",hasSeparator:!0,onClick:()=>console.log("click")}),t.jsxs(i,{label:"Actions",leftIcon:"settings",children:[t.jsxs(i,{label:"Edit",leftIcon:"edit",children:[t.jsx(i,{label:"Cut",leftIcon:"cut",trailingText:"⌘X"}),t.jsx(i,{label:"Copy",leftIcon:"copy",trailingText:"⌘X",onClick:()=>console.log("click")}),t.jsx(i,{label:"Paste",leftIcon:"paste",trailingText:"⌘V"})]}),t.jsx(i,{label:"Archive",leftIcon:"archive"}),t.jsx(i,{label:"Delete",leftIcon:"delete"})]}),t.jsx(i,{label:"Help",leftIcon:"help"}),t.jsx(i,{label:"More information",leftIcon:"info",hasSeparator:!0}),t.jsx(i,{label:"First option",hasIndent:!0}),t.jsx(i,{label:"Second option",hasIndent:!0}),t.jsx(i,{label:"Third option",hasSeparator:!0,hasIndent:!0}),t.jsx(i,{label:"Username",leftIcon:"user-circle",disabled:!0})]})})}};var te,ne,oe;L.parameters={...L.parameters,docs:{...(te=L.parameters)==null?void 0:te.docs,source:{originalSource:`{
  args: {},
  render: args => {
    const [isOpen, setIsOpen] = useState<boolean>(false);
    return <div style={{
      position: "relative",
      width: "800px",
      height: "200px",
      display: "flex",
      justifyContent: "space-between",
      gap: "500px"
    }}>
        <Dropdown {...args} onClose={() => {
        console.log("closing from component state managemen");
        setIsOpen(false);
      }} trigger={<button onClick={() => setIsOpen(true)} style={{
        color: "black"
      }}>
              Click Me!
            </button>} style={{
        width: "250px"
      }} isOpen={isOpen}>
          <DropdownItem label="Messages" leftIcon="mail" hasSeparator onClick={() => console.log("click")} />
          <DropdownItem label="Actions" leftIcon="settings">
            <DropdownItem label="Edit" leftIcon="edit">
              <DropdownItem label="Cut" leftIcon="cut" trailingText="⌘X" />
              <DropdownItem label="Copy" leftIcon="copy" trailingText="⌘X" onClick={() => console.log("click")} />
              <DropdownItem label="Paste" leftIcon="paste" trailingText="⌘V" />
            </DropdownItem>
            <DropdownItem label="Archive" leftIcon="archive" />
            <DropdownItem label="Delete" leftIcon="delete" />
          </DropdownItem>
          <DropdownItem label="Help" leftIcon="help" />
          <DropdownItem label="More information" leftIcon="info" hasSeparator />
          <DropdownItem label="First option" hasIndent />
          <DropdownItem label="Second option" hasIndent />
          <DropdownItem label="Third option" hasSeparator hasIndent />
          <DropdownItem label="Username" leftIcon="user-circle" disabled />
        </Dropdown>
      </div>;
  }
}`,...(oe=(ne=L.parameters)==null?void 0:ne.docs)==null?void 0:oe.source}}};const Fe=["Default"];export{L as Default,Fe as __namedExportsOrder,He as default};
