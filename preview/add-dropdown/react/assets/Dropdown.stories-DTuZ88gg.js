import{j as t}from"./jsx-runtime-Cf8x2fCZ.js";import{r as l}from"./index-G8LIXM5I.js";import{u as ge,b as G,c as J,a as Q,O as xe}from"./Overlay-BijRMGwf.js";import{S as U,E as $,T as V,c as K,d as Y,e as B}from"./keyboard.constants-YQ0IdItO.js";import{u as ne}from"./useActiveKeyboard-CyCI8mio.js";import{c as he}from"./index-DSdvzt-y.js";import{D as Z}from"./Divider-B0TD5a92.js";import{I as q}from"./Icon-DjEid3Hw.js";import"./index-yBjzXJbu.js";import"./_commonjsHelpers-CqkleIqs.js";import"./index-DoK7PxrN.js";import"./index-fNjTmf9T.js";let E={};const b={};class d{static generateId(){return`dropdown-${Math.random().toString(36).substr(2,9)}`}static isOpen(e){return E[e]||!1}static open(e){E[e]=!0,this.notifyListeners(e)}static close(e){delete E[e],this.notifyListeners(e)}static closeAll(){E={},Object.values(b).flat().forEach(e=>e())}static getOpenedDropdowns(){return Object.keys(E)}static getParentDropdownId(e){const o=e.split("-");return o.length<=2?null:(o.pop(),o.join("-"))}static closeSubMenus(e){Object.keys(E).filter(a=>a.startsWith(e)&&a!==e).forEach(a=>d.close(a))}static subscribe(e,o){return b[e]||(b[e]=[]),b[e].push(o),()=>{b[e]=b[e].filter(s=>s!==o)}}static notifyListeners(e){var o;(o=b[e])==null||o.forEach(s=>s())}}const W=l.createContext(void 0),se=({dropdownId:n,closeRoot:e,autoClose:o=!0,children:s})=>t.jsx(W.Provider,{value:{dropdownId:n,closeRoot:e,autoClose:o},children:s});se.__docgenInfo={description:"",methods:[],displayName:"DropdownContextProvider",props:{dropdownId:{required:!0,tsType:{name:"string"},description:""},autoClose:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},closeRoot:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""}}};const Ie="_trigger_1n20h_3",ye="_dropdown_1n20h_14",H={trigger:Ie,dropdown:ye,"dropdown-items":"_dropdown-items_1n20h_39"},be=n=>{var s;const e=re(n),o=e.findIndex(a=>a===document.activeElement);o<e.length-1?e[o+1].focus():(s=e[0])==null||s.focus()},ve=n=>{var s;const e=re(n),o=e.findIndex(a=>a===document.activeElement);o>0?e[o-1].focus():(s=e[e.length-1])==null||s.focus()},De=n=>{var o;const e=document.querySelector(`[data-dropdown-id='${n}']`);e&&((o=(e==null?void 0:e.querySelectorAll('li[role="menuitem"]'))[0])==null||o.focus())},je=n=>{var s;const e=d.getParentDropdownId(n),o=document.querySelector(`[data-dropdown-id='${e}']`);(s=o==null?void 0:o.querySelector("[data-active=true]"))==null||s.focus()},re=n=>{const e=n==null?void 0:n.querySelectorAll('li[role="menuitem"]');return e?Array.from(e):[]},ae=n=>{const e=l.useRef(n||d.generateId()),[o,s]=l.useState(!1);l.useEffect(()=>d.subscribe(e.current,()=>{s(d.isOpen(e.current))}),[]);const a=()=>{d.open(e.current)},c=()=>{d.close(e.current)},I=()=>{o?c():a()};return{dropdownId:e.current,isOpen:o,open:a,close:c,toggle:I}},N=l.forwardRef(({trigger:n,className:e,style:o,dropdownId:s,hasParent:a,position:c="bottom",autoClose:I=!0,isOpen:p=!1,onClose:O=()=>{},children:w,...F},h)=>{const{dropdownId:D}=ae(s),[j,R]=l.useState(c),{closeRoot:C}=l.useContext(W)||{},S=l.useRef(null),_=l.useRef(null),[g,k]=l.useState(null),[y,u]=l.useState(null),[X,z]=l.useState({top:500,left:500}),{shouldRender:le,isAnimating:ie}=ge(p,150),de=l.useCallback(r=>{_.current=r,k(r),typeof h=="function"?h(r):h&&(h.current=r)},[h]),ce=l.useCallback(r=>{S.current=r,u(r)},[]),A=l.useCallback(()=>{a&&C?C():O(),d.closeAll()},[C,a,O]),pe=r=>{if(r.key===K||r.key===Y){if(r.stopPropagation(),r.preventDefault(),g===null)return;r.key===K?be(g):ve(g)}r.key===B&&A()},{onKeyDown:ue,onKeyUp:me}=ne({onKeyUp:pe},{interactiveKeyCodes:[U,$,V,K,Y,B]});l.useEffect(()=>{const r=m=>{var T;const f=m.target,x=document.querySelectorAll("[data-dropdown-id]");console.log(x),console.log("event target : ",m.target),console.log(Array.from(x).some(P=>P.contains(f))),Array.from(x).some(P=>P.contains(f))||((T=S.current)==null?void 0:T.contains(f))||A()};return document.addEventListener("mousedown",r),()=>document.removeEventListener("mousedown",r)},[A]),l.useEffect(()=>{p&&(!y||!g||(a?fe(y,g):we(y,g,c)))},[p,a,g,y,c]);const fe=(r,m)=>{const f=G(r,m,"right",0,!0),x=J(r,m,f),M=Q(f,r,m,0,x);R(f),z(M)},we=(r,m,f)=>{const x=f==="auto"?G(r,m,"bottom"):f,M=J(r,m,x),T=Q(x,r,m,0,M);R(x),z(T)};return t.jsxs(se,{dropdownId:D,closeRoot:A,autoClose:I,children:[t.jsx("div",{ref:ce,className:H.trigger,children:n}),le&&t.jsx(xe,{children:t.jsx("div",{className:he(H.dropdown,e),"data-dropdown-id":D,"data-position":j,"data-open":ie||void 0,...F,style:{...o,top:X.top,left:X.left},ref:de,onKeyUp:me,onKeyDown:ue,children:t.jsx("ul",{className:H["dropdown-items"],role:"menu",children:w})})})]})});N.__docgenInfo={description:"",methods:[],displayName:"Dropdown",props:{trigger:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},position:{defaultValue:{value:'"bottom"',computed:!1},required:!1},autoClose:{defaultValue:{value:"true",computed:!1},required:!1},isOpen:{defaultValue:{value:"false",computed:!1},required:!1},onClose:{defaultValue:{value:"() => {}",computed:!1},required:!1}},composes:["CoreDropdownProps"]};const v={"dropdown-item":"_dropdown-item_h8tgc_3","dropdown-divider":"_dropdown-divider_h8tgc_40"},i=({label:n,leftIcon:e,trailingText:o,disabled:s,hasSeparator:a,hasIndent:c,children:I,onClick:p,...O})=>{const{dropdownId:w,autoClose:F,closeRoot:h}=l.useContext(W)||{},D=`${w}-${n&&n.replace(/\s+/g,"")}`,{isOpen:j,open:R}=ae(D),C=()=>{w&&(d.closeSubMenus(w),R())},S=()=>{w&&d.closeSubMenus(w)};c&&e&&console.warn(`DropdownItem: 'hasIndent' prop is ignored when 'leftIcon' is provided : displaying icon '${e}' for dropdownitem with label '${n}' without indentation.`);const _=u=>{s||(p&&(p==null||p(u)),F&&h&&h())},g=u=>{if(u.preventDefault(),u.key===V&&(j&&De(D),u.shiftKey&&w&&je(w)),u.key===$||u.key===U){if(s)return;p&&_(u),I&&R()}},{onKeyUp:k,onFocus:y}=ne({onKeyUp:g,onFocus:S},{interactiveKeyCodes:[U,$,V,K,Y,B]});return I?t.jsx(N,{hasParent:!0,dropdownId:D,isOpen:j,trigger:t.jsxs(t.Fragment,{children:[t.jsxs("li",{className:v["dropdown-item"],"data-active":j,"data-disabled":s,role:"menuitem",onMouseOver:C,onKeyUp:k,onFocus:y,tabIndex:0,children:[c&&t.jsx("span",{style:{width:"20px"}}),e&&t.jsx(q,{name:e,className:v["dropdown-item-icon"],appearance:j?"filled":"outlined"}),t.jsx("span",{style:{flex:"2"},children:n}),t.jsx(q,{name:"arrow-chevron-right",className:v["dropdown-item-icon"]})]}),a&&t.jsx("div",{className:v["dropdown-divider"],children:t.jsx(Z,{})})]}),children:I}):t.jsxs(t.Fragment,{children:[t.jsxs("li",{className:v["dropdown-item"],"data-disabled":s,role:"menuitem",onClick:_,onMouseOver:C,onKeyUp:k,onFocus:y,tabIndex:0,...O,children:[c&&!e&&t.jsx("span",{style:{width:"20px"}}),e&&t.jsx(q,{name:e,className:v["dropdown-item-icon"]}),t.jsx("span",{style:{flex:"2"},children:n}),o&&t.jsx("div",{children:o})]}),a&&t.jsx("div",{className:v["dropdown-divider"],children:t.jsx(Z,{})})]})};i.__docgenInfo={description:"",methods:[],displayName:"DropdownItem",props:{onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: React.MouseEvent<HTMLLIElement> | React.KeyboardEventHandler<HTMLLIElement>) => void",signature:{arguments:[{type:{name:"union",raw:"React.MouseEvent<HTMLLIElement> | React.KeyboardEventHandler<HTMLLIElement>",elements:[{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLLIElement>",elements:[{name:"HTMLLIElement"}]},{name:"ReactKeyboardEventHandler",raw:"React.KeyboardEventHandler<HTMLLIElement>",elements:[{name:"HTMLLIElement"}]}]},name:"event"}],return:{name:"void"}}},description:""}},composes:["Omit"]};const Ne={title:"Dropdown (développement en cours)",component:N,args:{}},L={args:{},render:n=>{const[e,o]=l.useState(!1);return t.jsxs(t.Fragment,{children:[t.jsx("div",{children:t.jsx("span",{style:{fontFamily:"sans-serif",marginBottom:16,border:"1px solid #F4922B",padding:8,borderRadius:5,backgroundColor:"#FAFFC1",margin:0},children:"Ce composant est en cours de développement et n'est pas encore disponible"})}),t.jsx("br",{}),t.jsx("div",{style:{position:"relative",width:"800px",height:"200px",display:"flex",justifyContent:"space-between",gap:"500px"},children:t.jsxs(N,{...n,onClose:()=>{o(!1)},trigger:t.jsx("button",{onClick:()=>o(!0),style:{color:"black"},children:"Click Me!"}),style:{width:"250px"},isOpen:e,children:[t.jsx(i,{label:"Messages",leftIcon:"mail",hasSeparator:!0,onClick:()=>console.log("click")}),t.jsxs(i,{label:"Actions",leftIcon:"settings",children:[t.jsxs(i,{label:"Edit",leftIcon:"edit",children:[t.jsx(i,{label:"Cut",leftIcon:"cut",trailingText:"⌘X"}),t.jsx(i,{label:"Copy",leftIcon:"copy",trailingText:"⌘X",onClick:()=>console.log("click")}),t.jsx(i,{label:"Paste",leftIcon:"paste",trailingText:"⌘V"})]}),t.jsx(i,{label:"Archive",leftIcon:"archive"}),t.jsx(i,{label:"Delete",leftIcon:"delete"})]}),t.jsx(i,{label:"Help",leftIcon:"help"}),t.jsx(i,{label:"More information",leftIcon:"info",hasSeparator:!0}),t.jsx(i,{label:"First option",hasIndent:!0}),t.jsx(i,{label:"Second option",hasIndent:!0}),t.jsx(i,{label:"Third option",hasSeparator:!0,hasIndent:!0}),t.jsx(i,{label:"Username",leftIcon:"user-circle",disabled:!0})]})})]})}};var ee,te,oe;L.parameters={...L.parameters,docs:{...(ee=L.parameters)==null?void 0:ee.docs,source:{originalSource:`{
  args: {},
  render: args => {
    const [isOpen, setIsOpen] = useState<boolean>(false);
    return <>
        <div>
          <span style={{
          fontFamily: "sans-serif",
          marginBottom: 16,
          border: "1px solid #F4922B",
          padding: 8,
          borderRadius: 5,
          backgroundColor: "#FAFFC1",
          margin: 0
        }}>
            Ce composant est en cours de développement et n'est pas encore disponible
          </span>
        </div>
        <br />

        <div style={{
        position: "relative",
        width: "800px",
        height: "200px",
        display: "flex",
        justifyContent: "space-between",
        gap: "500px"
      }}>
          <Dropdown {...args} onClose={() => {
          setIsOpen(false);
        }} trigger={<button onClick={() => setIsOpen(true)} style={{
          color: "black"
        }}>
                Click Me!
              </button>} style={{
          width: "250px"
        }} isOpen={isOpen}>
            <DropdownItem label="Messages" leftIcon="mail" hasSeparator onClick={() => console.log("click")} />
            <DropdownItem label="Actions" leftIcon="settings">
              <DropdownItem label="Edit" leftIcon="edit">
                <DropdownItem label="Cut" leftIcon="cut" trailingText="⌘X" />
                <DropdownItem label="Copy" leftIcon="copy" trailingText="⌘X" onClick={() => console.log("click")} />
                <DropdownItem label="Paste" leftIcon="paste" trailingText="⌘V" />
              </DropdownItem>
              <DropdownItem label="Archive" leftIcon="archive" />
              <DropdownItem label="Delete" leftIcon="delete" />
            </DropdownItem>
            <DropdownItem label="Help" leftIcon="help" />
            <DropdownItem label="More information" leftIcon="info" hasSeparator />
            <DropdownItem label="First option" hasIndent />
            <DropdownItem label="Second option" hasIndent />
            <DropdownItem label="Third option" hasSeparator hasIndent />
            <DropdownItem label="Username" leftIcon="user-circle" disabled />
          </Dropdown>
        </div>
      </>;
  }
}`,...(oe=(te=L.parameters)==null?void 0:te.docs)==null?void 0:oe.source}}};const Fe=["Default"];export{L as Default,Fe as __namedExportsOrder,Ne as default};
