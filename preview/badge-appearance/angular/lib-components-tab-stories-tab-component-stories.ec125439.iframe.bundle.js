(self.webpackChunk_design_system_rte_angular_builder=self.webpackChunk_design_system_rte_angular_builder||[]).push([[40855],{"./projects/ds-rte-lib/src/lib/components/tab/stories/tab.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,IconsOnly:()=>IconsOnly,KeyboardInteraction:()=>KeyboardInteraction,OverflowType:()=>OverflowType,Vertical:()=>Vertical,WithBadge:()=>WithBadge,WithIcons:()=>WithIcons,__namedExportsOrder:()=>__namedExportsOrder,default:()=>tab_component_stories});var asyncToGenerator=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"),keyboard_test_constants=__webpack_require__("../core/constants/keyboard/keyboard-test.constants.ts"),dist=__webpack_require__("../../node_modules/@storybook/test/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var tab_componentngResource=__webpack_require__("./projects/ds-rte-lib/src/lib/components/tab/tab.component.scss?ngResource"),tab_componentngResource_default=__webpack_require__.n(tab_componentngResource),common=__webpack_require__("../../node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("../../node_modules/@angular/core/fesm2022/core.mjs");const isHiddenByOverflow=(target,container,scrollDirection)=>{if(container&&target){const containerClientRect=container.getBoundingClientRect(),targetClientRect=target.getBoundingClientRect(),isHiddenLeft=targetClientRect.left<containerClientRect.left,isHiddenRight=targetClientRect.right>containerClientRect.right,isHiddenTop=targetClientRect.top<containerClientRect.top,isHiddenBottom=targetClientRect.bottom>containerClientRect.bottom;return"horizontal"===scrollDirection?isHiddenLeft||isHiddenRight:isHiddenTop||isHiddenBottom}return!1},computeHorizontalScroll=(targetClientRect,containerClientRect)=>{const overflowLeft=targetClientRect.left<containerClientRect.left,overflowRight=targetClientRect.right>containerClientRect.right;return overflowLeft?targetClientRect.left-containerClientRect.left:overflowRight?targetClientRect.right-containerClientRect.right:0},computeVerticalScroll=(targetClientRect,containerClientRect)=>{const overflowTop=targetClientRect.top<containerClientRect.top,overflowBottom=targetClientRect.bottom>containerClientRect.bottom;return overflowTop?targetClientRect.top-containerClientRect.top:overflowBottom?targetClientRect.bottom-containerClientRect.bottom:0};var keyboard_constants=__webpack_require__("../core/constants/keyboard/keyboard.constants.ts"),badge_component=__webpack_require__("./projects/ds-rte-lib/src/lib/components/badge/badge.component.ts"),dropdown_module=__webpack_require__("./projects/ds-rte-lib/src/lib/components/dropdown/dropdown.module.ts"),icon_component=__webpack_require__("./projects/ds-rte-lib/src/lib/components/icon/icon.component.ts"),icon_button_component=__webpack_require__("./projects/ds-rte-lib/src/lib/components/icon-button/icon-button.component.ts");var tab_item_componentngResource=__webpack_require__("./projects/ds-rte-lib/src/lib/components/tab/tab-item/tab-item.component.scss?ngResource"),tab_item_componentngResource_default=__webpack_require__.n(tab_item_componentngResource);let TabItemComponent=class TabItemComponent{constructor(){this.direction=(0,core.input)("horizontal"),this.option=(0,core.input)(),this.compactSpacing=(0,core.input)(),this.isSelected=(0,core.input)(!1),this.click=(0,core.output)(),this.handleKeydown=(0,core.input)(),this.inverted=(0,core.input)(!1),this.isHidden=(0,core.input)(!1),this.tabItemRef=(0,core.viewChild)("tabItem"),this.hoverIndicatorStyle=(0,core.signal)(null),this.displayBadge=option=>!!(option.badgeContent||option.badgeType||option.badgeIcon||option.badgeCount),this.hoverIndicatorWidth=(0,core.computed)(()=>`${this.hoverIndicatorStyle()?.width}px`),this.hoverIndicatorHeight=(0,core.computed)(()=>`${this.hoverIndicatorStyle()?.height}px`),this.hoverIndicatorLeft=(0,core.computed)(()=>`${this.hoverIndicatorStyle()?.left}px`),this.hoverIndicatorTop=(0,core.computed)(()=>`${this.hoverIndicatorStyle()?.top}px`),this.hoverIndicatorOpacity=(0,core.computed)(()=>this.hoverIndicatorStyle()?.opacity??0),this.computeHoverIndicatorStyle=()=>{"horizontal"===this.direction()?this.hoverIndicatorStyle.set({width:this.tabItemRef()?.nativeElement.offsetWidth,height:2,left:this.tabItemRef()?.nativeElement.offsetLeft,top:this.tabItemRef()?this.tabItemRef().nativeElement.offsetTop+this.tabItemRef().nativeElement.offsetHeight:0,opacity:0}):this.hoverIndicatorStyle.set({width:2,height:this.tabItemRef()?.nativeElement.offsetHeight,left:this.tabItemRef()?.nativeElement.offsetLeft&&this.tabItemRef().nativeElement.offsetLeft-4,top:this.tabItemRef().nativeElement.offsetTop,opacity:0})}}ngAfterViewInit(){if(this.computeHoverIndicatorStyle(),this.tabItemRef&&this.tabItemRef()?.nativeElement){if(this.option()?.disabled)return;window.addEventListener("resize",this.computeHoverIndicatorStyle);const parent=this.tabItemRef()?.nativeElement.parentElement?.parentElement;parent&&parent.addEventListener("scroll",this.computeHoverIndicatorStyle)}}ngOnDestroy(){const parent=this.tabItemRef()?.nativeElement.parentElement?.parentElement;window.removeEventListener("resize",this.computeHoverIndicatorStyle),parent&&parent.removeEventListener("scroll",this.computeHoverIndicatorStyle)}onClickTabItem(event,id){this.hoverIndicatorStyle.set({...this.hoverIndicatorStyle(),opacity:0}),this.option()?.disabled?event.stopPropagation():this.click.emit(id)}handleMouseHover(){this.isSelected()||this.hoverIndicatorStyle.set({...this.hoverIndicatorStyle(),opacity:1})}handleMouseOut(){this.hoverIndicatorStyle.set({...this.hoverIndicatorStyle(),opacity:0})}static{this.propDecorators={direction:[{type:core.Input,args:[{isSignal:!0,alias:"direction",required:!1,transform:void 0}]}],option:[{type:core.Input,args:[{isSignal:!0,alias:"option",required:!1,transform:void 0}]}],compactSpacing:[{type:core.Input,args:[{isSignal:!0,alias:"compactSpacing",required:!1,transform:void 0}]}],isSelected:[{type:core.Input,args:[{isSignal:!0,alias:"isSelected",required:!1,transform:void 0}]}],click:[{type:core.Output,args:["click"]}],handleKeydown:[{type:core.Input,args:[{isSignal:!0,alias:"handleKeydown",required:!1,transform:void 0}]}],inverted:[{type:core.Input,args:[{isSignal:!0,alias:"inverted",required:!1,transform:void 0}]}],isHidden:[{type:core.Input,args:[{isSignal:!0,alias:"isHidden",required:!1,transform:void 0}]}],tabItemRef:[{type:core.ViewChild,args:["tabItem",{isSignal:!0}]}]}}};TabItemComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"rte-tab-item",imports:[common.CommonModule,icon_component.R,badge_component.n],standalone:!0,template:'<button\n  #tabItem\n  class="rte-tabitem"\n  role="tab"\n  [id]="option()?.id"\n  [attr.aria-selected]="isSelected()"\n  [attr.aria-controls]="option()?.panelId"\n  [tabIndex]="isSelected() ? 0 : -1"\n  [attr.data-selected]="isSelected()"\n  [attr.data-inverted]="inverted()"\n  [attr.data-compact-spacing]="compactSpacing()"\n  [attr.data-disabled]="option()?.disabled"\n  [attr.data-hidden]="isHidden()"\n  (click)="onClickTabItem($event, option()?.id || \'\')"\n  (mouseover)="handleMouseHover()"\n  (mouseout)="handleMouseOut()"\n  (keydown)="handleKeydown()"\n>\n  <rte-icon\n    *ngIf="option()?.icon"\n    [name]="option()?.icon || \'\'"\n    [appearance]="isSelected() ? \'filled\' : \'outlined\'"\n  />\n  <span *ngIf="option()?.label">{{ option()?.label }}</span>\n  <rte-badge\n    *ngIf="displayBadge(option()!)"\n    [simpleBadge]="true"\n    [badgeContent]="option()?.badgeContent || \'empty\'"\n    [badgeType]="option()?.badgeType || \'neutral\'"\n    [icon]="option()?.badgeIcon || \'\'"\n    [count]="option()?.badgeCount"\n  />\n</button>\n<span\n  #hoverIndicator\n  class="rte-tab-hover-indicator"\n  [attr.data-disabled]="option()?.disabled"\n  [id]="\'tab-hover-indicator\' + option()?.id"\n  [ngStyle]="{\n    width: hoverIndicatorWidth(),\n    height: hoverIndicatorHeight(),\n    left: hoverIndicatorLeft(),\n    top: hoverIndicatorTop(),\n    opacity: hoverIndicatorOpacity(),\n  }"\n></span>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[tab_item_componentngResource_default()]})],TabItemComponent);let TabComponent=class TabComponent{constructor(){this.alignment=(0,core.input)("start"),this.direction=(0,core.input)("horizontal"),this.options=(0,core.input)([]),this.selectedTabId=(0,core.input)(),this.compactSpacing=(0,core.input)(!1),this.overflowType=(0,core.input)("scrollable"),this.inverted=(0,core.input)(!1),this.sliderLeft=(0,core.signal)(0),this.sliderWidth=(0,core.signal)(0),this.sliderTop=(0,core.signal)(0),this.sliderHeight=(0,core.signal)(0),this.tabItemRefs=(0,core.viewChildren)("tabItem"),this.containerRef=(0,core.viewChild)("tabList"),this.hoverIndicatorRefs=(0,core.viewChildren)("hoverIndicator"),this.selectedTabRef=(0,core.computed)(()=>{const idx=this.options().findIndex(opt=>opt.id===this.selectedTabId());return this.tabItemRefs()[idx]}),this.hoverIndicatorStyle=(0,core.signal)(null),this.change=(0,core.output)(),this.isScrollable=(0,core.signal)(!1),this.isOverflowingLeft=(0,core.signal)(!1),this.isOverflowingRight=(0,core.signal)(!1),this.isOverflowingTop=(0,core.signal)(!1),this.isOverflowingBottom=(0,core.signal)(!1),this.canScrollBackward=(0,core.computed)(()=>this.isOverflowingLeft()||this.isOverflowingTop()),this.canScrollForward=(0,core.computed)(()=>this.isOverflowingRight()||this.isOverflowingBottom()),this.isHorizontal=(0,core.computed)(()=>"horizontal"===this.direction()&&(this.isOverflowingRight()||this.isOverflowingLeft())),this.shouldDisplayDropdown=(0,core.computed)(()=>"dropdown"===this.overflowType()&&this.isHorizontal()),this.selectedTab=(0,core.computed)(()=>this.options().find(option=>option.id===this.selectedTabId())),this.dropdownFilteredOptions=(0,core.computed)(()=>this.options().filter(option=>option.id!==this.selectedTabId())),this.displayBadge=option=>!!option.showBadge||void 0!==option.badgeCount&&option.badgeCount>0&&"number"===option.badgeContent||"icon"===option.badgeContent&&!!option.badgeIcon,this.tabItemSelectedIndicatorStyle=(0,core.computed)(()=>({left:`${this.shouldDisplayDropdown()?0:this.sliderLeft()}px`,top:`${this.sliderTop()}px`,width:`${this.sliderWidth()+(this.shouldDisplayDropdown()?32:0)}px`,height:`${this.sliderHeight()}px`})),this.onKeydownTabItem=event=>{const isVertical="vertical"===this.direction(),isDownKeyPressed=isVertical&&event.key===keyboard_constants.tt,isUpKeyPressed=isVertical&&event.key===keyboard_constants.M0,isRightKeyPressed=!isVertical&&event.key===keyboard_constants.Zh,isLeftKeyPressed=!isVertical&&event.key===keyboard_constants.ST,isArrowNext=isDownKeyPressed||isRightKeyPressed;(isArrowNext||(isUpKeyPressed||isLeftKeyPressed))&&(event.preventDefault(),this.focusItem(isArrowNext?"next":"previous"))},this.onClickTabItem=event=>{if(event.id!==this.selectedTabId()&&(this.change.emit(event.id),!this.shouldDisplayDropdown())){const newTab=this.getTabItem(event.id)?.tabItemRef()?.nativeElement;if(newTab){const container=this.containerRef()?.nativeElement;container&&((target,container,scrollDirection)=>{if(!isHiddenByOverflow(target,container,scrollDirection))return;const containerClientRect=container.getBoundingClientRect(),targetClientRect=target.getBoundingClientRect();if("horizontal"===scrollDirection){const newScroll=container.scrollLeft+computeHorizontalScroll(targetClientRect,containerClientRect);container.scrollTo({left:newScroll,behavior:"smooth"})}else{const newScroll=container.scrollTop+computeVerticalScroll(targetClientRect,containerClientRect);container.scrollTo({top:newScroll,behavior:"smooth"})}})(newTab,container,this.direction())}}},this.getTabItem=id=>this.tabItemRefs().find(tab=>tab.option()?.id===id),this.focusItem=direction=>{const currentIndex=this.tabItemRefs().findIndex(tab=>tab===this.selectedTabRef()),maxIterations=this.tabItemRefs().length;let newIndex=this.computeNextItemIndex(currentIndex,maxIterations,direction),counter=0;for(;"true"===this.tabItemRefs()[newIndex].tabItemRef()?.nativeElement.getAttribute("data-disabled")&&counter<maxIterations;)newIndex=this.computeNextItemIndex(newIndex,maxIterations,direction),counter++;this.tabItemRefs()[newIndex].tabItemRef()?.nativeElement.focus(),this.tabItemRefs()[newIndex].tabItemRef()?.nativeElement.click()},this.computeScrollableSignals=()=>{this.computeIsScrollable(),this.computeIsOverflowingLeft(),this.computeIsOverflowingRight(),this.computeIsOverflowingTop(),this.computeIsOverflowingBottom()}}isSelected(id){return this.selectedTabId()===id}ngAfterViewInit(){this.updateSelectedTabItemIndicator(),this.computeScrollableSignals(),window.addEventListener("resize",this.updateSelectedTabItemIndicator.bind(this)),window.addEventListener("resize",this.computeScrollableSignals.bind(this)),this.containerRef()&&this.containerRef()?.nativeElement.addEventListener("scroll",this.computeScrollableSignals.bind(this)),this.hoverIndicatorRefs().forEach(hoverIndicator=>{hoverIndicator.nativeElement.style.opacity="0"})}ngOnDestroy(){window.removeEventListener("resize",this.updateSelectedTabItemIndicator.bind(this)),window.removeEventListener("resize",this.computeScrollableSignals.bind(this)),this.containerRef()&&this.containerRef()?.nativeElement.removeEventListener("scroll",this.computeScrollableSignals.bind(this))}ngOnChanges(changes){changes.selectedTabId&&this.updateSelectedTabItemIndicator()}scrollBackward(){if(this.containerRef()?.nativeElement){const scrollObject="horizontal"===this.direction()?{left:-300}:{top:-300};this.containerRef()?.nativeElement.scrollBy({...scrollObject,behavior:"smooth"})}}scrollForward(){if(this.containerRef()&&this.containerRef()?.nativeElement){const scrollObject="horizontal"===this.direction()?{left:300}:{top:300};this.containerRef()?.nativeElement.scrollBy({...scrollObject,behavior:"smooth"})}}computeNextItemIndex(currentIndex,totalItems,direction){return"next"===direction?(currentIndex+1)%totalItems:(currentIndex-1+totalItems)%totalItems}computeIndicatorStyle(tabItem){return"horizontal"===this.direction()?{width:tabItem.offsetWidth,left:tabItem.offsetLeft,top:tabItem.offsetTop+tabItem.offsetHeight}:{left:0,top:tabItem.offsetTop,height:tabItem.offsetHeight,width:2}}updateSelectedTabItemIndicator(){const idx=this.options().findIndex(opt=>opt.id===this.selectedTabId()),tabItem=this.tabItemRefs()[idx];if(tabItem?.tabItemRef){if(tabItem.option()?.disabled)return;const tabItemRef=tabItem.tabItemRef?.();if(tabItemRef&&tabItemRef.nativeElement){const tabItemElement=tabItemRef.nativeElement,indicatorStyle=this.computeIndicatorStyle(tabItemElement);this.sliderHeight.set(indicatorStyle.height??2),this.sliderTop.set(indicatorStyle.top),this.sliderWidth.set(indicatorStyle.width??2),this.sliderLeft.set(indicatorStyle.left)}}}computeIsScrollable(){if(this.containerRef()?.nativeElement){const containerNativeElement=this.containerRef()?.nativeElement;containerNativeElement&&this.isScrollable.set(containerNativeElement.offsetWidth<containerNativeElement.scrollWidth||containerNativeElement.offsetHeight<containerNativeElement.scrollHeight)}return!1}computeIsOverflowingLeft(){const containerNativeElement=this.containerRef()?.nativeElement;if(containerNativeElement){const isOverFlowingLeft=containerNativeElement.scrollLeft>0;this.isOverflowingLeft.set(this.isScrollable()&&isOverFlowingLeft)}}computeIsOverflowingRight(){const containerNativeElement=this.containerRef()?.nativeElement;if(containerNativeElement){const isOverflowingRight=containerNativeElement.scrollWidth-containerNativeElement.clientWidth-containerNativeElement.scrollLeft>0;this.isOverflowingRight.set(this.isScrollable()&&isOverflowingRight)}}computeIsOverflowingTop(){const containerNativeElement=this.containerRef()?.nativeElement;if(containerNativeElement){const isOverFlowingTop=containerNativeElement.scrollTop>0;this.isOverflowingTop.set(this.isScrollable()&&isOverFlowingTop)}}computeIsOverflowingBottom(){const containerNativeElement=this.containerRef()?.nativeElement;if(containerNativeElement){const isOverflowingBottom=containerNativeElement.scrollHeight-containerNativeElement.clientHeight-containerNativeElement.scrollTop>0;this.isOverflowingBottom.set(this.isScrollable()&&isOverflowingBottom)}}static{this.propDecorators={alignment:[{type:core.Input,args:[{isSignal:!0,alias:"alignment",required:!1,transform:void 0}]}],direction:[{type:core.Input,args:[{isSignal:!0,alias:"direction",required:!1,transform:void 0}]}],options:[{type:core.Input,args:[{isSignal:!0,alias:"options",required:!1,transform:void 0}]}],selectedTabId:[{type:core.Input,args:[{isSignal:!0,alias:"selectedTabId",required:!1,transform:void 0}]}],compactSpacing:[{type:core.Input,args:[{isSignal:!0,alias:"compactSpacing",required:!1,transform:void 0}]}],overflowType:[{type:core.Input,args:[{isSignal:!0,alias:"overflowType",required:!1,transform:void 0}]}],inverted:[{type:core.Input,args:[{isSignal:!0,alias:"inverted",required:!1,transform:void 0}]}],tabItemRefs:[{type:core.ViewChildren,args:["tabItem",{isSignal:!0}]}],containerRef:[{type:core.ViewChild,args:["tabList",{isSignal:!0}]}],hoverIndicatorRefs:[{type:core.ViewChildren,args:["hoverIndicator",{isSignal:!0}]}],change:[{type:core.Output,args:["change"]}]}}};TabComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"rte-tab",imports:[common.CommonModule,TabItemComponent,icon_button_component.x,dropdown_module.k,icon_component.R,badge_component.n],standalone:!0,template:'<div class="rte-tab-container" [attr.data-direction]="direction()">\n  <div\n    class="rte-tab-border-vertical"\n    aria-hidden="true"\n    role="presentation"\n    [attr.data-direction]="direction()"\n  ></div>\n  <div\n    [ngStyle]="{\n      position: \'relative\',\n      display: \'flex\',\n      \'align-items\': \'center\',\n      \'flex-direction\': direction() === \'horizontal\' ? \'row\' : \'column\',\n    }"\n  >\n    <rte-icon-button\n      *ngIf="isScrollable() && !shouldDisplayDropdown()"\n      aria-label="Previous tabs"\n      variant="transparent"\n      [name]="\n        direction() === \'horizontal\' ? \'arrow-chevron-left\' : \'arrow-chevron-up\'\n      "\n      [ngStyle]="{\n        opacity: canScrollBackward() ? \'1\' : \'0\',\n        \'pointer-events\': canScrollBackward() ? \'auto\' : \'none\',\n      }"\n      (click)="scrollBackward()"\n    />\n    <div\n      #tabList\n      role="tablist"\n      aria-label="Sample Tabs"\n      class="rte-tab"\n      [attr.data-alignment]="shouldDisplayDropdown() ? \'start\' : alignment()"\n      [attr.data-direction]="direction()"\n      [attr.data-overflow-type]="overflowType()"\n    >\n      <span\n        class="rte-tab-selected-indicator"\n        [ngStyle]="tabItemSelectedIndicatorStyle()"\n      ></span>      \n      <div *ngIf="shouldDisplayDropdown() && options().length" rteDropdown [rteDropdownOffset]="10" (menuEvent)="onClickTabItem($event)">\n        <button rteDropdownTrigger\n          class="rte-tab-dropdown-button"\n          [attr.data-inverted]="inverted()"\n          [attr.data-overflow-type]="overflowType()" \n        >\n          <rte-icon *ngIf="selectedTab()?.icon" appearance="filled" [name]="selectedTab()?.icon!"></rte-icon>\n          <span *ngIf="selectedTab()?.label">{{ selectedTab()?.label }}</span>\n          <rte-badge *ngIf="selectedTab()?.badgeCount && selectedTab()?.badgeContent === \'number\'" [badgeType]="selectedTab()?.badgeType!" [badgeContent]="selectedTab()?.badgeContent!" [count]="selectedTab()?.badgeCount" [simpleBadge]="true"></rte-badge>\n          <rte-icon name="arrow-chevron-down" appearance="outlined"></rte-icon>\n        </button>\n        <rte-dropdown-menu [items]="dropdownFilteredOptions()" />\n      </div>\n      <ng-container *ngFor="let option of options(); let idx = index">\n        <rte-tab-item\n          #tabItem\n          [option]="option"\n          [direction]="direction()"\n          [compactSpacing]="compactSpacing()"\n          [isSelected]="isSelected(option.id)"\n          [inverted]="inverted()"\n          [attr.data-hidden]="shouldDisplayDropdown()"\n          [isHidden]="shouldDisplayDropdown()"\n          (keydown)="onKeydownTabItem($event)"\n          (click)="onClickTabItem(option.id)"\n        ></rte-tab-item>\n      </ng-container>\n    </div>\n    <rte-icon-button\n      *ngIf="isScrollable() && !shouldDisplayDropdown()"\n      aria-label="Next tabs"\n      variant="transparent"\n      [name]="\n        direction() === \'horizontal\'\n          ? \'arrow-chevron-right\'\n          : \'arrow-chevron-down\'\n      "\n      [ngStyle]="{\n        opacity: canScrollForward() ? \'1\' : \'0\',\n        \'pointer-events\': canScrollForward() ? \'auto\' : \'none\',\n      }"\n      (click)="scrollForward()"\n    />\n  </div>\n  <div\n    class="rte-tab-border-horizontal"\n    aria-hidden="true"\n    role="presentation"\n    [attr.data-direction]="direction()"\n    [attr.data-compact-spacing]="compactSpacing()"\n    [attr.data-scrollable]="isScrollable() && overflowType() === \'scrollable\'"\n  ></div>\n</div>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[tab_componentngResource_default()]})],TabComponent);const tab_component_stories={title:"Tab",component:TabComponent,tags:["autodocs"],argTypes:{options:{control:"object"},alignment:{control:"select",options:["start","center"]},direction:{control:"select",options:["horizontal","vertical"]},selectedTabId:{control:"text"},compactSpacing:{control:"boolean"},inverted:{control:"boolean"},overflowType:{control:"select",options:["scrollable","dropdown"]}}},Default={args:{options:[{id:"tab-1",label:"First Tab",panelId:"panel-1"},{id:"tab-2",label:"Second Tab",panelId:"panel-2"},{id:"tab-3",label:"Third Tab",panelId:"panel-3"}],selectedTabId:"tab-1",alignment:"start",compactSpacing:!1,direction:"horizontal",inverted:!1,overflowType:"scrollable"},render:args=>({props:{...args,change(id){this.selectedTabId=id}},template:'\n    <div>\n      <div style="height: 100%; padding: 16px">\n        <span style="font-family: Arial">Normal</span>\n        <rte-tab\n        [options]="options"\n        [selectedTabId]="selectedTabId"\n        (change)="change($event)"\n        [direction]="direction"\n        [alignment]="alignment"\n        [compactSpacing]="compactSpacing"\n        [inverted]="inverted"\n        [overflowType]="overflowType"\n        />\n      </div>\n      <div style="height: 100%; padding: 16px;  background-color: var(--background-inverse)">\n        <span style="color: var(--content-primary-inverse); font-family: Arial">Inverted</span>\n        <rte-tab\n        [options]="options"\n        [selectedTabId]="selectedTabId"\n        (change)="change($event)"\n        [direction]="direction"\n        [alignment]="alignment"\n        [compactSpacing]="compactSpacing"\n        [inverted]="true"\n        [overflowType]="overflowType"\n        />\n      </div>\n      <div style="height: 100px; border: 1px solid #ccc; padding: 8px; marginTop: 64px">\n          <div [hidden]="selectedTabId !== \'tab-1\'" id="panel-1">\n            Content for First Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-2\'" id="panel-2">\n            Content for Second Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-3\'" id="panel-3">\n            Content for Third Tab\n          </div>\n        </div>\n    </div>\n    '})},Vertical={args:{...Default.args,options:[{id:"tab-1",label:"First Tab",panelId:"panel-1"},{id:"tab-2",label:"Second Tab",panelId:"panel-2"},{id:"tab-3",label:"Third Tab",panelId:"panel-3"}],selectedTabId:"tab-1",alignment:"start",direction:"vertical"},render:args=>({props:{...args,change(id){console.log("Tab changed to:",id),this.selectedTabId=id}},template:'\n    <div style="display: flex; gap: 16px; height: 200px">\n      <rte-tab\n        [options]="options"\n        [selectedTabId]="selectedTabId"\n        (change)="change($event)"\n        [direction]="direction"\n        [alignment]="alignment"\n        [compactSpacing]="compactSpacing"\n        [inverted]="inverted"\n        [overflowType]="overflowType"\n        />\n        <div style="width: 100%; border: 1px solid #ccc; padding: 8px">\n          <div [hidden]="selectedTabId !== \'tab-1\'" id="panel-1">\n            Content for First Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-2\'" id="panel-2">\n            Content for Second Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-3\'" id="panel-3">\n            Content for Third Tab\n          </div>\n        </div>\n    </div>\n    '})},WithIcons={args:{options:[{id:"photos",label:"Photos",panelId:"panel-1",icon:"photo-camera"},{id:"videos",label:"Vidéos",panelId:"panel-2",icon:"video-camera"},{id:"musique",label:"Musique",panelId:"panel-3",icon:"headphones"}],selectedTabId:"photos",alignment:"start",compactSpacing:!1,direction:"horizontal"},render:args=>({props:{...args,change(id){this.selectedTabId=id}},template:'\n    <div>\n      <rte-tab\n        [options]="options"\n        [selectedTabId]="selectedTabId"\n        (change)="change($event)"\n        [direction]="direction"\n        [alignment]="alignment"\n        [compactSpacing]="compactSpacing"\n        [inverted]="inverted"\n        [overflowType]="overflowType"\n        />\n        <div style="height: 100px; border: 1px solid #ccc; padding: 8px; marginTop: 16px">\n          <div [hidden]="selectedTabId !== \'photos\'" id="panel-1">\n            Content for First Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'videos\'" id="panel-2">\n            Content for Second Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'musique\'" id="panel-3">\n            Content for Third Tab\n          </div>\n        </div>\n    </div>\n    '})},IconsOnly={args:{options:[{id:"home",panelId:"panel-1",icon:"home"},{id:"bookmarks",panelId:"panel-2",icon:"bookmarks"},{id:"chat",panelId:"panel-3",icon:"chat"},{id:"settings",panelId:"panel-3",icon:"settings"}],selectedTabId:"home",alignment:"start",compactSpacing:!1,direction:"horizontal"},render:args=>({props:{...args,change(id){this.selectedTabId=id}},template:'\n    <div>\n      <rte-tab\n        [options]="options"\n        [selectedTabId]="selectedTabId"\n        (change)="change($event)"\n        [direction]="direction"\n        [alignment]="alignment"\n        [compactSpacing]="compactSpacing"\n        [inverted]="inverted"\n        [overflowType]="overflowType"\n        />\n        <div style="height: 100px; border: 1px solid #ccc; padding: 8px; marginTop: 16px">\n          <div [hidden]="selectedTabId !== \'home\'" id="panel-1">\n            Content for First Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'bookmarks\'" id="panel-2">\n            Content for Second Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'chat\'" id="panel-3">\n            Content for Third Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'settings\'" id="panel-3">\n            Content for Fourth Tab\n          </div>\n        </div>\n    </div>\n    '})},WithBadge={args:{options:[{id:"photos",label:"Photos",panelId:"panel-1",icon:"photo-camera",badgeCount:5,badgeContent:"number",badgeType:"indicator",showBadge:!0},{id:"videos",label:"Vidéos",panelId:"panel-2",icon:"video-camera"},{id:"musique",label:"Musique",panelId:"panel-3",icon:"headphones"}],selectedTabId:"photos",alignment:"start",compactSpacing:!1,direction:"horizontal"},render:args=>({props:{...args,change(id){this.selectedTabId=id}},template:'\n    <div>\n      <rte-tab\n        [options]="options"\n        [selectedTabId]="selectedTabId"\n        (change)="change($event)"\n        [direction]="direction"\n        [alignment]="alignment"\n        [compactSpacing]="compactSpacing"\n        [inverted]="inverted"\n        [overflowType]="overflowType"\n        />\n        <div style="height: 100px; border: 1px solid #ccc; padding: 8px; marginTop: 16px">\n          <div [hidden]="selectedTabId !== \'photos\'" id="panel-1">\n            Content for First Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'videos\'" id="panel-2">\n            Content for Second Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'musique\'" id="panel-3">\n            Content for Third Tab\n          </div>\n        </div>\n    </div>\n    '})},OverflowType={args:{options:[{id:"tab-1",label:"First Tab",panelId:"panel-1"},{id:"tab-2",label:"Second Tab",panelId:"panel-2"},{id:"tab-3",label:"Third Tab",panelId:"panel-3"},{id:"tab-4",label:"Fourth Tab",panelId:"panel-4",disabled:!0},{id:"tab-5",label:"Fifth Tab",panelId:"panel-5"}],selectedTabId:"tab-1",alignment:"start",compactSpacing:!1,direction:"horizontal",overflowType:"scrollable"},render:args=>({props:{...args,change(id){this.selectedTabId=id}},template:'\n    <div style="display: flex; flexDirection: column; gap: 32px">\n      <div style="width: 400px">\n        <span style="font-family: Arial">Scrollable</span>\n        <rte-tab\n          [options]="options"\n          [selectedTabId]="selectedTabId"\n          (change)="change($event)"\n          [direction]="direction"\n          [alignment]="alignment"\n          [compactSpacing]="compactSpacing"\n          [overflowType]="overflowType"\n          [inverted]="inverted"\n        />\n        <div style="height: 100px; border: 1px solid #ccc; padding: 8px; marginTop: 16px">\n          <div [hidden]="selectedTabId !== \'tab-1\'" id="panel-1">\n            Content for First Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-2\'" id="panel-2">\n            Content for Second Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-3\'" id="panel-3">\n            Content for Third Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-4\'" id="panel-4">\n            Content for Fourth Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-5\'" id="panel-5">\n            Content for Fifth Tab\n          </div>\n        </div>\n      </div>\n      <div style="width: 400px">\n        <span style="font-family: Arial">Dropdown</span>\n        <rte-tab\n          [options]="options"\n          [selectedTabId]="selectedTabId"\n          (change)="change($event)"\n          [direction]="direction"\n          [alignment]="alignment"\n          [compactSpacing]="compactSpacing"\n          [overflowType]="\'dropdown\'"\n          [inverted]="inverted"\n        />\n        <div style="height: 100px; border: 1px solid #ccc; padding: 8px; marginTop: 16px">\n          <div [hidden]="selectedTabId !== \'tab-1\'" id="panel-1">\n            Content for First Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-2\'" id="panel-2">\n            Content for Second Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-3\'" id="panel-3">\n            Content for Third Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-4\'" id="panel-4">\n            Content for Fourth Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-5\'" id="panel-5">\n            Content for Fifth Tab\n          </div>\n        </div>\n      </div>\n    </div>\n    '})},KeyboardInteraction={args:{options:[{id:"tab-1",label:"First Tab",panelId:"panel-1"},{id:"tab-2",label:"Second Tab",panelId:"panel-2"},{id:"tab-3",label:"Third Tab",panelId:"panel-3"},{id:"tab-4",label:"Fourth Tab",panelId:"panel-4",disabled:!0},{id:"tab-5",label:"Fifth Tab",panelId:"panel-5"}],selectedTabId:"tab-1",alignment:"start",compactSpacing:!1,direction:"horizontal",overflowType:"scrollable"},render:args=>({props:{...args,change(id){this.selectedTabId=id}},template:'\n    <div style="height: 150px">\n      <rte-tab\n        [options]="options"\n        [selectedTabId]="selectedTabId"\n        (change)="change($event)"\n        [direction]="direction"\n        [alignment]="alignment"\n        [compactSpacing]="compactSpacing"\n        [overflowType]="overflowType"\n        [inverted]="inverted"\n        />\n        <div style="height: 100px; border: 1px solid #ccc; padding: 8px; marginTop: 16px">\n          <div [hidden]="selectedTabId !== \'tab-1\'" id="panel-1">\n            Content for First Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-2\'" id="panel-2">\n            Content for Second Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-3\'" id="panel-3">\n            Content for Third Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-4\'" id="panel-4">\n            Content for Fourth Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-5\'" id="panel-5">\n            Content for Fifth Tab\n          </div>\n        </div>\n    </div>\n    '}),play:(_ref=(0,asyncToGenerator.A)(function*({canvasElement,step}){const canvas=(0,dist.ux)(canvasElement),firstTab=yield canvas.getByRole("tab",{name:"First Tab"}),secondTab=yield canvas.getByRole("tab",{name:"Second Tab"}),thirdTab=yield canvas.getByRole("tab",{name:"Third Tab"}),fourthTab=yield canvas.getByRole("tab",{name:"Fourth Tab"}),fifthTab=yield canvas.getByRole("tab",{name:"Fifth Tab"}),expectTabToBeSelected=function(){var _ref2=(0,asyncToGenerator.A)(function*(tab){(0,dist.E3)(tab).toHaveAttribute("aria-selected","true"),(0,dist.E3)(tab).toHaveFocus(),(0,dist.E3)(canvas.getByText(`Content for ${tab.textContent}`)).toBeVisible()});return function expectTabToBeSelected(_x2){return _ref2.apply(this,arguments)}}(),expectTabToBeNotSelected=function(){var _ref3=(0,asyncToGenerator.A)(function*(tab){(0,dist.E3)(tab).toHaveAttribute("aria-selected","false"),(0,dist.E3)(tab).not.toHaveFocus(),(0,dist.E3)(canvas.getByText(`Content for ${tab.textContent}`)).not.toBeVisible()});return function expectTabToBeNotSelected(_x3){return _ref3.apply(this,arguments)}}();yield step("Focus on the first tab and select it",(0,asyncToGenerator.A)(function*(){yield dist.Q4.tab(),expectTabToBeSelected(firstTab)})),yield step("Navigate to the second tab and select it",(0,asyncToGenerator.A)(function*(){yield dist.Q4.keyboard(keyboard_test_constants.s1),expectTabToBeSelected(secondTab)})),yield step("Navigate to the second tab and select it",(0,asyncToGenerator.A)(function*(){yield dist.Q4.keyboard(keyboard_test_constants.s1),expectTabToBeSelected(thirdTab)})),yield step("Navigate directly to the fifth tab and select it because the forth is disabled",(0,asyncToGenerator.A)(function*(){yield dist.Q4.keyboard(keyboard_test_constants.s1),expectTabToBeSelected(fifthTab),expectTabToBeNotSelected(fourthTab)})),yield step("Navigate back to the first tab when there are no next tabs",(0,asyncToGenerator.A)(function*(){yield dist.Q4.keyboard(keyboard_test_constants.s1),expectTabToBeSelected(firstTab)})),yield step("Navigate back to the last tab and select it",(0,asyncToGenerator.A)(function*(){yield dist.Q4.keyboard(keyboard_test_constants.ZX),expectTabToBeSelected(fifthTab)}))}),function play(_x){return _ref.apply(this,arguments)})};var _ref;const __namedExportsOrder=["Default","Vertical","WithIcons","IconsOnly","WithBadge","OverflowType","KeyboardInteraction"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    options: [{\n      id: "tab-1",\n      label: "First Tab",\n      panelId: "panel-1"\n    }, {\n      id: "tab-2",\n      label: "Second Tab",\n      panelId: "panel-2"\n    }, {\n      id: "tab-3",\n      label: "Third Tab",\n      panelId: "panel-3"\n    }],\n    selectedTabId: "tab-1",\n    alignment: "start",\n    compactSpacing: false,\n    direction: "horizontal",\n    inverted: false,\n    overflowType: "scrollable"\n  },\n  render: args => ({\n    props: {\n      ...args,\n      change(id: string) {\n        this["selectedTabId"] = id;\n      }\n    },\n    template: `\n    <div>\n      <div style="height: 100%; padding: 16px">\n        <span style="font-family: Arial">Normal</span>\n        <rte-tab\n        [options]="options"\n        [selectedTabId]="selectedTabId"\n        (change)="change($event)"\n        [direction]="direction"\n        [alignment]="alignment"\n        [compactSpacing]="compactSpacing"\n        [inverted]="inverted"\n        [overflowType]="overflowType"\n        />\n      </div>\n      <div style="height: 100%; padding: 16px;  background-color: var(--background-inverse)">\n        <span style="color: var(--content-primary-inverse); font-family: Arial">Inverted</span>\n        <rte-tab\n        [options]="options"\n        [selectedTabId]="selectedTabId"\n        (change)="change($event)"\n        [direction]="direction"\n        [alignment]="alignment"\n        [compactSpacing]="compactSpacing"\n        [inverted]="true"\n        [overflowType]="overflowType"\n        />\n      </div>\n      <div style="height: 100px; border: 1px solid #ccc; padding: 8px; marginTop: 64px">\n          <div [hidden]="selectedTabId !== \'tab-1\'" id="panel-1">\n            Content for First Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-2\'" id="panel-2">\n            Content for Second Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-3\'" id="panel-3">\n            Content for Third Tab\n          </div>\n        </div>\n    </div>\n    `\n  })\n}',...Default.parameters?.docs?.source}}},Vertical.parameters={...Vertical.parameters,docs:{...Vertical.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    options: [{\n      id: "tab-1",\n      label: "First Tab",\n      panelId: "panel-1"\n    }, {\n      id: "tab-2",\n      label: "Second Tab",\n      panelId: "panel-2"\n    }, {\n      id: "tab-3",\n      label: "Third Tab",\n      panelId: "panel-3"\n    }],\n    selectedTabId: "tab-1",\n    alignment: "start",\n    direction: "vertical"\n  },\n  render: args => ({\n    props: {\n      ...args,\n      change(id: string) {\n        console.log("Tab changed to:", id);\n        this["selectedTabId"] = id;\n      }\n    },\n    template: `\n    <div style="display: flex; gap: 16px; height: 200px">\n      <rte-tab\n        [options]="options"\n        [selectedTabId]="selectedTabId"\n        (change)="change($event)"\n        [direction]="direction"\n        [alignment]="alignment"\n        [compactSpacing]="compactSpacing"\n        [inverted]="inverted"\n        [overflowType]="overflowType"\n        />\n        <div style="width: 100%; border: 1px solid #ccc; padding: 8px">\n          <div [hidden]="selectedTabId !== \'tab-1\'" id="panel-1">\n            Content for First Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-2\'" id="panel-2">\n            Content for Second Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-3\'" id="panel-3">\n            Content for Third Tab\n          </div>\n        </div>\n    </div>\n    `\n  })\n}',...Vertical.parameters?.docs?.source}}},WithIcons.parameters={...WithIcons.parameters,docs:{...WithIcons.parameters?.docs,source:{originalSource:'{\n  args: {\n    options: [{\n      id: "photos",\n      label: "Photos",\n      panelId: "panel-1",\n      icon: "photo-camera"\n    }, {\n      id: "videos",\n      label: "Vidéos",\n      panelId: "panel-2",\n      icon: "video-camera"\n    }, {\n      id: "musique",\n      label: "Musique",\n      panelId: "panel-3",\n      icon: "headphones"\n    }],\n    selectedTabId: "photos",\n    alignment: "start",\n    compactSpacing: false,\n    direction: "horizontal"\n  },\n  render: args => ({\n    props: {\n      ...args,\n      change(id: string) {\n        this["selectedTabId"] = id;\n      }\n    },\n    template: `\n    <div>\n      <rte-tab\n        [options]="options"\n        [selectedTabId]="selectedTabId"\n        (change)="change($event)"\n        [direction]="direction"\n        [alignment]="alignment"\n        [compactSpacing]="compactSpacing"\n        [inverted]="inverted"\n        [overflowType]="overflowType"\n        />\n        <div style="height: 100px; border: 1px solid #ccc; padding: 8px; marginTop: 16px">\n          <div [hidden]="selectedTabId !== \'photos\'" id="panel-1">\n            Content for First Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'videos\'" id="panel-2">\n            Content for Second Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'musique\'" id="panel-3">\n            Content for Third Tab\n          </div>\n        </div>\n    </div>\n    `\n  })\n}',...WithIcons.parameters?.docs?.source}}},IconsOnly.parameters={...IconsOnly.parameters,docs:{...IconsOnly.parameters?.docs,source:{originalSource:'{\n  args: {\n    options: [{\n      id: "home",\n      panelId: "panel-1",\n      icon: "home"\n    }, {\n      id: "bookmarks",\n      panelId: "panel-2",\n      icon: "bookmarks"\n    }, {\n      id: "chat",\n      panelId: "panel-3",\n      icon: "chat"\n    }, {\n      id: "settings",\n      panelId: "panel-3",\n      icon: "settings"\n    }],\n    selectedTabId: "home",\n    alignment: "start",\n    compactSpacing: false,\n    direction: "horizontal"\n  },\n  render: args => ({\n    props: {\n      ...args,\n      change(id: string) {\n        this["selectedTabId"] = id;\n      }\n    },\n    template: `\n    <div>\n      <rte-tab\n        [options]="options"\n        [selectedTabId]="selectedTabId"\n        (change)="change($event)"\n        [direction]="direction"\n        [alignment]="alignment"\n        [compactSpacing]="compactSpacing"\n        [inverted]="inverted"\n        [overflowType]="overflowType"\n        />\n        <div style="height: 100px; border: 1px solid #ccc; padding: 8px; marginTop: 16px">\n          <div [hidden]="selectedTabId !== \'home\'" id="panel-1">\n            Content for First Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'bookmarks\'" id="panel-2">\n            Content for Second Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'chat\'" id="panel-3">\n            Content for Third Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'settings\'" id="panel-3">\n            Content for Fourth Tab\n          </div>\n        </div>\n    </div>\n    `\n  })\n}',...IconsOnly.parameters?.docs?.source}}},WithBadge.parameters={...WithBadge.parameters,docs:{...WithBadge.parameters?.docs,source:{originalSource:'{\n  args: {\n    options: [{\n      id: "photos",\n      label: "Photos",\n      panelId: "panel-1",\n      icon: "photo-camera",\n      badgeCount: 5,\n      badgeContent: "number",\n      badgeType: "indicator",\n      showBadge: true\n    }, {\n      id: "videos",\n      label: "Vidéos",\n      panelId: "panel-2",\n      icon: "video-camera"\n    }, {\n      id: "musique",\n      label: "Musique",\n      panelId: "panel-3",\n      icon: "headphones"\n    }],\n    selectedTabId: "photos",\n    alignment: "start",\n    compactSpacing: false,\n    direction: "horizontal"\n  },\n  render: args => ({\n    props: {\n      ...args,\n      change(id: string) {\n        this["selectedTabId"] = id;\n      }\n    },\n    template: `\n    <div>\n      <rte-tab\n        [options]="options"\n        [selectedTabId]="selectedTabId"\n        (change)="change($event)"\n        [direction]="direction"\n        [alignment]="alignment"\n        [compactSpacing]="compactSpacing"\n        [inverted]="inverted"\n        [overflowType]="overflowType"\n        />\n        <div style="height: 100px; border: 1px solid #ccc; padding: 8px; marginTop: 16px">\n          <div [hidden]="selectedTabId !== \'photos\'" id="panel-1">\n            Content for First Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'videos\'" id="panel-2">\n            Content for Second Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'musique\'" id="panel-3">\n            Content for Third Tab\n          </div>\n        </div>\n    </div>\n    `\n  })\n}',...WithBadge.parameters?.docs?.source}}},OverflowType.parameters={...OverflowType.parameters,docs:{...OverflowType.parameters?.docs,source:{originalSource:'{\n  args: {\n    options: [{\n      id: "tab-1",\n      label: "First Tab",\n      panelId: "panel-1"\n    }, {\n      id: "tab-2",\n      label: "Second Tab",\n      panelId: "panel-2"\n    }, {\n      id: "tab-3",\n      label: "Third Tab",\n      panelId: "panel-3"\n    }, {\n      id: "tab-4",\n      label: "Fourth Tab",\n      panelId: "panel-4",\n      disabled: true\n    }, {\n      id: "tab-5",\n      label: "Fifth Tab",\n      panelId: "panel-5"\n    }],\n    selectedTabId: "tab-1",\n    alignment: "start",\n    compactSpacing: false,\n    direction: "horizontal",\n    overflowType: "scrollable"\n  },\n  render: args => ({\n    props: {\n      ...args,\n      change(id: string) {\n        this["selectedTabId"] = id;\n      }\n    },\n    template: `\n    <div style="display: flex; flexDirection: column; gap: 32px">\n      <div style="width: 400px">\n        <span style="font-family: Arial">Scrollable</span>\n        <rte-tab\n          [options]="options"\n          [selectedTabId]="selectedTabId"\n          (change)="change($event)"\n          [direction]="direction"\n          [alignment]="alignment"\n          [compactSpacing]="compactSpacing"\n          [overflowType]="overflowType"\n          [inverted]="inverted"\n        />\n        <div style="height: 100px; border: 1px solid #ccc; padding: 8px; marginTop: 16px">\n          <div [hidden]="selectedTabId !== \'tab-1\'" id="panel-1">\n            Content for First Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-2\'" id="panel-2">\n            Content for Second Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-3\'" id="panel-3">\n            Content for Third Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-4\'" id="panel-4">\n            Content for Fourth Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-5\'" id="panel-5">\n            Content for Fifth Tab\n          </div>\n        </div>\n      </div>\n      <div style="width: 400px">\n        <span style="font-family: Arial">Dropdown</span>\n        <rte-tab\n          [options]="options"\n          [selectedTabId]="selectedTabId"\n          (change)="change($event)"\n          [direction]="direction"\n          [alignment]="alignment"\n          [compactSpacing]="compactSpacing"\n          [overflowType]="\'dropdown\'"\n          [inverted]="inverted"\n        />\n        <div style="height: 100px; border: 1px solid #ccc; padding: 8px; marginTop: 16px">\n          <div [hidden]="selectedTabId !== \'tab-1\'" id="panel-1">\n            Content for First Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-2\'" id="panel-2">\n            Content for Second Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-3\'" id="panel-3">\n            Content for Third Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-4\'" id="panel-4">\n            Content for Fourth Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-5\'" id="panel-5">\n            Content for Fifth Tab\n          </div>\n        </div>\n      </div>\n    </div>\n    `\n  })\n}',...OverflowType.parameters?.docs?.source}}},KeyboardInteraction.parameters={...KeyboardInteraction.parameters,docs:{...KeyboardInteraction.parameters?.docs,source:{originalSource:'{\n  args: {\n    options: [{\n      id: "tab-1",\n      label: "First Tab",\n      panelId: "panel-1"\n    }, {\n      id: "tab-2",\n      label: "Second Tab",\n      panelId: "panel-2"\n    }, {\n      id: "tab-3",\n      label: "Third Tab",\n      panelId: "panel-3"\n    }, {\n      id: "tab-4",\n      label: "Fourth Tab",\n      panelId: "panel-4",\n      disabled: true\n    }, {\n      id: "tab-5",\n      label: "Fifth Tab",\n      panelId: "panel-5"\n    }],\n    selectedTabId: "tab-1",\n    alignment: "start",\n    compactSpacing: false,\n    direction: "horizontal",\n    overflowType: "scrollable"\n  },\n  render: args => ({\n    props: {\n      ...args,\n      change(id: string) {\n        this["selectedTabId"] = id;\n      }\n    },\n    template: `\n    <div style="height: 150px">\n      <rte-tab\n        [options]="options"\n        [selectedTabId]="selectedTabId"\n        (change)="change($event)"\n        [direction]="direction"\n        [alignment]="alignment"\n        [compactSpacing]="compactSpacing"\n        [overflowType]="overflowType"\n        [inverted]="inverted"\n        />\n        <div style="height: 100px; border: 1px solid #ccc; padding: 8px; marginTop: 16px">\n          <div [hidden]="selectedTabId !== \'tab-1\'" id="panel-1">\n            Content for First Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-2\'" id="panel-2">\n            Content for Second Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-3\'" id="panel-3">\n            Content for Third Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-4\'" id="panel-4">\n            Content for Fourth Tab\n          </div>\n          <div [hidden]="selectedTabId !== \'tab-5\'" id="panel-5">\n            Content for Fifth Tab\n          </div>\n        </div>\n    </div>\n    `\n  }),\n  play: async ({\n    canvasElement,\n    step\n  }) => {\n    const canvas = within(canvasElement);\n    const firstTab = await canvas.getByRole("tab", {\n      name: "First Tab"\n    });\n    const secondTab = await canvas.getByRole("tab", {\n      name: "Second Tab"\n    });\n    const thirdTab = await canvas.getByRole("tab", {\n      name: "Third Tab"\n    });\n    const fourthTab = await canvas.getByRole("tab", {\n      name: "Fourth Tab"\n    });\n    const fifthTab = await canvas.getByRole("tab", {\n      name: "Fifth Tab"\n    });\n    const expectTabToBeSelected = async (tab: HTMLElement) => {\n      expect(tab).toHaveAttribute("aria-selected", "true");\n      expect(tab).toHaveFocus();\n      expect(canvas.getByText(`Content for ${tab.textContent}`)).toBeVisible();\n    };\n    const expectTabToBeNotSelected = async (tab: HTMLElement) => {\n      expect(tab).toHaveAttribute("aria-selected", "false");\n      expect(tab).not.toHaveFocus();\n      expect(canvas.getByText(`Content for ${tab.textContent}`)).not.toBeVisible();\n    };\n    await step("Focus on the first tab and select it", async () => {\n      await userEvent.tab();\n      expectTabToBeSelected(firstTab);\n    });\n    await step("Navigate to the second tab and select it", async () => {\n      await userEvent.keyboard(TESTING_ARROW_RIGHT_KEY);\n      expectTabToBeSelected(secondTab);\n    });\n    await step("Navigate to the second tab and select it", async () => {\n      await userEvent.keyboard(TESTING_ARROW_RIGHT_KEY);\n      expectTabToBeSelected(thirdTab);\n    });\n    await step("Navigate directly to the fifth tab and select it because the forth is disabled", async () => {\n      await userEvent.keyboard(TESTING_ARROW_RIGHT_KEY);\n      expectTabToBeSelected(fifthTab);\n      expectTabToBeNotSelected(fourthTab);\n    });\n    await step("Navigate back to the first tab when there are no next tabs", async () => {\n      await userEvent.keyboard(TESTING_ARROW_RIGHT_KEY);\n      expectTabToBeSelected(firstTab);\n    });\n    await step("Navigate back to the last tab and select it", async () => {\n      await userEvent.keyboard(TESTING_ARROW_LEFT_KEY);\n      expectTabToBeSelected(fifthTab);\n    });\n  }\n}',...KeyboardInteraction.parameters?.docs?.source}}}},"./projects/ds-rte-lib/src/lib/components/badge/badge.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("../../node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("../../node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:wght,FILL,GRAD@400,0,0&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,200..1000;1,200..1000&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.badge {\n  position: absolute;\n  border-radius: 999px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: opacity 0.15s ease-in-out;\n  box-sizing: border-box;\n}\n.badge.hidden {\n  opacity: 0;\n}\n.badge.type-brand {\n  box-shadow: 0px 2px 4px 0px var(--elevation-shadow-key-brand), 0px 0px 2px 0px var(--elevation-shadow-ambient-brand);\n  background: linear-gradient(0deg, var(--elevation-surface-shadow-2) 0%, var(--elevation-surface-shadow-2) 100%);\n  background-color: var(--background-brand-default);\n  color: var(--content-primary-inverse);\n}\n.badge.type-neutral {\n  box-shadow: 0px 2px 4px 0px var(--elevation-shadow-key), 0px 0px 2px 0px var(--elevation-shadow-ambient);\n  background: linear-gradient(0deg, var(--elevation-surface-shadow-2) 0%, var(--elevation-surface-shadow-2) 100%);\n  background-color: var(--background-neutral-regular-default);\n  color: var(--content-secondary);\n}\n.badge.type-indicator {\n  box-shadow: 0px 2px 4px 0px var(--elevation-shadow-key-brand), 0px 0px 2px 0px var(--elevation-shadow-ambient-brand);\n  background: linear-gradient(0deg, var(--elevation-surface-shadow-2) 0%, var(--elevation-surface-shadow-2) 100%);\n  background-color: var(--background-danger-default);\n  color: var(--content-primary-inverse);\n}\n.badge.size-xs {\n  width: 6px;\n  height: 6px;\n  box-shadow: none;\n  top: 0;\n  right: 0;\n}\n.badge.size-s {\n  width: 12px;\n  height: 12px;\n  top: -3px;\n  right: -3px;\n}\n.badge.size-m {\n  font-feature-settings: "liga" off, "clig" off;\n  font-style: normal;\n  font-family: "Arial";\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: 0px;\n  min-width: 16px;\n  width: -moz-fit-content;\n  width: fit-content;\n  height: 16px;\n  top: -4px;\n  right: -4px;\n  padding: 0px 2px;\n}\n.badge.size-m.count-overflow {\n  padding: 0px 4px;\n}\n.badge.size-l {\n  font-feature-settings: "liga" off, "clig" off;\n  font-style: normal;\n  font-family: "Arial";\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: 0px;\n  min-width: 24px;\n  width: -moz-fit-content;\n  width: fit-content;\n  height: 24px;\n  top: -8px;\n  right: -8px;\n  padding: 0px 4px;\n}\n.badge.size-l.count-overflow {\n  padding: 0px 6px;\n}\n.badge[data-simple-badge=true] {\n  position: static;\n  box-shadow: none;\n}\n.badge .badge-text {\n  margin: 0;\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/ds-rte-lib/src/lib/components/tab/tab-item/tab-item.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("../../node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("../../node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:wght,FILL,GRAD@400,0,0&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,200..1000;1,200..1000&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,':host {\n  pointer-events: none;\n  display: flex;\n}\n\n.rte-tabitem {\n  font-feature-settings: "liga" off, "clig" off;\n  font-style: normal;\n  font-family: "Arial";\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0px;\n  display: flex;\n  padding: 12px;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  background: transparent;\n  color: var(--content-secondary);\n  cursor: pointer;\n  border: none;\n  text-align: left;\n  flex-shrink: 0;\n  margin-left: 2px;\n  height: 100%;\n  pointer-events: auto;\n}\n.rte-tabitem[data-inverted=true] {\n  color: var(--content-primary-inverse);\n}\n.rte-tabitem[data-direction=vertical] {\n  flex-shrink: 1;\n  margin-left: 0px;\n}\n.rte-tabitem[data-hidden=true] {\n  visibility: hidden;\n}\n.rte-tabitem[data-selected=true]:not([data-disabled=true]), .rte-tabitem:hover:not([data-disabled=true]) {\n  font-feature-settings: "liga" off, "clig" off;\n  font-style: normal;\n  font-family: "Arial";\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0px;\n}\n.rte-tabitem[data-disabled=true] {\n  color: var(--content-disabled);\n  cursor: not-allowed;\n}\n.rte-tabitem[data-compact-spacing=true] {\n  padding: 4px 12px;\n}\n.rte-tabitem:focus-visible {\n  z-index: 1;\n  outline: 2px solid var(--border-brand-focused);\n}\n\n.rte-tab-hover-indicator {\n  position: absolute;\n  top: 4px;\n  height: 2px;\n  width: 2px;\n  background: var(--background-neutral-regular-hover);\n  opacity: 0;\n  transition: left 0.2s ease, width 0.2s ease;\n  z-index: 10;\n}\n.rte-tab-hover-indicator[data-disabled=true] {\n  display: none;\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/ds-rte-lib/src/lib/components/tab/tab.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("../../node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("../../node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:wght,FILL,GRAD@400,0,0&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,200..1000;1,200..1000&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.rte-tab-container {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n}\n.rte-tab-container[data-direction=vertical] {\n  flex-direction: row;\n  height: 100%;\n}\n\n.rte-tab {\n  position: relative;\n  display: flex;\n  height: 100%;\n  gap: 24px;\n  justify-content: flex-start;\n  padding-bottom: 2px;\n  margin-bottom: -2px;\n  margin-left: -2px;\n  scrollbar-width: none;\n  width: 100%;\n  padding-top: 2px;\n  padding-left: 2px;\n  align-items: center;\n}\n.rte-tab[data-direction=horizontal] {\n  overflow-x: scroll;\n}\n.rte-tab[data-direction=horizontal][data-overflow-type=dropdown] {\n  overflow: hidden;\n  margin-left: 0;\n}\n.rte-tab[data-direction=vertical] {\n  flex-direction: column;\n  border-bottom: none;\n  gap: 4px;\n  height: 100%;\n  padding-right: 2px;\n  margin-left: -2px;\n  width: max-content;\n  align-items: start;\n  margin-bottom: 0px;\n}\n.rte-tab[data-direction=vertical] .rte-tab-selected-indicator {\n  width: 2px;\n  transition: top 0.2s ease, height 0.2s ease;\n}\n.rte-tab[data-alignment=center] {\n  justify-content: center;\n}\n.rte-tab .rte-tab-selected-indicator {\n  position: absolute;\n  bottom: 0;\n  height: 2px;\n  background: var(--background-brand-selected-default);\n  transition: left 0.2s ease, width 0.2s ease;\n  pointer-events: none;\n  z-index: 1;\n}\n.rte-tab .rte-tab-separator {\n  width: 24px;\n  flex-shrink: 0;\n}\n\n.rte-tab-border-horizontal {\n  background-color: var(--background-neutral-regular-default);\n  position: relative;\n  height: 2px;\n}\n.rte-tab-border-horizontal[data-compact-spacing=true][data-scrollable=true] {\n  bottom: 5px;\n}\n.rte-tab-border-horizontal[data-direction=vertical] {\n  display: none;\n}\n\n.rte-tab-border-vertical {\n  background-color: var(--background-neutral-regular-default);\n  position: relative;\n  width: 2px;\n}\n.rte-tab-border-vertical[data-direction=horizontal] {\n  display: none;\n}\n\n.rte-tab-dropdown-button {\n  font-feature-settings: "liga" off, "clig" off;\n  font-style: normal;\n  font-family: "Arial";\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0px;\n  color: var(--content-secondary);\n  width: max-content;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  margin: 12px;\n}\n.rte-tab-dropdown-button:focus-visible {\n  outline: 2px solid var(--border-brand-focused);\n  outline-offset: 12px;\n  z-index: 1;\n}\n.rte-tab-dropdown-button[data-inverted=true] {\n  color: var(--content-primary-inverse);\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"../core/constants/keyboard/keyboard-test.constants.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{G7:()=>TESTING_ENTER_KEY,ZX:()=>TESTING_ARROW_LEFT_KEY,s1:()=>TESTING_ARROW_RIGHT_KEY,u5:()=>TESTING_SPACE_KEY});var _keyboard_constants__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../core/constants/keyboard/keyboard.constants.ts");const TESTING_SPACE_KEY=`{${_keyboard_constants__WEBPACK_IMPORTED_MODULE_0__.zP}}`,TESTING_ENTER_KEY=`{${_keyboard_constants__WEBPACK_IMPORTED_MODULE_0__.jD}}`,TESTING_ARROW_RIGHT_KEY=`{${_keyboard_constants__WEBPACK_IMPORTED_MODULE_0__.Zh}}`,TESTING_ARROW_LEFT_KEY=`{${_keyboard_constants__WEBPACK_IMPORTED_MODULE_0__.ST}}`},"./projects/ds-rte-lib/src/lib/components/badge/badge.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{n:()=>BadgeComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var badge_componentngResource=__webpack_require__("./projects/ds-rte-lib/src/lib/components/badge/badge.component.scss?ngResource"),badge_componentngResource_default=__webpack_require__.n(badge_componentngResource),common=__webpack_require__("../../node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("../../node_modules/@angular/core/fesm2022/core.mjs");const badgeIconSize={xs:null,s:null,m:12,l:20};function getShowIcon({size,content,iconSize}){return!["xs","s"].includes(size)&&"icon"===content&&!!iconSize}function getShowText({size,content,count}){return!["xs","s"].includes(size)&&"number"===content&&"number"==typeof count&&count>0}var icon_map=__webpack_require__("./projects/ds-rte-lib/src/lib/components/icon/icon-map.ts"),icon_component=__webpack_require__("./projects/ds-rte-lib/src/lib/components/icon/icon.component.ts");let BadgeComponent=class BadgeComponent{constructor(){this.badgeType=(0,core.input)("brand"),this.badgeSize=(0,core.input)("m"),this.badgeContent=(0,core.input)("number"),this.count=(0,core.input)(),this.icon=(0,core.input)("notification"),this.simpleBadge=(0,core.input)(!1),this.isValidIconName=(0,core.computed)(()=>(0,icon_map.vW)(this.icon())),this.showIcon=(0,core.computed)(()=>getShowIcon({size:this.badgeSize(),content:this.badgeContent(),iconSize:this.iconSize()})),this.showText=(0,core.computed)(()=>getShowText({size:this.badgeSize(),content:this.badgeContent(),count:this.count()})),this.displayCount=(0,core.computed)(()=>function getDisplayCount(count){return"number"!=typeof count?"":count<100?count.toString():"99+"}(this.count())),this.countOverflow=(0,core.computed)(()=>this.showText()&&this.displayCount().length>2),this.iconSize=(0,core.computed)(()=>function getBadgeIconSize(size){return badgeIconSize[size]??void 0}(this.badgeSize())),this.showBadge=(0,core.computed)(()=>function getShowBadge({size,content,count,iconSize}){switch(console.log(size,content,count),content){case"icon":return getShowIcon({size,content,iconSize});case"number":return getShowText({size,content,count});default:return!0}}({size:this.badgeSize(),content:this.badgeContent(),count:this.count(),iconSize:this.iconSize()}))}static{this.propDecorators={badgeType:[{type:core.Input,args:[{isSignal:!0,alias:"badgeType",required:!1,transform:void 0}]}],badgeSize:[{type:core.Input,args:[{isSignal:!0,alias:"badgeSize",required:!1,transform:void 0}]}],badgeContent:[{type:core.Input,args:[{isSignal:!0,alias:"badgeContent",required:!1,transform:void 0}]}],count:[{type:core.Input,args:[{isSignal:!0,alias:"count",required:!1,transform:void 0}]}],icon:[{type:core.Input,args:[{isSignal:!0,alias:"icon",required:!1,transform:void 0}]}],simpleBadge:[{type:core.Input,args:[{isSignal:!0,alias:"simpleBadge",required:!1,transform:void 0}]}]}}};BadgeComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"rte-badge",imports:[common.CommonModule,icon_component.R],standalone:!0,template:'<div\n  class="badge size-{{ badgeSize() }} type-{{ badgeType() }}"\n  data-testid="badge"\n  [attr.data-simple-badge]="simpleBadge()"\n  [ngClass]="{ hidden: !showBadge(), \'count-overflow\': countOverflow() }"\n>\n  <rte-icon\n    *ngIf="showIcon()"\n    class="badge-icon"\n    [name]="icon()"\n    [size]="iconSize()!"\n  />\n  <span *ngIf="showText()" class="badge-text">\n    {{ displayCount() }}\n  </span>\n</div>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[badge_componentngResource_default()]})],BadgeComponent)}}]);