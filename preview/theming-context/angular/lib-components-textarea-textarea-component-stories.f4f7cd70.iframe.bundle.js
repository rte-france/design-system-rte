(self.webpackChunk_design_system_rte_angular_builder=self.webpackChunk_design_system_rte_angular_builder||[]).push([[3217],{"./projects/ds-rte-lib/src/lib/components/textarea/textarea.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CharacterCount:()=>CharacterCount,Default:()=>Default,Disabled:()=>Disabled,Error:()=>Error,KeyboardInteraction:()=>KeyboardInteraction,ReadOnly:()=>ReadOnly,__namedExportsOrder:()=>__namedExportsOrder,default:()=>textarea_component_stories});var asyncToGenerator=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"),dist=__webpack_require__("../../node_modules/@storybook/test/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var textarea_componentngResource=__webpack_require__("./projects/ds-rte-lib/src/lib/components/textarea/textarea.component.scss?ngResource"),textarea_componentngResource_default=__webpack_require__.n(textarea_componentngResource),common=__webpack_require__("../../node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("../../node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_forms=__webpack_require__("../../node_modules/@angular/forms/fesm2022/forms.mjs");const TEXTAREA_REQUIREMENT_INDICATOR_VALUE_required="(obligatoire)",TEXTAREA_REQUIREMENT_INDICATOR_VALUE_requiredIcon="*",TEXTAREA_REQUIREMENT_INDICATOR_VALUE_optional="(facultatif)";var icon_component=__webpack_require__("./projects/ds-rte-lib/src/lib/components/icon/icon.component.ts"),link_component=__webpack_require__("./projects/ds-rte-lib/src/lib/components/link/link.component.ts");let TextareaComponent=class TextareaComponent{constructor(){this.id=(0,core.input)(void 0),this.name=(0,core.input)(void 0),this.ariaLabelledby=(0,core.input)(void 0),this.label=(0,core.input)(void 0),this.labelId=(0,core.input)(void 0),this.labelPosition=(0,core.input)("top"),this.assistiveTextLabel=(0,core.input)(void 0),this.assistiveTextAppearance=(0,core.input)("description"),this.assistiveTextLink=(0,core.input)(void 0),this.required=(0,core.input)(!1),this.showLabelRequirement=(0,core.input)(!1),this.resizeable=(0,core.input)(!0),this.maxLength=(0,core.input)(void 0),this.disabled=(0,core.input)(!1),this.readOnly=(0,core.input)(!1),this.value=(0,core.input)(void 0),this.rows=(0,core.input)(3),this.defaultValue=(0,core.input)(void 0),this.showCounter=(0,core.input)(!1),this.assistiveTextIconSize=16,this.requirementIndicatorValue=(0,core.computed)(()=>this.required()?this.showLabelRequirement()?TEXTAREA_REQUIREMENT_INDICATOR_VALUE_required:TEXTAREA_REQUIREMENT_INDICATOR_VALUE_requiredIcon:TEXTAREA_REQUIREMENT_INDICATOR_VALUE_optional),this.change=(0,core.output)(),this.blur=(0,core.output)(),this.textareaRef=(0,core.viewChild)("textarea"),this.isAssistiveTextLinkVisible=(0,core.computed)(()=>"link"===this.assistiveTextAppearance()&&void 0!==this.assistiveTextLink()),this.characterCount=0,this.isCounterVisible=(0,core.computed)(()=>this.showCounter()&&this.maxLength())}onInput(event){const target=event.target;this.characterCount=target.value.length,this.change.emit(event)}onBlur(event){this.textareaRef()?.nativeElement?.scrollTo({top:0}),this.blur.emit(event)}static{this.propDecorators={id:[{type:core.Input,args:[{isSignal:!0,alias:"id",required:!1,transform:void 0}]}],name:[{type:core.Input,args:[{isSignal:!0,alias:"name",required:!1,transform:void 0}]}],ariaLabelledby:[{type:core.Input,args:[{isSignal:!0,alias:"ariaLabelledby",required:!1,transform:void 0}]}],label:[{type:core.Input,args:[{isSignal:!0,alias:"label",required:!1,transform:void 0}]}],labelId:[{type:core.Input,args:[{isSignal:!0,alias:"labelId",required:!1,transform:void 0}]}],labelPosition:[{type:core.Input,args:[{isSignal:!0,alias:"labelPosition",required:!1,transform:void 0}]}],assistiveTextLabel:[{type:core.Input,args:[{isSignal:!0,alias:"assistiveTextLabel",required:!1,transform:void 0}]}],assistiveTextAppearance:[{type:core.Input,args:[{isSignal:!0,alias:"assistiveTextAppearance",required:!1,transform:void 0}]}],assistiveTextLink:[{type:core.Input,args:[{isSignal:!0,alias:"assistiveTextLink",required:!1,transform:void 0}]}],required:[{type:core.Input,args:[{isSignal:!0,alias:"required",required:!1,transform:void 0}]}],showLabelRequirement:[{type:core.Input,args:[{isSignal:!0,alias:"showLabelRequirement",required:!1,transform:void 0}]}],resizeable:[{type:core.Input,args:[{isSignal:!0,alias:"resizeable",required:!1,transform:void 0}]}],maxLength:[{type:core.Input,args:[{isSignal:!0,alias:"maxLength",required:!1,transform:void 0}]}],disabled:[{type:core.Input,args:[{isSignal:!0,alias:"disabled",required:!1,transform:void 0}]}],readOnly:[{type:core.Input,args:[{isSignal:!0,alias:"readOnly",required:!1,transform:void 0}]}],value:[{type:core.Input,args:[{isSignal:!0,alias:"value",required:!1,transform:void 0}]}],rows:[{type:core.Input,args:[{isSignal:!0,alias:"rows",required:!1,transform:void 0}]}],defaultValue:[{type:core.Input,args:[{isSignal:!0,alias:"defaultValue",required:!1,transform:void 0}]}],showCounter:[{type:core.Input,args:[{isSignal:!0,alias:"showCounter",required:!1,transform:void 0}]}],change:[{type:core.Output,args:["change"]}],blur:[{type:core.Output,args:["blur"]}],textareaRef:[{type:core.ViewChild,args:["textarea",{isSignal:!0}]}]}}};TextareaComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"rte-textarea",imports:[common.CommonModule,icon_component.R,link_component.g],standalone:!0,template:'<div class="container" [attr.data-label-position]="labelPosition()"> \n  <label *ngIf="label() && labelPosition() === \'side\'" [attr.data-label-position]="labelPosition()" [attr.id]="labelId()" [attr.for]="id()">{{label()}}<span *ngIf="required() || showLabelRequirement()" class="requirement-indicator" aria-hidden="true" [ngClass]="{\'required\': required(), \'show-label-requirement\': showLabelRequirement() }">{{requirementIndicatorValue()}}</span></label>\n  <div class="top-position-container" [attr.data-label-position]="labelPosition()">\n    <div class="header-container" [attr.data-label-position]="labelPosition()">\n      <label *ngIf="label() && labelPosition() === \'top\'" [attr.id]="labelId()" [attr.for]="id()">{{label()}}<span *ngIf="required() || showLabelRequirement()" class="requirement-indicator" aria-hidden="true" [ngClass]="{\'required\': required(), \'show-label-requirement\': showLabelRequirement() }">{{requirementIndicatorValue()}}</span></label>\n      <span *ngIf="isCounterVisible()" class="character-counter">{{ characterCount }}/{{ maxLength() }}</span>\n    </div>\n    <div class="textarea-container" [attr.data-label-position]="labelPosition()">\n      <textarea\n      #textarea\n      class="textarea {{ assistiveTextAppearance() }}"\n      [class.resizeable]="resizeable()"\n      [attr.id]="id()"\n      [attr.name]="name()"\n      [attr.aria-labelledby]="labelId() || ariaLabelledby()"\n      [attr.required]="required() || null"\n      [attr.maxLength]="maxLength() !== undefined ? maxLength() : null"\n      [attr.disabled]="disabled() || null"\n      [attr.readonly]="readOnly() || null"\n      [value]="value() !== undefined ? value() : null"\n      [defaultValue]="defaultValue() !== undefined ? defaultValue() : null"\n      [attr.rows]="rows()"\n      (input)="onInput($event)"\n      (blur)="onBlur($event)"\n      ></textarea>\n      <rte-link *ngIf="isAssistiveTextLinkVisible()" class="assistive-text-link" [externalLink]="true" [href]="assistiveTextLink() || \'\'" [label]="assistiveTextLabel() || \'\'">\n      </rte-link>\n      <div *ngIf="assistiveTextAppearance() !== \'link\'" class="assistive-text {{ assistiveTextAppearance() }}" [ngClass]="{\'disabled\' : disabled()}">\n        <rte-icon *ngIf="assistiveTextAppearance() === \'error\'" name="error" [size]="assistiveTextIconSize"></rte-icon>\n        <rte-icon *ngIf="assistiveTextAppearance() === \'success\'" name="check-circle" [size]="assistiveTextIconSize"></rte-icon>\n        <span>{{ assistiveTextLabel() }}</span>\n      </div>\n    </div>\n  </div>\n</div>\n',providers:[{provide:fesm2022_forms.kq,useExisting:TextareaComponent,multi:!0}],styles:[textarea_componentngResource_default()]})],TextareaComponent);const textarea_component_stories={title:"Textarea",component:TextareaComponent,tags:["autodocs"],argTypes:{value:{control:"text"},label:{control:"text"},labelPosition:{control:"select",options:["top","side"],description:"Position of the label relative to the textarea"},disabled:{control:"boolean"},rows:{control:"number"},change:{action:"changed"},assistiveTextAppearance:{control:"select",options:["description","error","success","link"],description:"Appearance of the assistive text"},assistiveTextLink:{control:"text",description:"Link for the assistive text when appearance is 'link'"},required:{control:"boolean",description:"Whether the textarea is required"},showLabelRequirement:{control:"boolean",description:"Whether to show the requirement indicator in the label"},maxLength:{control:"number",description:"Maximum number of characters allowed in the textarea"},showCounter:{control:"boolean",description:"Whether to display the character count"},readOnly:{control:"boolean",description:"Whether the textarea is read-only"}}},mockFn=(0,dist.fn)(),Default={args:{id:"my-textarea",label:"Label",labelId:"LabelId",labelPosition:"top",assistiveTextLabel:"Assistive text label",assistiveTextLink:"https://example.com",assistiveTextAppearance:"description",required:!1,value:"",rows:3,showLabelRequirement:!1,showCounter:!1,change:mockFn},render:args=>({props:{...args},template:`\n    <div style="width: 350px">\n      <rte-textarea\n        [id]="'${args.id}'"\n        [label]="'${args.label}'"\n        [labelId]="'${args.labelId}'"\n        [labelPosition]="'${args.labelPosition}'"\n        [assistiveTextLabel]="'${args.assistiveTextLabel}'"\n        [assistiveTextLink]="'${args.assistiveTextLink}'"\n        [assistiveTextAppearance]="'${args.assistiveTextAppearance}'"\n        [required]=${args.required}\n        [maxLength]=${args.maxLength}\n        [showCounter]=${args.showCounter}\n        [required]=${args.required}\n        [showLabelRequirement]=${args.showLabelRequirement}\n        [readOnly]=${args.readOnly}\n        [value]="'${args.value}'"\n        [rows]=${args.rows}\n        [disabled]=${args.disabled}\n        (change)="args.change($event)"\n        />\n    </div>\n    `})},CharacterCount={args:{...Default.args,maxLength:10},render:args=>({props:{...args},template:`\n    <div style="width: 350px">\n      <rte-textarea\n        [id]="'${args.id}'"\n        [label]="${args.label}"\n        [labelId]="'${args.labelId}'"\n        [labelPosition]="'${args.labelPosition}'"\n        [assistiveTextLabel]="'${args.assistiveTextLabel}'"\n        [assistiveTextLink]="'${args.assistiveTextLink}'"\n        [assistiveTextAppearance]="'${args.assistiveTextAppearance}'"\n        [required]=${args.required}\n        [maxLength]=${args.maxLength}\n        [showCounter]=${args.showCounter}\n        [required]=${args.required}\n        [showLabelRequirement]=${args.showLabelRequirement}\n        [readOnly]=${args.readOnly}\n        [value]="'${args.value}'"\n        [rows]=${args.rows}\n        [disabled]=${args.disabled}\n        (change)="change($event)"\n        />\n    </div>\n    `}),play:(_ref=(0,asyncToGenerator.A)(function*({canvasElement}){const textarea=(0,dist.ux)(canvasElement).getByRole("textbox");yield dist.Q4.type(textarea,"Hello World"),(0,dist.E3)(mockFn).toHaveBeenCalledTimes(10),(0,dist.E3)(textarea).toHaveValue("Hello Worl")}),function play(_x){return _ref.apply(this,arguments)})};var _ref;const Error={args:{...Default.args,maxLength:100,assistiveTextLabel:"Error message",assistiveTextAppearance:"error"},render:args=>({props:{...args},template:`\n    <div style="width: 350px">\n      <rte-textarea\n        [id]="'${args.id}'"\n        [label]="${args.label}"\n        [labelId]="'${args.labelId}'"\n        [labelPosition]="'${args.labelPosition}'"\n        [assistiveTextLabel]="'${args.assistiveTextLabel}'"\n        [assistiveTextLink]="'${args.assistiveTextLink}'"\n        [assistiveTextAppearance]="'${args.assistiveTextAppearance}'"\n        [required]=${args.required}\n        [maxLength]=${args.maxLength}\n        [showCounter]=${args.showCounter}\n        [required]=${args.required}\n        [showLabelRequirement]=${args.showLabelRequirement}\n        [readOnly]=${args.readOnly}\n        [value]="'${args.value}'"\n        [rows]=${args.rows}\n        [disabled]=${args.disabled}\n        (change)="change($event)"\n        />\n    </div>\n    `})},ReadOnly={args:{...Default.args,readOnly:!0,value:"This is a read-only textarea."},render:args=>({props:{...args},template:`\n    <div style="width: 350px">\n      <rte-textarea\n        [id]="'${args.id}'"\n        [label]="${args.label}"\n        [labelId]="'${args.labelId}'"\n        [labelPosition]="'${args.labelPosition}'"\n        [assistiveTextLabel]="'${args.assistiveTextLabel}'"\n        [assistiveTextLink]="'${args.assistiveTextLink}'"\n        [assistiveTextAppearance]="'${args.assistiveTextAppearance}'"\n        [required]=${args.required}\n        [maxLength]=${args.maxLength}\n        [showCounter]=${args.showCounter}\n        [required]=${args.required}\n        [showLabelRequirement]=${args.showLabelRequirement}\n        [readOnly]=${args.readOnly}\n        [value]="'${args.value}'"\n        [rows]=${args.rows}\n        [disabled]=${args.disabled}\n        (change)="change($event)"\n        />\n    </div>\n    `}),play:(_ref2=(0,asyncToGenerator.A)(function*({canvasElement,args}){const textarea=(0,dist.ux)(canvasElement).getByRole("textbox");yield dist.Q4.tab(),(0,dist.E3)(textarea).toHaveFocus(),yield dist.Q4.type(textarea,"Hello World"),(0,dist.E3)(mockFn).not.toHaveBeenCalled(),(0,dist.E3)(textarea).toHaveValue(args.value)}),function play(_x2){return _ref2.apply(this,arguments)})};var _ref2;const Disabled={args:{...Default.args,disabled:!0},render:args=>({props:{...args},template:`\n    <div style="width: 350px">\n      <rte-textarea\n        [id]="'${args.id}'"\n        [label]="${args.label}"\n        [labelId]="'${args.labelId}'"\n        [labelPosition]="'${args.labelPosition}'"\n        [assistiveTextLabel]="'${args.assistiveTextLabel}'"\n        [assistiveTextLink]="'${args.assistiveTextLink}'"\n        [assistiveTextAppearance]="'${args.assistiveTextAppearance}'"\n        [required]=${args.required}\n        [maxLength]=${args.maxLength}\n        [showCounter]=${args.showCounter}\n        [required]=${args.required}\n        [showLabelRequirement]=${args.showLabelRequirement}\n        [readOnly]=${args.readOnly}\n        [value]="'${args.value}'"\n        [rows]=${args.rows}\n        [disabled]=${args.disabled}\n        (change)="change($event)"\n        />\n    </div>\n    `}),play:(_ref3=(0,asyncToGenerator.A)(function*({canvasElement}){const textarea=(0,dist.ux)(canvasElement).getByRole("textbox");yield dist.Q4.tab(),(0,dist.E3)(textarea).not.toHaveFocus()}),function play(_x3){return _ref3.apply(this,arguments)})};var _ref3;const KeyboardInteraction={args:{...Default.args},render:args=>({props:{...args},template:`\n    <div style="width: 350px">\n      <rte-textarea\n        [id]="'${args.id}'"\n        [label]="${args.label}"\n        [labelId]="'${args.labelId}'"\n        [labelPosition]="'${args.labelPosition}'"\n        [assistiveTextLabel]="'${args.assistiveTextLabel}'"\n        [assistiveTextLink]="'${args.assistiveTextLink}'"\n        [assistiveTextAppearance]="'${args.assistiveTextAppearance}'"\n        [required]=${args.required}\n        [maxLength]=${args.maxLength}\n        [showCounter]=${args.showCounter}\n        [required]=${args.required}\n        [showLabelRequirement]=${args.showLabelRequirement}\n        [readOnly]=${args.readOnly}\n        [value]="'${args.value}'"\n        [rows]=${args.rows}\n        [disabled]=${args.disabled}\n        (change)="change($event)"\n        />\n    </div>\n    `}),play:(_ref4=(0,asyncToGenerator.A)(function*({canvasElement}){const textarea=(0,dist.ux)(canvasElement).getByRole("textbox");yield dist.Q4.tab(),(0,dist.E3)(textarea).toHaveFocus(),textarea.blur()}),function play(_x4){return _ref4.apply(this,arguments)})};var _ref4;const __namedExportsOrder=["Default","CharacterCount","Error","ReadOnly","Disabled","KeyboardInteraction"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    id: "my-textarea",\n    label: "Label",\n    labelId: "LabelId",\n    labelPosition: "top",\n    assistiveTextLabel: "Assistive text label",\n    assistiveTextLink: "https://example.com",\n    assistiveTextAppearance: "description",\n    required: false,\n    value: "",\n    rows: 3,\n    showLabelRequirement: false,\n    showCounter: false,\n    change: mockFn\n  },\n  render: args => ({\n    props: {\n      ...args\n    },\n    template: `\n    <div style="width: 350px">\n      <rte-textarea\n        [id]="\'${args.id}\'"\n        [label]="\'${args.label}\'"\n        [labelId]="\'${args.labelId}\'"\n        [labelPosition]="\'${args.labelPosition}\'"\n        [assistiveTextLabel]="\'${args.assistiveTextLabel}\'"\n        [assistiveTextLink]="\'${args.assistiveTextLink}\'"\n        [assistiveTextAppearance]="\'${args.assistiveTextAppearance}\'"\n        [required]=${args.required}\n        [maxLength]=${args.maxLength}\n        [showCounter]=${args.showCounter}\n        [required]=${args.required}\n        [showLabelRequirement]=${args.showLabelRequirement}\n        [readOnly]=${args.readOnly}\n        [value]="\'${args.value}\'"\n        [rows]=${args.rows}\n        [disabled]=${args.disabled}\n        (change)="args.change($event)"\n        />\n    </div>\n    `\n  })\n}',...Default.parameters?.docs?.source}}},CharacterCount.parameters={...CharacterCount.parameters,docs:{...CharacterCount.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    maxLength: 10\n  },\n  render: args => ({\n    props: {\n      ...args\n    },\n    template: `\n    <div style="width: 350px">\n      <rte-textarea\n        [id]="\'${args.id}\'"\n        [label]="${args.label}"\n        [labelId]="\'${args.labelId}\'"\n        [labelPosition]="\'${args.labelPosition}\'"\n        [assistiveTextLabel]="\'${args.assistiveTextLabel}\'"\n        [assistiveTextLink]="\'${args.assistiveTextLink}\'"\n        [assistiveTextAppearance]="\'${args.assistiveTextAppearance}\'"\n        [required]=${args.required}\n        [maxLength]=${args.maxLength}\n        [showCounter]=${args.showCounter}\n        [required]=${args.required}\n        [showLabelRequirement]=${args.showLabelRequirement}\n        [readOnly]=${args.readOnly}\n        [value]="\'${args.value}\'"\n        [rows]=${args.rows}\n        [disabled]=${args.disabled}\n        (change)="change($event)"\n        />\n    </div>\n    `\n  }),\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const textarea = canvas.getByRole("textbox");\n    await userEvent.type(textarea, "Hello World");\n    expect(mockFn).toHaveBeenCalledTimes(10);\n    expect(textarea).toHaveValue("Hello Worl");\n  }\n}',...CharacterCount.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    maxLength: 100,\n    assistiveTextLabel: "Error message",\n    assistiveTextAppearance: "error"\n  },\n  render: args => ({\n    props: {\n      ...args\n    },\n    template: `\n    <div style="width: 350px">\n      <rte-textarea\n        [id]="\'${args.id}\'"\n        [label]="${args.label}"\n        [labelId]="\'${args.labelId}\'"\n        [labelPosition]="\'${args.labelPosition}\'"\n        [assistiveTextLabel]="\'${args.assistiveTextLabel}\'"\n        [assistiveTextLink]="\'${args.assistiveTextLink}\'"\n        [assistiveTextAppearance]="\'${args.assistiveTextAppearance}\'"\n        [required]=${args.required}\n        [maxLength]=${args.maxLength}\n        [showCounter]=${args.showCounter}\n        [required]=${args.required}\n        [showLabelRequirement]=${args.showLabelRequirement}\n        [readOnly]=${args.readOnly}\n        [value]="\'${args.value}\'"\n        [rows]=${args.rows}\n        [disabled]=${args.disabled}\n        (change)="change($event)"\n        />\n    </div>\n    `\n  })\n}',...Error.parameters?.docs?.source}}},ReadOnly.parameters={...ReadOnly.parameters,docs:{...ReadOnly.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    readOnly: true,\n    value: "This is a read-only textarea."\n  },\n  render: args => ({\n    props: {\n      ...args\n    },\n    template: `\n    <div style="width: 350px">\n      <rte-textarea\n        [id]="\'${args.id}\'"\n        [label]="${args.label}"\n        [labelId]="\'${args.labelId}\'"\n        [labelPosition]="\'${args.labelPosition}\'"\n        [assistiveTextLabel]="\'${args.assistiveTextLabel}\'"\n        [assistiveTextLink]="\'${args.assistiveTextLink}\'"\n        [assistiveTextAppearance]="\'${args.assistiveTextAppearance}\'"\n        [required]=${args.required}\n        [maxLength]=${args.maxLength}\n        [showCounter]=${args.showCounter}\n        [required]=${args.required}\n        [showLabelRequirement]=${args.showLabelRequirement}\n        [readOnly]=${args.readOnly}\n        [value]="\'${args.value}\'"\n        [rows]=${args.rows}\n        [disabled]=${args.disabled}\n        (change)="change($event)"\n        />\n    </div>\n    `\n  }),\n  play: async ({\n    canvasElement,\n    args\n  }) => {\n    const canvas = within(canvasElement);\n    const textarea = canvas.getByRole("textbox");\n    await userEvent.tab();\n    expect(textarea).toHaveFocus();\n    await userEvent.type(textarea, "Hello World");\n    expect(mockFn).not.toHaveBeenCalled();\n    expect(textarea).toHaveValue(args.value);\n  }\n}',...ReadOnly.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    disabled: true\n  },\n  render: args => ({\n    props: {\n      ...args\n    },\n    template: `\n    <div style="width: 350px">\n      <rte-textarea\n        [id]="\'${args.id}\'"\n        [label]="${args.label}"\n        [labelId]="\'${args.labelId}\'"\n        [labelPosition]="\'${args.labelPosition}\'"\n        [assistiveTextLabel]="\'${args.assistiveTextLabel}\'"\n        [assistiveTextLink]="\'${args.assistiveTextLink}\'"\n        [assistiveTextAppearance]="\'${args.assistiveTextAppearance}\'"\n        [required]=${args.required}\n        [maxLength]=${args.maxLength}\n        [showCounter]=${args.showCounter}\n        [required]=${args.required}\n        [showLabelRequirement]=${args.showLabelRequirement}\n        [readOnly]=${args.readOnly}\n        [value]="\'${args.value}\'"\n        [rows]=${args.rows}\n        [disabled]=${args.disabled}\n        (change)="change($event)"\n        />\n    </div>\n    `\n  }),\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const textarea = canvas.getByRole("textbox");\n    await userEvent.tab();\n    expect(textarea).not.toHaveFocus();\n  }\n}',...Disabled.parameters?.docs?.source}}},KeyboardInteraction.parameters={...KeyboardInteraction.parameters,docs:{...KeyboardInteraction.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args\n  },\n  render: args => ({\n    props: {\n      ...args\n    },\n    template: `\n    <div style="width: 350px">\n      <rte-textarea\n        [id]="\'${args.id}\'"\n        [label]="${args.label}"\n        [labelId]="\'${args.labelId}\'"\n        [labelPosition]="\'${args.labelPosition}\'"\n        [assistiveTextLabel]="\'${args.assistiveTextLabel}\'"\n        [assistiveTextLink]="\'${args.assistiveTextLink}\'"\n        [assistiveTextAppearance]="\'${args.assistiveTextAppearance}\'"\n        [required]=${args.required}\n        [maxLength]=${args.maxLength}\n        [showCounter]=${args.showCounter}\n        [required]=${args.required}\n        [showLabelRequirement]=${args.showLabelRequirement}\n        [readOnly]=${args.readOnly}\n        [value]="\'${args.value}\'"\n        [rows]=${args.rows}\n        [disabled]=${args.disabled}\n        (change)="change($event)"\n        />\n    </div>\n    `\n  }),\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const textarea = canvas.getByRole("textbox");\n    await userEvent.tab();\n    expect(textarea).toHaveFocus();\n    textarea.blur();\n  }\n}',...KeyboardInteraction.parameters?.docs?.source}}}},"./projects/ds-rte-lib/src/lib/components/icon/icon.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("../../node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("../../node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,".rte-icon-container {\n  display: flex;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/ds-rte-lib/src/lib/components/link/link.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("../../node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("../../node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:wght,FILL,GRAD@400,0,0&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,200..1000;1,200..1000&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.rte-link {\n  font-feature-settings: "liga" off, "clig" off;\n  font-style: normal;\n  font-family: "Arial";\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0px;\n  align-items: center;\n  cursor: pointer;\n  display: inline-flex;\n  justify-content: center;\n}\n.rte-link:visited {\n  color: var(--content-link-visited);\n  text-decoration: underline;\n}\n.rte-link:visited:hover {\n  color: var(--content-link-visited-hover);\n  text-decoration: none;\n}\n.rte-link:visited:active {\n  color: var(--content-link-visited-press);\n  text-decoration: underline;\n}\n.rte-link:visited:focus-visible {\n  color: var(--content-link-visited);\n  text-decoration: underline;\n  outline: 1px solid var(--border-brand-focused);\n  outline-offset: 4px;\n  border-radius: 4px;\n}\n.rte-link:not(:visited) {\n  color: var(--content-link-default);\n}\n.rte-link:not(:visited):hover {\n  color: var(--content-link-hover);\n  text-decoration: none;\n}\n.rte-link:not(:visited):active {\n  color: var(--content-link-press);\n  text-decoration: underline;\n}\n.rte-link:not(:visited):focus-visible {\n  color: var(--content-link-default);\n  text-decoration: underline;\n  outline: 1px solid var(--border-brand-focused);\n  outline-offset: 4px;\n  border-radius: 4px;\n}\n.rte-link.subtle:visited {\n  color: var(--content-primary);\n  text-decoration: none;\n}\n.rte-link.subtle:visited:hover {\n  color: var(--content-link-secondary);\n  text-decoration: underline;\n}\n.rte-link.subtle:visited:active {\n  color: var(--content-link-primary);\n  text-decoration: none;\n}\n.rte-link.subtle:visited:focus-visible {\n  color: var(--content-link-primary);\n  text-decoration: none;\n  outline: 1px solid var(--border-brand-focused);\n  outline-offset: 4px;\n  border-radius: 4px;\n}\n.rte-link.subtle:not(:visited) {\n  color: var(--content-primary);\n  text-decoration: none;\n}\n.rte-link.subtle:not(:visited):hover {\n  color: var(--content-secondary);\n  text-decoration: underline;\n}\n.rte-link.subtle:not(:visited):active {\n  color: var(--content-primary);\n  text-decoration: none;\n}\n.rte-link.subtle:not(:visited):focus-visible {\n  color: var(--content-primary);\n  text-decoration: none;\n  outline: 1px solid var(--border-brand-focused);\n  outline-offset: 4px;\n  border-radius: 4px;\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/ds-rte-lib/src/lib/components/textarea/textarea.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("../../node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("../../node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:wght,FILL,GRAD@400,0,0&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,200..1000;1,200..1000&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,'.container[data-label-position=side] {\n  display: flex;\n  flex-direction: row;\n}\n\n.top-position-container {\n  font-feature-settings: "liga" off, "clig" off;\n  font-style: normal;\n  font-family: "Arial";\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0px;\n  display: flex;\n  height: 100%;\n  padding: 0px;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 0px;\n  flex-shrink: 0;\n  border-radius: 0px;\n  opacity: 100%;\n}\n.top-position-container[data-label-position=side] {\n  flex-grow: 1;\n}\n.top-position-container .header-container {\n  display: flex;\n  width: 100%;\n  flex-direction: row;\n  align-items: flex-end;\n  justify-content: space-between;\n  padding: 2px 8px;\n  box-sizing: border-box;\n  gap: 8px;\n}\n.top-position-container .header-container[data-label-position=side] {\n  padding: 0;\n  justify-content: flex-end;\n}\n.top-position-container .textarea-container {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  align-items: flex-start;\n}\n.top-position-container .textarea-container .textarea {\n  box-shadow: inset 0px 1px 4px 0px var(--elevation-shadow-key);\n  background: linear-gradient(0deg, var(--elevation-surface-inner-shadow) 0%, var(--elevation-surface-inner-shadow) 100%);\n  font-feature-settings: "liga" off, "clig" off;\n  font-style: normal;\n  font-family: "Arial";\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0px;\n  color: var(--content-primary);\n  min-height: 70px;\n  padding: 8px 16px 8px 16px;\n  width: 100%;\n  min-width: 140px;\n  border-radius: 8px;\n  border: 1px solid var(--border-secondary);\n  opacity: 100%;\n  background-color: var(--background-default);\n  resize: none;\n  box-sizing: border-box;\n}\n@media (min-width: 1024px) {\n  .top-position-container .textarea-container .textarea {\n    min-height: 56px;\n    min-width: 112px;\n    max-width: 1100px;\n  }\n}\n.top-position-container .textarea-container .textarea:focus-visible, .top-position-container .textarea-container .textarea:active {\n  outline: none;\n}\n.top-position-container .textarea-container .textarea:focus-visible:not(:disabled), .top-position-container .textarea-container .textarea:active:not(:disabled) {\n  outline: 1px solid var(--border-brand-default);\n  border: 1px solid var(--border-brand-default);\n}\n.top-position-container .textarea-container .textarea.error:not(:disabled) {\n  outline: 1px solid var(--border-danger);\n  border: 1px solid var(--border-danger);\n}\n.top-position-container .textarea-container .textarea.resizeable {\n  resize: vertical;\n}\n.top-position-container .textarea-container .textarea:disabled, .top-position-container .textarea-container .textarea:read-only {\n  cursor: not-allowed;\n  background-color: var(--background-disabled);\n}\n.top-position-container .textarea-container .textarea:disabled {\n  resize: none;\n}\n.top-position-container .textarea-container .textarea:read-only {\n  color: var(--content-secondary);\n}\n.top-position-container .textarea-container .assistive-text-link {\n  padding: 4px 8px;\n}\n.top-position-container .textarea-container .assistive-text {\n  font-feature-settings: "liga" off, "clig" off;\n  font-style: normal;\n  font-family: "Arial";\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: 0px;\n  display: flex;\n  padding: 4px 8px;\n  color: var(--content-tertiary);\n  gap: 4px;\n}\n.top-position-container .textarea-container .assistive-text.error:not(.disabled) {\n  color: var(--content-danger);\n}\n.top-position-container .textarea-container .assistive-text.success {\n  color: var(--content-success);\n}\n\n.character-counter {\n  font-feature-settings: "liga" off, "clig" off;\n  font-style: normal;\n  font-family: "Arial";\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: 0px;\n  color: var(--content-tertiary);\n}\n\nlabel {\n  font-feature-settings: "liga" off, "clig" off;\n  font-style: normal;\n  font-family: "Arial";\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0px;\n  color: var(--content-secondary);\n  max-width: 300px;\n  justify-content: space-between;\n  white-space: normal;\n  overflow-wrap: normal;\n  word-break: normal;\n}\nlabel[data-label-position=side] {\n  padding: 24px 8px;\n  align-items: flex-start;\n  gap: 0px;\n  align-self: stretch;\n}\nlabel .requirement-indicator {\n  margin-left: 2px;\n}\nlabel .requirement-indicator.show-label-requirement {\n  font-feature-settings: "liga" off, "clig" off;\n  font-style: normal;\n  font-family: "Arial";\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: 0px;\n  color: var(--content-tertiary);\n}\nlabel .requirement-indicator.show-label-requirement:not(.required) {\n  font-style: italic;\n}\nlabel .requirement-indicator:not(.show-label-requirement).required {\n  color: var(--content-danger);\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/ds-rte-lib/src/lib/components/icon/icon-map.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{pL:()=>RegularIcons,kb:()=>TogglableIcons,vW:()=>icon_map_isValidIconName});const RegularIcons={add:"add","alt-route":"alt_route",apps:"apps","arrow-alt-down":"arrow_alt_down","arrow-alt-down-left":"arrow_alt_down_left","arrow-alt-down-right":"arrow_alt_down_right","arrow-alt-left":"arrow_alt_left","arrow-alt-right":"arrow_alt_right","arrow-alt-up":"arrow_alt_up","arrow-alt-up-left":"arrow_alt_up_left","arrow-alt-up-right":"arrow_alt_up_right","arrow-angle-down-left":"arrow_angle_down_left","arrow-angle-down-right":"arrow_angle_down_right","arrow-angle-up-left":"arrow_angle_up_left","arrow-angle-up-right":"arrow_angle_up_right","arrow-chevron-down":"arrow_chevron_down","arrow-chevron-left":"arrow_chevron_left","arrow-chevron-right":"arrow_chevron_right","arrow-chevron-up":"arrow_chevron_up","arrow-double-down":"arrow_double_down","arrow-double-left":"arrow_double_left","arrow-double-right":"arrow_double_right","arrow-double-up":"arrow_double_up","arrow-down":"arrow_down","arrow-down-left":"arrow_down_left","arrow-down-right":"arrow_down_right","arrow-drop-down":"arrow_drop_down","arrow-drop-up":"arrow_drop_up","arrow-left":"arrow_left","arrow-right":"arrow_right","arrow-up":"arrow_up","arrow-up-left":"arrow_up_left","arrow-up-right":"arrow_up_right",asterisk:"asterisk","attach-file":"attach_file","battery-alt-empty":"battery_alt_empty","battery-alt-full":"battery_alt_full","battery-charging":"battery_charging","battery-empty":"battery_empty","battery-full":"battery_full",bluetooth:"bluetooth","bluetooth-off":"bluetooth_off","chart-bar":"chart_bar","chart-bar-stacked":"chart_bar_stacked",check:"check","check-indeterminate":"check_indeterminate","check-small":"check_small","checkbox-empty":"checkbox_empty",close:"close",compare:"compare","copy-all":"copy_all","crisis-alert":"crisis_alert",cut:"cut",download:"download","download-done":"download_done","drag-handle":"drag_handle","drag-indicator":"drag_indicator",exclamation:"exclamation","explore-travel":"explore_travel","external-link":"external_link",filter:"filter","filter-off":"filter_off","first-page":"first_page",forward:"forward",fullscreen:"fullscreen","fullscreen-exit":"fullscreen_exit",history:"history","hourglass-empty":"hourglass_empty","info-i":"info_i",language:"language","last-page":"last_page",link:"link","link-off":"link_off",list:"list","location-disabled":"location_disabled",login:"login",logout:"logout",menu:"menu","menu-open":"menu_open",monitoring:"monitoring","more-down":"more_down","more-horiz":"more_horiz","more-up":"more_up","more-vert":"more_vert",ohm:"ohm","open-in-full":"open_in_full",paste:"paste","play-pause":"play_pause","power-input":"power_input","power-plug":"power_plug","power-settings":"power_settings","priority-high":"priority_high",public:"public",publish:"publish","question-mark":"question_mark",radar:"radar","radio-button-empty":"radio_button_empty",redo:"redo",reload:"reload",remove:"remove",reply:"reply","reply-all":"reply_all",route:"route",search:"search","side-navigation":"side_navigation",sort:"sort","support-agent":"support_agent",timeline:"timeline","trending-down":"trending_down","trending-flat":"trending_flat","trending-up":"trending_up",tune:"tune",undo:"undo",upload:"upload",water:"water","water-alt":"water_alt",wifi:"wifi","wifi-off":"wifi_off",windmill:"windmill","zoom-in":"zoom_in","zoom-out":"zoom_out"},TogglableIcons={"add-circle":["add_circle_outlined","add_circle_filled"],"admin-panel-settings":["admin_panel_settings_outlined","admin_panel_settings_filled"],analytics:["analytics_outlined","analytics_filled"],archive:["archive_outlined","archive_filled"],"arrow-circle-chevron-down":["arrow_circle_chevron_down_outlined","arrow_circle_chevron_down_filled"],"arrow-circle-chevron-left":["arrow_circle_chevron_left_outlined","arrow_circle_chevron_left_filled"],"arrow-circle-chevron-right":["arrow_circle_chevron_right_outlined","arrow_circle_chevron_right_filled"],"arrow-circle-chevron-up":["arrow_circle_chevron_up_outlined","arrow_circle_chevron_up_filled"],"arrow-circle-down":["arrow_circle_down_outlined","arrow_circle_down_filled"],"arrow-circle-left":["arrow_circle_left_outlined","arrow_circle_left_filled"],"arrow-circle-right":["arrow_circle_right_outlined","arrow_circle_right_filled"],"arrow-circle-up":["arrow_circle_up_outlined","arrow_circle_up_filled"],article:["article_outlined","article_filled"],"assignment-complete":["assignment_complete_outlined","assignment_complete_filled"],assignment:["assignment_outlined","assignment_filled"],"battery-alert":["battery_alert_outlined","battery_alert_filled"],"battery-charging-full":["battery_charging_full_outlined","battery_charging_full_filled"],"bolt-alt-circle":["bolt_alt_circle_outlined","bolt_alt_circle_filled"],"bolt-alt":["bolt_alt_outlined","bolt_alt_filled"],"bolt-circle":["bolt_circle_outlined","bolt_circle_filled"],bolt:["bolt_outlined","bolt_filled"],bookmark:["bookmark_outlined","bookmark_filled"],bookmarks:["bookmarks_outlined","bookmarks_filled"],build:["build_outlined","build_filled"],"calendar-available":["calendar_available_outlined","calendar_available_filled"],"calendar-busy":["calendar_busy_outlined","calendar_busy_filled"],"calendar-month":["calendar_month_outlined","calendar_month_filled"],"calendar-today":["calendar_today_outlined","calendar_today_filled"],call:["call_outlined","call_filled"],cancel:["cancel_outlined","cancel_filled"],category:["category_outlined","category_filled"],"chart-add":["chart_add_outlined","chart_add_filled"],"chart-area":["chart_area_outlined","chart_area_filled"],"chart-pie":["chart_pie_outlined","chart_pie_filled"],"chart-table":["chart_table_outlined","chart_table_filled"],"chat-alt":["chat_alt_outlined","chat_alt_filled"],"chat-alt-unread":["chat_alt_unread_outlined","chat_alt_unread_filled"],chat:["chat_outlined","chat_filled"],"chat-unread":["chat_unread_outlined","chat_unread_filled"],"check-circle":["check_circle_outlined","check_circle_filled"],checkbox:["checkbox_outlined","checkbox_filled"],"checkbox-indeterminate":["checkbox_indeterminate_outlined","checkbox_indeterminate_filled"],clock:["clock_outlined","clock_filled"],"cloud-download":["cloud_download_outlined","cloud_download_filled"],cloud:["cloud_outlined","cloud_filled"],"cloud-off":["cloud_off_outlined","cloud_off_filled"],"cloud-upload":["cloud_upload_outlined","cloud_upload_filled"],"comment-add":["comment_add_outlined","comment_add_filled"],comment:["comment_outlined","comment_filled"],copy:["copy_outlined","copy_filled"],dangerous:["dangerous_outlined","dangerous_filled"],dashboard:["dashboard_outlined","dashboard_filled"],database:["database_outlined","database_filled"],delete:["delete_outlined","delete_filled"],desktop:["desktop_outlined","desktop_filled"],devices:["devices_outlined","devices_filled"],draft:["draft_outlined","draft_filled"],eco:["eco_outlined","eco_filled"],edit:["edit_outlined","edit_filled"],"electric-meter":["electric_meter_outlined","electric_meter_filled"],error:["error_outlined","error_filled"],explore:["explore_outlined","explore_filled"],"explore-off":["explore_off_outlined","explore_off_filled"],"fast-forward":["fast_forward_outlined","fast_forward_filled"],"fast-rewind":["fast_rewind_outlined","fast_rewind_filled"],feedback:["feedback_outlined","feedback_filled"],"file-copy":["file_copy_outlined","file_copy_filled"],"file-download":["file_download_outlined","file_download_filled"],"file-upload":["file_upload_outlined","file_upload_filled"],"filter-alt":["filter_alt_outlined","filter_alt_filled"],"filter-alt-off":["filter_alt_off_outlined","filter_alt_off_filled"],fire:["fire_outlined","fire_filled"],"fit-screen":["fit_screen_outlined","fit_screen_filled"],flag:["flag_outlined","flag_filled"],flash:["flash_outlined","flash_filled"],"flash-off":["flash_off_outlined","flash_off_filled"],"folder-add":["folder_add_outlined","folder_add_filled"],folder:["folder_outlined","folder_filled"],"folder-move":["folder_move_outlined","folder_move_filled"],"folder-open":["folder_open_outlined","folder_open_filled"],"folder-shared":["folder_shared_outlined","folder_shared_filled"],forum:["forum_outlined","forum_filled"],"group-add":["group_add_outlined","group_add_filled"],group:["group_outlined","group_filled"],groups:["groups_outlined","groups_filled"],headphones:["headphones_outlined","headphones_filled"],heart:["heart_outlined","heart_filled"],help:["help_outlined","help_filled"],home:["home_outlined","home_filled"],hourglass:["hourglass_outlined","hourglass_filled"],"image-broken":["image_broken_outlined","image_broken_filled"],image:["image_outlined","image_filled"],"image-gallery":["image_gallery_outlined","image_gallery_filled"],inbox:["inbox_outlined","inbox_filled"],info:["info_outlined","info_filled"],keep:["keep_outlined","keep_filled"],"keep-off":["keep_off_outlined","keep_off_filled"],label:["label_outlined","label_filled"],laptop:["laptop_outlined","laptop_filled"],"left-panel-close":["left_panel_close_outlined","left_panel_close_filled"],"left-panel-open":["left_panel_open_outlined","left_panel_open_filled"],"light-off":["light_off_outlined","light_off_filled"],"lightbulb-alt":["lightbulb_alt_outlined","lightbulb_alt_filled"],"lightbulb-circle":["lightbulb_circle_outlined","lightbulb_circle_filled"],lightbulb:["lightbulb_outlined","lightbulb_filled"],"list-alt":["list_alt_outlined","list_alt_filled"],"location-me":["location_me_outlined","location_me_filled"],"location-off":["location_off_outlined","location_off_filled"],"location-on":["location_on_outlined","location_on_filled"],lock:["lock_outlined","lock_filled"],"lock-open":["lock_open_outlined","lock_open_filled"],"lock-open-right":["lock_open_right_outlined","lock_open_right_filled"],mail:["mail_outlined","mail_filled"],"mail-unread":["mail_unread_outlined","mail_unread_filled"],map:["map_outlined","map_filled"],mic:["mic_outlined","mic_filled"],"mic-off":["mic_off_outlined","mic_off_filled"],"mode-dark":["mode_dark_outlined","mode_dark_filled"],"mode-light":["mode_light_outlined","mode_light_filled"],notification:["notification_outlined","notification_filled"],"notification-important":["notification_important_outlined","notification_important_filled"],"notification-off":["notification_off_outlined","notification_off_filled"],"notification-unread":["notification_unread_outlined","notification_unread_filled"],palette:["palette_outlined","palette_filled"],"pause-circle":["pause_circle_outlined","pause_circle_filled"],pause:["pause_outlined","pause_filled"],"photo-camera":["photo_camera_outlined","photo_camera_filled"],"play-circle":["play_circle_outlined","play_circle_filled"],play:["play_outlined","play_filled"],power:["power_outlined","power_filled"],"power-off":["power_off_outlined","power_off_filled"],"power-plug-connect":["power_plug_connect_outlined","power_plug_connect_filled"],"power-settings-circle":["power_settings_circle_outlined","power_settings_circle_filled"],"power-solar":["power_solar_outlined","power_solar_filled"],"power-switch":["power_switch_outlined","power_switch_filled"],"power-wind":["power_wind_outlined","power_wind_filled"],print:["print_outlined","print_filled"],"right-panel-close":["right_panel_close_outlined","right_panel_close_filled"],"right-panel-open":["right_panel_open_outlined","right_panel_open_filled"],save:["save_outlined","save_filled"],send:["send_outlined","send_filled"],settings:["settings_outlined","settings_filled"],share:["share_outlined","share_filled"],"skip-next":["skip_next_outlined","skip_next_filled"],"skip-previous":["skip_previous_outlined","skip_previous_filled"],smartphone:["smartphone_outlined","smartphone_filled"],star:["star_outlined","star_filled"],"sticky-note":["sticky_note_outlined","sticky_note_filled"],"stop-circle":["stop_circle_outlined","stop_circle_filled"],stop:["stop_outlined","stop_filled"],subtitles:["subtitles_outlined","subtitles_filled"],"text-snippet":["text_snippet_outlined","text_snippet_filled"],"trash-restore":["trash_restore_outlined","trash_restore_filled"],unarchive:["unarchive_outlined","unarchive_filled"],"user-add":["user_add_outlined","user_add_filled"],"user-circle":["user_circle_outlined","user_circle_filled"],user:["user_outlined","user_filled"],"user-settings":["user_settings_outlined","user_settings_filled"],verified:["verified_outlined","verified_filled"],"video-camera":["video_camera_outlined","video_camera_filled"],"video-camera-off":["video_camera_off_outlined","video_camera_off_filled"],"video-gallery":["video_gallery_outlined","video_gallery_filled"],"view-agenda":["view_agenda_outlined","view_agenda_filled"],"view-column":["view_column_outlined","view_column_filled"],"view-grid":["view_grid_outlined","view_grid_filled"],"view-kanban":["view_kanban_outlined","view_kanban_filled"],"view-module":["view_module_outlined","view_module_filled"],"view-timeline":["view_timeline_outlined","view_timeline_filled"],"visibility-hide":["visibility_hide_outlined","visibility_hide_filled"],"visibility-show":["visibility_show_outlined","visibility_show_filled"],"volume-down":["volume_down_outlined","volume_down_filled"],"volume-mute":["volume_mute_outlined","volume_mute_filled"],"volume-off":["volume_off_outlined","volume_off_filled"],"volume-up":["volume_up_outlined","volume_up_filled"],warning:["warning_outlined","warning_filled"],waterdrop:["waterdrop_outlined","waterdrop_filled"]};function icon_map_isValidIconName(iconName){return function isValidIconName(name,...iconSets){return iconSets.some(iconSet=>name in iconSet)}(iconName,RegularIcons,TogglableIcons)}},"./projects/ds-rte-lib/src/lib/components/icon/icon.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>IconComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var icon_componentngResource=__webpack_require__("./projects/ds-rte-lib/src/lib/components/icon/icon.component.scss?ngResource"),icon_componentngResource_default=__webpack_require__.n(icon_componentngResource),common=__webpack_require__("../../node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("../../node_modules/@angular/core/fesm2022/core.mjs"),rxjs_interop=__webpack_require__("../../node_modules/@angular/core/fesm2022/rxjs-interop.mjs"),platform_browser=__webpack_require__("../../node_modules/@angular/platform-browser/fesm2022/platform-browser.mjs"),http=__webpack_require__("../../node_modules/@angular/common/fesm2022/http.mjs"),icon_map=__webpack_require__("./projects/ds-rte-lib/src/lib/components/icon/icon-map.ts");let IconService=class IconService{constructor(){this.http=(0,core.inject)(http.Qq)}getSvg(name,appearance){if(!this.http)throw new Error("HttpClient is not available");const togglableIcon=icon_map.kb[name];if(togglableIcon){const[outlinedIconName,filledIconName]=togglableIcon,iconName="filled"===appearance?filledIconName:outlinedIconName;return this.http.get(`assets/icons/${iconName}.svg`,{responseType:"text"})}{const iconName=icon_map.pL[name];if(!iconName)throw new Error(`Icon ${name} not found`);return this.http.get(`assets/icons/${iconName}.svg`,{responseType:"text"})}}};IconService=(0,tslib_es6.Cg)([(0,core.Injectable)()],IconService);let IconComponent=class IconComponent{constructor(){this.name=core.input.required(),this.size=(0,core.input)(20),this.color=(0,core.input)("currentColor"),this.classes=(0,core.input)(""),this.appearance=(0,core.input)(),this.destroyRef=(0,core.inject)(core.DestroyRef),this.svgContent=null,this.sanitizer=(0,core.inject)(platform_browser.DomSanitizer),this.iconService=(0,core.inject)(IconService),this.cdr=(0,core.inject)(core.ChangeDetectorRef),(0,core.effect)(()=>{this.setSvgContent(this.name())})}setSvgContent(svgName){this.iconService.getSvg(svgName,this.appearance()||"outlined").pipe((0,rxjs_interop.pQ)(this.destroyRef)).subscribe(res=>{const size=this.size(),svgWithSize=res.replace(/<svg([^>]*)>/,`<svg$1 width="${size}" height="${size}">`);this.svgContent=this.sanitizer.bypassSecurityTrustHtml(svgWithSize),this.cdr.markForCheck()})}static{this.ctorParameters=()=>[]}static{this.propDecorators={name:[{type:core.Input,args:[{isSignal:!0,alias:"name",required:!0,transform:void 0}]}],size:[{type:core.Input,args:[{isSignal:!0,alias:"size",required:!1,transform:void 0}]}],color:[{type:core.Input,args:[{isSignal:!0,alias:"color",required:!1,transform:void 0}]}],classes:[{type:core.Input,args:[{isSignal:!0,alias:"classes",required:!1,transform:void 0}]}],appearance:[{type:core.Input,args:[{isSignal:!0,alias:"appearance",required:!1,transform:void 0}]}]}}};IconComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"rte-icon",imports:[common.CommonModule],standalone:!0,template:'<div class="rte-icon-container" [innerHTML]="svgContent" [style.height]="(size())+\'px\'" [style.width]="(size())+\'px\'"></div>',changeDetection:core.ChangeDetectionStrategy.OnPush,providers:[IconService],styles:[icon_componentngResource_default()]})],IconComponent)},"./projects/ds-rte-lib/src/lib/components/link/link.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{g:()=>LinkComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var link_componentngResource=__webpack_require__("./projects/ds-rte-lib/src/lib/components/link/link.component.scss?ngResource"),link_componentngResource_default=__webpack_require__.n(link_componentngResource),common=__webpack_require__("../../node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("../../node_modules/@angular/core/fesm2022/core.mjs"),icon_component=__webpack_require__("./projects/ds-rte-lib/src/lib/components/icon/icon.component.ts");let LinkComponent=class LinkComponent{constructor(){this.label=(0,core.input)(""),this.href=(0,core.input)("#"),this.subtle=(0,core.input)(!1),this.externalLink=(0,core.input)(!1)}static{this.propDecorators={label:[{type:core.Input,args:[{isSignal:!0,alias:"label",required:!1,transform:void 0}]}],href:[{type:core.Input,args:[{isSignal:!0,alias:"href",required:!1,transform:void 0}]}],subtle:[{type:core.Input,args:[{isSignal:!0,alias:"subtle",required:!1,transform:void 0}]}],externalLink:[{type:core.Input,args:[{isSignal:!0,alias:"externalLink",required:!1,transform:void 0}]}]}}};LinkComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"rte-link",imports:[common.CommonModule,icon_component.R],standalone:!0,template:'<a href="{{ href() }}" class="rte-link" role="link" [ngClass]="{\'subtle\': subtle()}" [target]="externalLink() ? \'_blank\' : undefined" [rel]="externalLink() ? \'noopener noreferrer\' : null">\n    <span class="rte-link-label">\n        {{ label() }}\n    </span>\n    <rte-icon *ngIf="externalLink()" name="external-link" [size]="12"></rte-icon>\n</a>',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[link_componentngResource_default()]})],LinkComponent)}}]);