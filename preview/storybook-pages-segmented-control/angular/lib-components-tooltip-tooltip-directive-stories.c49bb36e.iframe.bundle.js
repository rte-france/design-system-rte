(self.webpackChunk_design_system_rte_angular_builder=self.webpackChunk_design_system_rte_angular_builder||[]).push([[49481],{"./projects/ds-rte-lib/src/lib/components/tooltip/tooltip.directive.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Alignment:()=>Alignment,Arrow:()=>Arrow,AutoPlacement:()=>AutoPlacement,Default:()=>Default,KeyboardInteraction:()=>KeyboardInteraction,Position:()=>Position,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _home_runner_work_design_system_rte_design_system_rte_packages_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"),_storybook_test__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@storybook/test/dist/index.mjs"),_tooltip_directive__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./projects/ds-rte-lib/src/lib/components/tooltip/tooltip.directive.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Tooltip",component:_tooltip_directive__WEBPACK_IMPORTED_MODULE_1__.d,tags:["autodocs"],argTypes:{rteTooltip:{control:"text",defaultValue:"Tooltip Text"},rteTooltipPosition:{control:"select",options:["auto","top","bottom","left","right"],defaultValue:"top"},rteTooltipAlignment:{control:"select",options:["start","center","end"],defaultValue:"center"},rteTooltipArrow:{control:"boolean",defaultValue:!0}},parameters:{layout:"centered"}},mockHost=tooltipDirectives=>`\n<div style="\n    text-decoration: underline;\n    text-decoration-color: #BF4C00;\n    text-decoration-thickness: 2px;\n    text-underline-offset: 4px;\n    color: #BF4C00;\n    font-weight: bold;\n"\n    ${tooltipDirectives}\n>\n    Hover Me!\n</div>\n`,Default={args:{rteTooltip:"Tooltip",rteTooltipPosition:"top",rteTooltipAlignment:"center",rteTooltipArrow:!0},render:args=>({props:args,declarations:[_tooltip_directive__WEBPACK_IMPORTED_MODULE_1__.d],template:mockHost('\n            [rteTooltip]="rteTooltip"\n            [rteTooltipPosition]="rteTooltipPosition"\n            [rteTooltipAlignment]="rteTooltipAlignment"\n            [rteTooltipArrow]="rteTooltipArrow"\n        ')})},Position={args:Default.args,render:args=>({props:args,declarations:[_tooltip_directive__WEBPACK_IMPORTED_MODULE_1__.d],template:`\n        <div style="display: flex; flex-direction: column; align-items: center; gap: 16px;">\n            ${mockHost('\n                rteTooltipPosition="top"\n                [rteTooltip]="rteTooltip"\n                [rteTooltipAlignment]="rteTooltipAlignment"\n                [rteTooltipArrow]="rteTooltipArrow"\n            ')}\n            ${mockHost('\n                rteTooltipPosition="bottom"\n                [rteTooltip]="rteTooltip"\n                [rteTooltipAlignment]="rteTooltipAlignment"\n                [rteTooltipArrow]="rteTooltipArrow"\n            ')}\n            ${mockHost('\n                rteTooltipPosition="left"\n                [rteTooltip]="rteTooltip"\n                [rteTooltipAlignment]="rteTooltipAlignment"\n                [rteTooltipArrow]="rteTooltipArrow"\n            ')}\n            ${mockHost('\n                rteTooltipPosition="right"\n                [rteTooltip]="rteTooltip"\n                [rteTooltipAlignment]="rteTooltipAlignment"\n                [rteTooltipArrow]="rteTooltipArrow"\n            ')}\n        </div>\n        `})},Alignment={args:Default.args,render:args=>({props:args,declarations:[_tooltip_directive__WEBPACK_IMPORTED_MODULE_1__.d],template:`\n        <div style="display: flex; flex-direction: column; align-items: center; gap: 16px;">\n            ${mockHost('\n                rteTooltipAlignment="start"\n                [rteTooltipPosition]="rteTooltipPosition"\n                [rteTooltip]="rteTooltip"\n                [rteTooltipArrow]="rteTooltipArrow"\n            ')}\n            ${mockHost('\n                rteTooltipAlignment="center"\n                [rteTooltipPosition]="rteTooltipPosition"\n                [rteTooltip]="rteTooltip"\n                [rteTooltipArrow]="rteTooltipArrow"\n            ')}\n            ${mockHost('\n                rteTooltipAlignment="end"\n                [rteTooltipPosition]="rteTooltipPosition"\n                [rteTooltip]="rteTooltip"\n                [rteTooltipArrow]="rteTooltipArrow"\n            ')}\n        </div>\n        `})},Arrow={args:Default.args,render:args=>({props:args,declarations:[_tooltip_directive__WEBPACK_IMPORTED_MODULE_1__.d],template:`\n        <div style="display: flex; gap: 8;">\n            ${mockHost('\n                [rteTooltipArrow]="true"\n                [rteTooltipPosition]="rteTooltipPosition"\n                [rteTooltip]="rteTooltip"\n            ')}\n            ${mockHost('\n                [rteTooltipArrow]="false"\n                [rteTooltipPosition]="rteTooltipPosition"\n                [rteTooltip]="rteTooltip"\n            ')}\n        </div>\n        `})},AutoPlacement={args:Default.args,render:args=>({props:args,declarations:[_tooltip_directive__WEBPACK_IMPORTED_MODULE_1__.d],template:`\n        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 8px;">\n            <div style="display: flex; align-items: flex-start; justify-content: flex-start; gap: 8px; border: 1px solid red; width: 75px; height: 250px;">\n                ${mockHost('\n                    rteTooltipPosition="auto"\n                    [rteTooltip]="rteTooltip"\n                ')}\n            </div>\n\n            <div style="display: flex; align-items: center; justify-content: flex-start; gap: 8px; border: 1px solid red; width: 250px; height: 50px;">\n                ${mockHost('\n                    rteTooltipPosition="auto"\n                    [rteTooltip]="rteTooltip"\n                ')}\n            </div>\n\n            <div style="display: flex; align-items: flex-end; justify-content: flex-end; gap: 8px; border: 1px solid red; width: 75px; height: 250px;">\n                ${mockHost('\n                    rteTooltipPosition="auto"\n                    [rteTooltip]="rteTooltip"\n                ')}\n            </div>\n\n            <div style="display: flex; align-items: center; justify-content: flex-end; gap: 8px; border: 1px solid red; width: 250px; height: 50px;">\n                ${mockHost('\n                    rteTooltipPosition="auto"\n                    [rteTooltip]="rteTooltip"\n                ')}\n            </div>\n        </div>\n        `})},KeyboardInteraction={args:Default.args,render:args=>({props:args,declarations:[_tooltip_directive__WEBPACK_IMPORTED_MODULE_1__.d],template:`\n        <div style="display: flex; gap: 8px;">\n            ${mockHost('[rteTooltip]="rteTooltip"')}\n        </div>\n        `}),play:(_ref=(0,_home_runner_work_design_system_rte_design_system_rte_packages_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_2__.A)(function*({canvasElement}){const tooltipTrigger=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.ux)(canvasElement).queryByText("Hover Me!");yield _storybook_test__WEBPACK_IMPORTED_MODULE_0__.Q4.tab();const tooltip=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.ux)(document.body).getByRole("tooltip");(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.E3)(tooltipTrigger).toHaveFocus(),yield(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.fm)(()=>(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.E3)(tooltip).toBeVisible())}),function play(_x){return _ref.apply(this,arguments)})};var _ref;const __namedExportsOrder=["Default","Position","Alignment","Arrow","AutoPlacement","KeyboardInteraction"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    rteTooltip: "Tooltip",\n    rteTooltipPosition: "top",\n    rteTooltipAlignment: "center",\n    rteTooltipArrow: true\n  },\n  render: args => ({\n    props: args,\n    declarations: [TooltipDirective],\n    template: mockHost(`\n            [rteTooltip]="rteTooltip"\n            [rteTooltipPosition]="rteTooltipPosition"\n            [rteTooltipAlignment]="rteTooltipAlignment"\n            [rteTooltipArrow]="rteTooltipArrow"\n        `)\n  })\n}',...Default.parameters?.docs?.source}}},Position.parameters={...Position.parameters,docs:{...Position.parameters?.docs,source:{originalSource:'{\n  args: Default.args,\n  render: args => ({\n    props: args,\n    declarations: [TooltipDirective],\n    template: `\n        <div style="display: flex; flex-direction: column; align-items: center; gap: 16px;">\n            ${mockHost(`\n                rteTooltipPosition="top"\n                [rteTooltip]="rteTooltip"\n                [rteTooltipAlignment]="rteTooltipAlignment"\n                [rteTooltipArrow]="rteTooltipArrow"\n            `)}\n            ${mockHost(`\n                rteTooltipPosition="bottom"\n                [rteTooltip]="rteTooltip"\n                [rteTooltipAlignment]="rteTooltipAlignment"\n                [rteTooltipArrow]="rteTooltipArrow"\n            `)}\n            ${mockHost(`\n                rteTooltipPosition="left"\n                [rteTooltip]="rteTooltip"\n                [rteTooltipAlignment]="rteTooltipAlignment"\n                [rteTooltipArrow]="rteTooltipArrow"\n            `)}\n            ${mockHost(`\n                rteTooltipPosition="right"\n                [rteTooltip]="rteTooltip"\n                [rteTooltipAlignment]="rteTooltipAlignment"\n                [rteTooltipArrow]="rteTooltipArrow"\n            `)}\n        </div>\n        `\n  })\n}',...Position.parameters?.docs?.source}}},Alignment.parameters={...Alignment.parameters,docs:{...Alignment.parameters?.docs,source:{originalSource:'{\n  args: Default.args,\n  render: args => ({\n    props: args,\n    declarations: [TooltipDirective],\n    template: `\n        <div style="display: flex; flex-direction: column; align-items: center; gap: 16px;">\n            ${mockHost(`\n                rteTooltipAlignment="start"\n                [rteTooltipPosition]="rteTooltipPosition"\n                [rteTooltip]="rteTooltip"\n                [rteTooltipArrow]="rteTooltipArrow"\n            `)}\n            ${mockHost(`\n                rteTooltipAlignment="center"\n                [rteTooltipPosition]="rteTooltipPosition"\n                [rteTooltip]="rteTooltip"\n                [rteTooltipArrow]="rteTooltipArrow"\n            `)}\n            ${mockHost(`\n                rteTooltipAlignment="end"\n                [rteTooltipPosition]="rteTooltipPosition"\n                [rteTooltip]="rteTooltip"\n                [rteTooltipArrow]="rteTooltipArrow"\n            `)}\n        </div>\n        `\n  })\n}',...Alignment.parameters?.docs?.source}}},Arrow.parameters={...Arrow.parameters,docs:{...Arrow.parameters?.docs,source:{originalSource:'{\n  args: Default.args,\n  render: args => ({\n    props: args,\n    declarations: [TooltipDirective],\n    template: `\n        <div style="display: flex; gap: 8;">\n            ${mockHost(`\n                [rteTooltipArrow]="true"\n                [rteTooltipPosition]="rteTooltipPosition"\n                [rteTooltip]="rteTooltip"\n            `)}\n            ${mockHost(`\n                [rteTooltipArrow]="false"\n                [rteTooltipPosition]="rteTooltipPosition"\n                [rteTooltip]="rteTooltip"\n            `)}\n        </div>\n        `\n  })\n}',...Arrow.parameters?.docs?.source}}},AutoPlacement.parameters={...AutoPlacement.parameters,docs:{...AutoPlacement.parameters?.docs,source:{originalSource:'{\n  args: Default.args,\n  render: args => ({\n    props: args,\n    declarations: [TooltipDirective],\n    template: `\n        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 8px;">\n            <div style="display: flex; align-items: flex-start; justify-content: flex-start; gap: 8px; border: 1px solid red; width: 75px; height: 250px;">\n                ${mockHost(`\n                    rteTooltipPosition="auto"\n                    [rteTooltip]="rteTooltip"\n                `)}\n            </div>\n\n            <div style="display: flex; align-items: center; justify-content: flex-start; gap: 8px; border: 1px solid red; width: 250px; height: 50px;">\n                ${mockHost(`\n                    rteTooltipPosition="auto"\n                    [rteTooltip]="rteTooltip"\n                `)}\n            </div>\n\n            <div style="display: flex; align-items: flex-end; justify-content: flex-end; gap: 8px; border: 1px solid red; width: 75px; height: 250px;">\n                ${mockHost(`\n                    rteTooltipPosition="auto"\n                    [rteTooltip]="rteTooltip"\n                `)}\n            </div>\n\n            <div style="display: flex; align-items: center; justify-content: flex-end; gap: 8px; border: 1px solid red; width: 250px; height: 50px;">\n                ${mockHost(`\n                    rteTooltipPosition="auto"\n                    [rteTooltip]="rteTooltip"\n                `)}\n            </div>\n        </div>\n        `\n  })\n}',...AutoPlacement.parameters?.docs?.source}}},KeyboardInteraction.parameters={...KeyboardInteraction.parameters,docs:{...KeyboardInteraction.parameters?.docs,source:{originalSource:'{\n  args: Default.args,\n  render: args => ({\n    props: args,\n    declarations: [TooltipDirective],\n    template: `\n        <div style="display: flex; gap: 8px;">\n            ${mockHost(`[rteTooltip]="rteTooltip"`)}\n        </div>\n        `\n  }),\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const tooltipTrigger = canvas.queryByText("Hover Me!");\n    await userEvent.tab();\n    const tooltip = within(document.body).getByRole("tooltip");\n    expect(tooltipTrigger).toHaveFocus();\n    await waitFor(() => expect(tooltip).toBeVisible());\n  }\n}',...KeyboardInteraction.parameters?.docs?.source}}}},"./projects/ds-rte-lib/src/lib/components/tooltip/tooltip.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("../../node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("../../node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:wght,FILL,GRAD@400,0,0&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,"@import url(https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,200..1000;1,200..1000&display=swap);"]),___CSS_LOADER_EXPORT___.push([module.id,':host {\n  position: absolute;\n  max-width: 160px;\n  max-height: 40px;\n  transition: opacity 150ms ease-out;\n}\n:host:not(:hover) {\n  transition: opacity 100ms ease-in;\n}\n\n.tooltip {\n  font-feature-settings: "liga" off, "clig" off;\n  font-style: normal;\n  font-family: "Arial";\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0px;\n  color: var(--content-primary-inverse);\n  position: absolute;\n  text-align: center;\n  z-index: 1;\n  max-width: 160px;\n  max-height: 40px;\n  width: -moz-fit-content;\n  width: fit-content;\n  padding-block: 4px;\n  padding-inline: 16px;\n  border-radius: 4px;\n  background: var(--background-inverse);\n}\n.tooltip.top, .tooltip.bottom {\n  transform: translateX(-50%);\n}\n.tooltip.left, .tooltip.right {\n  transform: translateY(-50%);\n}\n.tooltip.top {\n  bottom: 0px;\n}\n.tooltip.top::after {\n  top: 100%;\n  left: 50%;\n  margin-left: -5px;\n  border-color: var(--background-inverse) transparent transparent transparent;\n}\n.tooltip.top.start::after {\n  left: 25%;\n}\n.tooltip.top.end::after {\n  left: 75%;\n}\n.tooltip.bottom::after {\n  bottom: 100%;\n  left: 50%;\n  margin-left: -5px;\n  border-color: transparent transparent var(--background-inverse) transparent;\n}\n.tooltip.bottom.start::after {\n  left: 25%;\n}\n.tooltip.bottom.end::after {\n  left: 75%;\n}\n.tooltip.left {\n  right: 0px;\n}\n.tooltip.left::after {\n  top: 50%;\n  left: 100%;\n  margin-top: -5px;\n  border-color: transparent transparent transparent var(--background-inverse);\n}\n.tooltip.left.start::after {\n  top: 25%;\n}\n.tooltip.left.end::after {\n  top: 75%;\n}\n.tooltip.right::after {\n  top: 50%;\n  right: 100%;\n  margin-top: -5px;\n  border-color: transparent var(--background-inverse) transparent transparent;\n}\n.tooltip.right.start::after {\n  top: 25%;\n}\n.tooltip.right.end::after {\n  top: 75%;\n}\n.tooltip.arrow::after {\n  content: "";\n  position: absolute;\n  border-width: 5px;\n  border-style: solid;\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"../../node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map(function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content}).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"../../node_modules/css-loader/dist/runtime/noSourceMaps.js":module=>{"use strict";module.exports=function(i){return i[1]}},"./projects/ds-rte-lib/src/lib/components/tooltip/tooltip.directive.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{d:()=>TooltipDirective});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("../../node_modules/@angular/core/fesm2022/core.mjs");let OverlayService=class OverlayService{constructor(){this.activeOverlays=new Set}getOverlayRoot(){return this.overlayRoot||(this.overlayRoot=document.getElementById("overlay-root"),this.overlayRoot||(this.overlayRoot=document.createElement("div"),this.overlayRoot.id="overlay-root",this.overlayRoot.style.position="fixed",this.overlayRoot.style.top="0",this.overlayRoot.style.left="0",this.overlayRoot.style.width="100%",this.overlayRoot.style.height="100%",this.overlayRoot.style.pointerEvents="none",this.overlayRoot.style.zIndex="1000",document.body.appendChild(this.overlayRoot))),this.overlayRoot}create(component,viewContainer){const root=this.getOverlayRoot(),componentRef=viewContainer.createComponent(component);root.appendChild(componentRef.location.nativeElement),this.activeOverlays.add(componentRef);const originalDestroy=componentRef.destroy.bind(componentRef);return componentRef.destroy=()=>{this.activeOverlays.delete(componentRef),originalDestroy()},componentRef}destroy(){0===this.activeOverlays.size&&(this.overlayRoot?.remove(),this.overlayRoot=void 0)}static{this.ctorParameters=()=>[]}};OverlayService=(0,tslib_es6.Cg)([(0,core.Injectable)({providedIn:"root"})],OverlayService);var tooltip_componentngResource=__webpack_require__("./projects/ds-rte-lib/src/lib/components/tooltip/tooltip.component.scss?ngResource"),tooltip_componentngResource_default=__webpack_require__.n(tooltip_componentngResource),common=__webpack_require__("../../node_modules/@angular/common/fesm2022/common.mjs");let TooltipComponent=class TooltipComponent{constructor(){this.label=core.input.required(),this.position=(0,core.input)("auto"),this.alignment=(0,core.input)("center"),this.arrow=(0,core.input)(!0)}static{this.propDecorators={label:[{type:core.Input,args:[{isSignal:!0,alias:"label",required:!0,transform:void 0}]}],position:[{type:core.Input,args:[{isSignal:!0,alias:"position",required:!1,transform:void 0}]}],alignment:[{type:core.Input,args:[{isSignal:!0,alias:"alignment",required:!1,transform:void 0}]}],arrow:[{type:core.Input,args:[{isSignal:!0,alias:"arrow",required:!1,transform:void 0}]}]}}};TooltipComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"rte-tooltip",imports:[common.CommonModule],standalone:!0,template:'<div\n  class="tooltip {{ position() }} {{ alignment() }}"\n  [ngClass]="{ arrow: arrow() }"\n>\n  <span role="tooltip" class="tooltip-label"> {{ label() }} </span>\n</div>\n',styles:[tooltip_componentngResource_default()]})],TooltipComponent);let TooltipDirective=class TooltipDirective{onMouseEnter(){this.showTooltip()}onMouseLeave(){this.hideTooltip()}onFocus(){this.showTooltip()}onBlur(){this.hideTooltip()}constructor(){this.rteTooltip=core.input.required(),this.rteTooltipPosition=(0,core.input)("auto"),this.rteTooltipAlignment=(0,core.input)("center"),this.rteTooltipArrow=(0,core.input)(!0),this.tooltipRef=null,this.elementRef=(0,core.inject)(core.ElementRef),this.viewContainerRef=(0,core.inject)(core.ViewContainerRef),this.renderer=(0,core.inject)(core.Renderer2),this.cdr=(0,core.inject)(core.ChangeDetectorRef),this.overlayService=(0,core.inject)(OverlayService),this.hostElement=this.elementRef.nativeElement,this.hostElement.setAttribute("tabindex","0")}ngAfterViewInit(){window.addEventListener("scroll",this.positionTooltip.bind(this))}ngOnDestroy(){window.removeEventListener("scroll",this.positionTooltip.bind(this))}showTooltip(){this.tooltipRef&&this.tooltipRef.destroy(),this.tooltipRef=this.overlayService.create(TooltipComponent,this.viewContainerRef),this.assignDirectiveToComponent(),this.positionTooltip()}assignDirectiveToComponent(){if(this.tooltipRef){const tooltipElement=this.tooltipRef.location.nativeElement,position="auto"===this.rteTooltipPosition()?((hostElement,castedElement,defaultPosition,offset=0)=>{const triggerParent=hostElement.parentElement;if(!triggerParent)return defaultPosition;const triggerRect=hostElement.getBoundingClientRect(),maxWidth=parseInt(getComputedStyle(castedElement).getPropertyValue("max-width")),maxHeight=parseInt(getComputedStyle(castedElement).getPropertyValue("max-height")),parentRect=triggerParent.getBoundingClientRect(),sides_top=triggerRect.top-parentRect.top>maxHeight+offset,sides_right=parentRect.right-triggerRect.right>maxWidth+offset,sides_bottom=parentRect.bottom-triggerRect.bottom>=maxHeight+offset,sides_left=triggerRect.left-parentRect.left>maxWidth+offset;return sides_top?"top":sides_bottom?"bottom":sides_left?"left":sides_right?"right":defaultPosition})(this.hostElement,tooltipElement,"top",this.rteTooltipArrow()?9:4):this.rteTooltipPosition();this.tooltipRef.setInput("label",this.rteTooltip()),this.tooltipRef.setInput("position",position),this.tooltipRef.setInput("alignment",this.rteTooltipAlignment()),this.tooltipRef.setInput("arrow",this.rteTooltipArrow())}}positionTooltip(){if(this.tooltipRef){const tooltipElement=this.tooltipRef.location.nativeElement,positions=((position,triggerElement,castedElement,offset=0)=>{let top=0,left=0;return"bottom"===position?(top=triggerElement.getBoundingClientRect().bottom+offset,left=triggerElement.getBoundingClientRect().left+triggerElement.getBoundingClientRect().width/2-castedElement.getBoundingClientRect().width/2):"left"===position?(top=triggerElement.getBoundingClientRect().top+triggerElement.getBoundingClientRect().height/2-castedElement.getBoundingClientRect().height/2,left=triggerElement.getBoundingClientRect().left-castedElement.getBoundingClientRect().width-offset):"right"===position?(top=triggerElement.getBoundingClientRect().top+triggerElement.getBoundingClientRect().height/2-castedElement.getBoundingClientRect().height/2,left=triggerElement.getBoundingClientRect().right+offset):"top"!==position&&position||(top=triggerElement.getBoundingClientRect().top-castedElement.getBoundingClientRect().height-offset,left=triggerElement.getBoundingClientRect().left+triggerElement.getBoundingClientRect().width/2-castedElement.getBoundingClientRect().width/2),{top,left}})(this.tooltipRef.instance.position(),this.hostElement,tooltipElement,this.rteTooltipArrow()?9:4);this.renderer.setStyle(this.hostElement,"position","relative"),this.renderer.setStyle(tooltipElement,"top",`${positions.top}px`),this.renderer.setStyle(tooltipElement,"left",`${positions.left}px`)}}hideTooltip(){if(this.tooltipRef){const tooltipElement=this.tooltipRef.location.nativeElement;this.renderer.setStyle(tooltipElement,"opacity","0"),setTimeout(()=>{this.tooltipRef&&(this.tooltipRef.destroy(),this.tooltipRef=null,this.overlayService.destroy())},200)}}static{this.ctorParameters=()=>[]}static{this.propDecorators={rteTooltip:[{type:core.Input,args:[{isSignal:!0,alias:"rteTooltip",required:!0,transform:void 0}]}],rteTooltipPosition:[{type:core.Input,args:[{isSignal:!0,alias:"rteTooltipPosition",required:!1,transform:void 0}]}],rteTooltipAlignment:[{type:core.Input,args:[{isSignal:!0,alias:"rteTooltipAlignment",required:!1,transform:void 0}]}],rteTooltipArrow:[{type:core.Input,args:[{isSignal:!0,alias:"rteTooltipArrow",required:!1,transform:void 0}]}],onMouseEnter:[{type:core.HostListener,args:["mouseenter"]}],onMouseLeave:[{type:core.HostListener,args:["mouseleave"]}],onFocus:[{type:core.HostListener,args:["focus"]}],onBlur:[{type:core.HostListener,args:["blur"]}]}}};TooltipDirective=(0,tslib_es6.Cg)([(0,core.Directive)({selector:"[rteTooltip]",standalone:!0})],TooltipDirective)},"./node_modules/tslib/tslib.es6.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Cg:()=>__decorate});function __decorate(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r}Object.create;Object.create;"function"==typeof SuppressedError&&SuppressedError}}]);