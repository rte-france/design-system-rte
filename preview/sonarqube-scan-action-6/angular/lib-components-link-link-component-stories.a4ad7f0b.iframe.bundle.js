"use strict";(self.webpackChunk_design_system_rte_angular_builder=self.webpackChunk_design_system_rte_angular_builder||[]).push([[59729],{"./projects/ds-rte-lib/src/lib/components/link/link.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,ExternalLink:()=>ExternalLink,KeyboardInteraction:()=>KeyboardInteraction,SubtleLink:()=>SubtleLink,SubtleLinkExternal:()=>SubtleLinkExternal,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _home_runner_work_design_system_rte_design_system_rte_packages_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"),_storybook_test__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@storybook/test/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Link",component:__webpack_require__("./projects/ds-rte-lib/src/lib/components/link/link.component.ts").g,tags:["autodocs"],argTypes:{subtle:{control:"boolean"},externalLink:{control:"boolean"}}},Default={args:{label:"Link",href:"#"}},SubtleLink={args:{...Default.args,subtle:!0}},SubtleLinkExternal={args:{...SubtleLink.args,externalLink:!0}},ExternalLink={args:{...Default.args,externalLink:!0}},KeyboardInteraction={args:{...Default.args,href:"#"},play:(_ref=(0,_home_runner_work_design_system_rte_design_system_rte_packages_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_2__.A)(function*({canvasElement}){const link=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.ux)(canvasElement).getByRole("link");yield _storybook_test__WEBPACK_IMPORTED_MODULE_0__.Q4.tab(),(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.E3)(link).toHaveFocus()}),function play(_x){return _ref.apply(this,arguments)})};var _ref;const __namedExportsOrder=["Default","SubtleLink","SubtleLinkExternal","ExternalLink","KeyboardInteraction"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Link",\n    href: "#"\n  }\n}',...Default.parameters?.docs?.source}}},SubtleLink.parameters={...SubtleLink.parameters,docs:{...SubtleLink.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Default.args,\n    subtle: true\n  }\n}",...SubtleLink.parameters?.docs?.source}}},SubtleLinkExternal.parameters={...SubtleLinkExternal.parameters,docs:{...SubtleLinkExternal.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...SubtleLink.args,\n    externalLink: true\n  }\n}",...SubtleLinkExternal.parameters?.docs?.source}}},ExternalLink.parameters={...ExternalLink.parameters,docs:{...ExternalLink.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Default.args,\n    externalLink: true\n  }\n}",...ExternalLink.parameters?.docs?.source}}},KeyboardInteraction.parameters={...KeyboardInteraction.parameters,docs:{...KeyboardInteraction.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    href: "#"\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const link = canvas.getByRole("link");\n    await userEvent.tab();\n    expect(link).toHaveFocus();\n  }\n}',...KeyboardInteraction.parameters?.docs?.source}}}}}]);