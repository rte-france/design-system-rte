/*! For license information please see main.e2c23e71.iframe.bundle.js.LICENSE.txt */
(self.webpackChunk_design_system_rte_angular_builder=self.webpackChunk_design_system_rte_angular_builder||[]).push([[38792],{"../../node_modules/@storybook/instrumenter/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/@storybook/instrumenter/dist sync recursive",module.exports=webpackEmptyContext},"../../node_modules/@storybook/test/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/@storybook/test/dist sync recursive",module.exports=webpackEmptyContext},"../../node_modules/memoizerific sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/memoizerific sync recursive",module.exports=webpackEmptyContext},"../core/design-tokens/main.scss?ngGlobalStyle":()=>{},"./.storybook/main.scss?ngGlobalStyle":()=>{},"./.storybook/preview.scss?ngGlobalStyle":()=>{},"./.storybook/preview.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>_storybook_preview});var http=__webpack_require__("../../node_modules/@angular/common/fesm2022/http.mjs"),core=__webpack_require__("../../node_modules/@angular/core/fesm2022/core.mjs"),angular=__webpack_require__("../../node_modules/@storybook/addon-docs/angular/index.js"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api");const documentation_namespaceObject=JSON.parse('{"pipes":[],"interfaces":[{"name":"DropdownItemConfig","id":"interface-DropdownItemConfig-674e917d3ad60a1b2915697502c4afd8c6019a1ac8647879892cbfe757b0ec53abaa4ba63d43f0bfb40c62b0d838b473c293c9b663f06611f859f35c1ee955f8","file":"projects/ds-rte-lib/src/lib/components/dropdown/dropdown-item/dropdown-item.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { Component, EventEmitter, input, output } from \\"@angular/core\\";\\nimport { ENTER_KEY, SPACE_KEY } from \\"@design-system-rte/core/constants/keyboard/keyboard.constants\\";\\n\\nimport { DividerComponent } from \\"../../divider/divider.component\\";\\nimport { IconComponent } from \\"../../icon/icon.component\\";\\n\\nexport interface DropdownItemConfig {\\n  id?: string;\\n  label: string;\\n  leftIcon?: string;\\n  trailingText?: string;\\n  disabled?: boolean;\\n  hasSeparator?: boolean;\\n  hasIndent?: boolean;\\n  link?: string;\\n  click?: EventEmitter<Event>;\\n}\\n\\n@Component({\\n  selector: \\"rte-dropdown-item\\",\\n  imports: [CommonModule, IconComponent, DividerComponent],\\n  standalone: true,\\n  templateUrl: \\"./dropdown-item.component.html\\",\\n  styleUrl: \\"./dropdown-item.component.scss\\",\\n})\\nexport class DropdownItemComponent {\\n  readonly item = input<DropdownItemConfig>();\\n  readonly menuId = input<string>();\\n  readonly itemEvent = output<{ event: Event; id: string }>();\\n\\n  handleClick(event: Event): void {\\n    if (this.item()?.disabled) {\\n      event.preventDefault();\\n      event.stopPropagation();\\n      return;\\n    }\\n    this.itemEvent.emit({ event, id: this.item()?.id || this.item()?.label || \\"\\" });\\n  }\\n\\n  handleKeyDown(event: KeyboardEvent): void {\\n    event.preventDefault();\\n\\n    if ([SPACE_KEY, ENTER_KEY].includes(event.key)) {\\n      if (this.item()?.link) {\\n        const link = (event.target as HTMLElement).closest(\\"li\\")?.querySelector(\\"a\\");\\n        link?.click();\\n      } else {\\n        this.itemEvent.emit({ event, id: this.item()?.id || this.item()?.label || \\"\\" });\\n      }\\n    }\\n  }\\n}\\n","properties":[{"name":"click","deprecated":false,"deprecationMessage":"","type":"EventEmitter<Event>","indexKey":"","optional":true,"description":"","line":17},{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":true,"description":"","line":13},{"name":"hasIndent","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":true,"description":"","line":15},{"name":"hasSeparator","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":true,"description":"","line":14},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":true,"description":"","line":9},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":10},{"name":"leftIcon","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":true,"description":"","line":11},{"name":"link","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":true,"description":"","line":16},{"name":"trailingText","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":true,"description":"","line":12}],"indexSignatures":[],"kind":172,"methods":[],"extends":[]},{"name":"DropdownState","id":"interface-DropdownState-e3dc36007f03f1aab8fe0c93be011490e13c9453abd826417b04a4cfb80e7695fd4dc34483f912ef61928d67066c4f672b4457f3cb1665692cf2ee5edbbc3191","file":"projects/ds-rte-lib/src/lib/services/dropdown.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { ElementRef, Injectable } from \\"@angular/core\\";\\nimport {\\n  ARROW_DOWN_KEY,\\n  ARROW_LEFT_KEY,\\n  ARROW_RIGHT_KEY,\\n  ARROW_UP_KEY,\\n  ESCAPE_KEY,\\n} from \\"@design-system-rte/core/constants/keyboard/keyboard.constants\\";\\nimport { BehaviorSubject, Observable } from \\"rxjs\\";\\nimport { map } from \\"rxjs/operators\\";\\n\\nexport interface KeyboardHandlingOptions {\\n  menuElement: ElementRef | null;\\n  menuId: string;\\n  itemIndex?: number;\\n}\\n\\nexport interface DropdownState {\\n  activeMenuId: string;\\n}\\n\\n@Injectable({\\n  providedIn: \\"root\\", // Makes the service a singleton\\n})\\nexport class DropdownService {\\n  private readonly initialState: DropdownState = {\\n    activeMenuId: \\"\\",\\n  };\\n\\n  state$ = new BehaviorSubject<DropdownState | null>(this.initialState);\\n\\n  readonly activeMenuId$ = this.state$.pipe(map((state) => state?.activeMenuId));\\n\\n  openMenu(menuId: string): void {\\n    this.state$.next({\\n      activeMenuId: menuId,\\n    });\\n  }\\n\\n  closeAllMenus(): void {\\n    this.state$.next(null);\\n  }\\n\\n  isMenuActive(menuId: string): Observable<boolean> {\\n    return this.activeMenuId$.pipe(map((activeId) => activeId === menuId));\\n  }\\n\\n  reset(): void {\\n    this.state$.next(this.initialState);\\n    console.log(\\"ðŸ”µ Dropdown Service - State Reset\\");\\n  }\\n\\n  handleKeyboardInput(key: string, options: KeyboardHandlingOptions): void {\\n    if ([ARROW_DOWN_KEY, ARROW_UP_KEY, ARROW_LEFT_KEY, ARROW_RIGHT_KEY].includes(key)) {\\n      this.handleKeyboardNavigation(key, options);\\n    }\\n\\n    if (key === ESCAPE_KEY) {\\n      this.closeAllMenus();\\n    }\\n  }\\n\\n  handleKeyboardNavigation(key: string, options: KeyboardHandlingOptions): void {\\n    const { menuElement } = options;\\n    const nativeElement = menuElement?.nativeElement as HTMLElement;\\n\\n    switch (key) {\\n      case ARROW_DOWN_KEY:\\n        this.focusNextElement(nativeElement);\\n        break;\\n\\n      case ARROW_UP_KEY:\\n        this.focusPreviousElement(nativeElement);\\n        break;\\n    }\\n  }\\n\\n  private focusNextElement(element: HTMLElement | null): void {\\n    if (!element) return;\\n\\n    const focusableElements = this.getFocusableElements(element);\\n    const currentIndex = focusableElements.indexOf(document.activeElement as HTMLElement);\\n    const nextIndex = currentIndex + 1 < focusableElements.length ? currentIndex + 1 : 0;\\n\\n    focusableElements[nextIndex]?.focus();\\n  }\\n\\n  private focusPreviousElement(element: HTMLElement | null): void {\\n    if (!element) return;\\n\\n    const focusableElements = this.getFocusableElements(element);\\n    const currentIndex = focusableElements.indexOf(document.activeElement as HTMLElement);\\n    const previousIndex = currentIndex ? currentIndex - 1 : focusableElements.length - 1;\\n\\n    focusableElements[previousIndex]?.focus();\\n  }\\n\\n  private getFocusableElements(element: HTMLElement): HTMLElement[] {\\n    const menuId = element.dataset[\\"menuId\\"];\\n    return Array.from(element.querySelectorAll(\\"li\\")).filter((el) => {\\n      const closestMenu = el.closest(\\"[data-menu-id]\\") as HTMLElement;\\n      return closestMenu?.dataset[\\"menuId\\"] === menuId;\\n    }) as HTMLElement[];\\n  }\\n}\\n","properties":[{"name":"activeMenuId","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":19}],"indexSignatures":[],"kind":172,"methods":[],"extends":[]},{"name":"KeyboardHandlingOptions","id":"interface-KeyboardHandlingOptions-e3dc36007f03f1aab8fe0c93be011490e13c9453abd826417b04a4cfb80e7695fd4dc34483f912ef61928d67066c4f672b4457f3cb1665692cf2ee5edbbc3191","file":"projects/ds-rte-lib/src/lib/services/dropdown.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { ElementRef, Injectable } from \\"@angular/core\\";\\nimport {\\n  ARROW_DOWN_KEY,\\n  ARROW_LEFT_KEY,\\n  ARROW_RIGHT_KEY,\\n  ARROW_UP_KEY,\\n  ESCAPE_KEY,\\n} from \\"@design-system-rte/core/constants/keyboard/keyboard.constants\\";\\nimport { BehaviorSubject, Observable } from \\"rxjs\\";\\nimport { map } from \\"rxjs/operators\\";\\n\\nexport interface KeyboardHandlingOptions {\\n  menuElement: ElementRef | null;\\n  menuId: string;\\n  itemIndex?: number;\\n}\\n\\nexport interface DropdownState {\\n  activeMenuId: string;\\n}\\n\\n@Injectable({\\n  providedIn: \\"root\\", // Makes the service a singleton\\n})\\nexport class DropdownService {\\n  private readonly initialState: DropdownState = {\\n    activeMenuId: \\"\\",\\n  };\\n\\n  state$ = new BehaviorSubject<DropdownState | null>(this.initialState);\\n\\n  readonly activeMenuId$ = this.state$.pipe(map((state) => state?.activeMenuId));\\n\\n  openMenu(menuId: string): void {\\n    this.state$.next({\\n      activeMenuId: menuId,\\n    });\\n  }\\n\\n  closeAllMenus(): void {\\n    this.state$.next(null);\\n  }\\n\\n  isMenuActive(menuId: string): Observable<boolean> {\\n    return this.activeMenuId$.pipe(map((activeId) => activeId === menuId));\\n  }\\n\\n  reset(): void {\\n    this.state$.next(this.initialState);\\n    console.log(\\"ðŸ”µ Dropdown Service - State Reset\\");\\n  }\\n\\n  handleKeyboardInput(key: string, options: KeyboardHandlingOptions): void {\\n    if ([ARROW_DOWN_KEY, ARROW_UP_KEY, ARROW_LEFT_KEY, ARROW_RIGHT_KEY].includes(key)) {\\n      this.handleKeyboardNavigation(key, options);\\n    }\\n\\n    if (key === ESCAPE_KEY) {\\n      this.closeAllMenus();\\n    }\\n  }\\n\\n  handleKeyboardNavigation(key: string, options: KeyboardHandlingOptions): void {\\n    const { menuElement } = options;\\n    const nativeElement = menuElement?.nativeElement as HTMLElement;\\n\\n    switch (key) {\\n      case ARROW_DOWN_KEY:\\n        this.focusNextElement(nativeElement);\\n        break;\\n\\n      case ARROW_UP_KEY:\\n        this.focusPreviousElement(nativeElement);\\n        break;\\n    }\\n  }\\n\\n  private focusNextElement(element: HTMLElement | null): void {\\n    if (!element) return;\\n\\n    const focusableElements = this.getFocusableElements(element);\\n    const currentIndex = focusableElements.indexOf(document.activeElement as HTMLElement);\\n    const nextIndex = currentIndex + 1 < focusableElements.length ? currentIndex + 1 : 0;\\n\\n    focusableElements[nextIndex]?.focus();\\n  }\\n\\n  private focusPreviousElement(element: HTMLElement | null): void {\\n    if (!element) return;\\n\\n    const focusableElements = this.getFocusableElements(element);\\n    const currentIndex = focusableElements.indexOf(document.activeElement as HTMLElement);\\n    const previousIndex = currentIndex ? currentIndex - 1 : focusableElements.length - 1;\\n\\n    focusableElements[previousIndex]?.focus();\\n  }\\n\\n  private getFocusableElements(element: HTMLElement): HTMLElement[] {\\n    const menuId = element.dataset[\\"menuId\\"];\\n    return Array.from(element.querySelectorAll(\\"li\\")).filter((el) => {\\n      const closestMenu = el.closest(\\"[data-menu-id]\\") as HTMLElement;\\n      return closestMenu?.dataset[\\"menuId\\"] === menuId;\\n    }) as HTMLElement[];\\n  }\\n}\\n","properties":[{"name":"itemIndex","deprecated":false,"deprecationMessage":"","type":"number","indexKey":"","optional":true,"description":"","line":15},{"name":"menuElement","deprecated":false,"deprecationMessage":"","type":"ElementRef | null","indexKey":"","optional":false,"description":"","line":13},{"name":"menuId","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":14}],"indexSignatures":[],"kind":172,"methods":[],"extends":[]}],"injectables":[{"name":"DropdownService","id":"injectable-DropdownService-e3dc36007f03f1aab8fe0c93be011490e13c9453abd826417b04a4cfb80e7695fd4dc34483f912ef61928d67066c4f672b4457f3cb1665692cf2ee5edbbc3191","file":"projects/ds-rte-lib/src/lib/services/dropdown.service.ts","properties":[{"name":"activeMenuId$","defaultValue":"this.state$.pipe(map((state) => state?.activeMenuId))","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":32,"modifierKind":[148]},{"name":"initialState","defaultValue":"{\\n    activeMenuId: \\"\\",\\n  }","deprecated":false,"deprecationMessage":"","type":"DropdownState","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[123,148]},{"name":"state$","defaultValue":"new BehaviorSubject<DropdownState | null>(this.initialState)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":30}],"methods":[{"name":"closeAllMenus","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":40,"deprecated":false,"deprecationMessage":""},{"name":"focusNextElement","args":[{"name":"element","type":"HTMLElement | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"element","type":"HTMLElement | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"focusPreviousElement","args":[{"name":"element","type":"HTMLElement | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":88,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"element","type":"HTMLElement | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getFocusableElements","args":[{"name":"element","type":"HTMLElement","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"HTMLElement[]","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"element","type":"HTMLElement","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleKeyboardInput","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""},{"name":"options","type":"KeyboardHandlingOptions","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":53,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"KeyboardHandlingOptions","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleKeyboardNavigation","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""},{"name":"options","type":"KeyboardHandlingOptions","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"options","type":"KeyboardHandlingOptions","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isMenuActive","args":[{"name":"menuId","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"menuId","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"openMenu","args":[{"name":"menuId","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"menuId","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"reset","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { ElementRef, Injectable } from \\"@angular/core\\";\\nimport {\\n  ARROW_DOWN_KEY,\\n  ARROW_LEFT_KEY,\\n  ARROW_RIGHT_KEY,\\n  ARROW_UP_KEY,\\n  ESCAPE_KEY,\\n} from \\"@design-system-rte/core/constants/keyboard/keyboard.constants\\";\\nimport { BehaviorSubject, Observable } from \\"rxjs\\";\\nimport { map } from \\"rxjs/operators\\";\\n\\nexport interface KeyboardHandlingOptions {\\n  menuElement: ElementRef | null;\\n  menuId: string;\\n  itemIndex?: number;\\n}\\n\\nexport interface DropdownState {\\n  activeMenuId: string;\\n}\\n\\n@Injectable({\\n  providedIn: \\"root\\", // Makes the service a singleton\\n})\\nexport class DropdownService {\\n  private readonly initialState: DropdownState = {\\n    activeMenuId: \\"\\",\\n  };\\n\\n  state$ = new BehaviorSubject<DropdownState | null>(this.initialState);\\n\\n  readonly activeMenuId$ = this.state$.pipe(map((state) => state?.activeMenuId));\\n\\n  openMenu(menuId: string): void {\\n    this.state$.next({\\n      activeMenuId: menuId,\\n    });\\n  }\\n\\n  closeAllMenus(): void {\\n    this.state$.next(null);\\n  }\\n\\n  isMenuActive(menuId: string): Observable<boolean> {\\n    return this.activeMenuId$.pipe(map((activeId) => activeId === menuId));\\n  }\\n\\n  reset(): void {\\n    this.state$.next(this.initialState);\\n    console.log(\\"ðŸ”µ Dropdown Service - State Reset\\");\\n  }\\n\\n  handleKeyboardInput(key: string, options: KeyboardHandlingOptions): void {\\n    if ([ARROW_DOWN_KEY, ARROW_UP_KEY, ARROW_LEFT_KEY, ARROW_RIGHT_KEY].includes(key)) {\\n      this.handleKeyboardNavigation(key, options);\\n    }\\n\\n    if (key === ESCAPE_KEY) {\\n      this.closeAllMenus();\\n    }\\n  }\\n\\n  handleKeyboardNavigation(key: string, options: KeyboardHandlingOptions): void {\\n    const { menuElement } = options;\\n    const nativeElement = menuElement?.nativeElement as HTMLElement;\\n\\n    switch (key) {\\n      case ARROW_DOWN_KEY:\\n        this.focusNextElement(nativeElement);\\n        break;\\n\\n      case ARROW_UP_KEY:\\n        this.focusPreviousElement(nativeElement);\\n        break;\\n    }\\n  }\\n\\n  private focusNextElement(element: HTMLElement | null): void {\\n    if (!element) return;\\n\\n    const focusableElements = this.getFocusableElements(element);\\n    const currentIndex = focusableElements.indexOf(document.activeElement as HTMLElement);\\n    const nextIndex = currentIndex + 1 < focusableElements.length ? currentIndex + 1 : 0;\\n\\n    focusableElements[nextIndex]?.focus();\\n  }\\n\\n  private focusPreviousElement(element: HTMLElement | null): void {\\n    if (!element) return;\\n\\n    const focusableElements = this.getFocusableElements(element);\\n    const currentIndex = focusableElements.indexOf(document.activeElement as HTMLElement);\\n    const previousIndex = currentIndex ? currentIndex - 1 : focusableElements.length - 1;\\n\\n    focusableElements[previousIndex]?.focus();\\n  }\\n\\n  private getFocusableElements(element: HTMLElement): HTMLElement[] {\\n    const menuId = element.dataset[\\"menuId\\"];\\n    return Array.from(element.querySelectorAll(\\"li\\")).filter((el) => {\\n      const closestMenu = el.closest(\\"[data-menu-id]\\") as HTMLElement;\\n      return closestMenu?.dataset[\\"menuId\\"] === menuId;\\n    }) as HTMLElement[];\\n  }\\n}\\n","extends":[],"type":"injectable"},{"name":"IconService","id":"injectable-IconService-d1382d80b6ec2bcffdf0f84a3de3b145bb2266a4c52613709efae54a92f178b30964fb453fcf4280a16ddef7b4fc6beef382d5a003856796b9b1eeccbe1969bb","file":"projects/ds-rte-lib/src/lib/components/icon/icon.service.ts","properties":[{"name":"http","defaultValue":"inject(HttpClient)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":12,"modifierKind":[123]}],"methods":[{"name":"getSvg","args":[{"name":"name","type":"RegularIconIdKey | TogglableIconIdKey","deprecated":false,"deprecationMessage":""},{"name":"appearance","type":"\\"outlined\\" | \\"filled\\"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<string>","typeParameters":[],"line":14,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"name","type":"RegularIconIdKey | TogglableIconIdKey","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"appearance","type":"\\"outlined\\" | \\"filled\\"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { HttpClient } from \\"@angular/common/http\\";\\nimport { inject, Injectable } from \\"@angular/core\\";\\nimport { Observable } from \\"rxjs\\";\\n\\nimport { RegularIcons, TogglableIcons } from \\"./icon-map\\";\\n\\nexport type RegularIconIdKey = keyof typeof RegularIcons;\\nexport type TogglableIconIdKey = keyof typeof TogglableIcons;\\n\\n@Injectable()\\nexport class IconService {\\n  private http = inject(HttpClient);\\n\\n  getSvg(name: RegularIconIdKey | TogglableIconIdKey, appearance: \\"outlined\\" | \\"filled\\"): Observable<string> {\\n    if (!this.http) {\\n      throw new Error(\\"HttpClient is not available\\");\\n    }\\n    const togglableIcon = TogglableIcons[name as TogglableIconIdKey];\\n\\n    if (togglableIcon) {\\n      const [outlinedIconName, filledIconName] = togglableIcon;\\n\\n      const iconName = appearance === \\"filled\\" ? filledIconName : outlinedIconName;\\n      return this.http.get(`assets/icons/${iconName}.svg`, { responseType: \\"text\\" });\\n    } else {\\n      const iconName = RegularIcons[name as RegularIconIdKey];\\n      if (!iconName) {\\n        throw new Error(`Icon ${name} not found`);\\n      }\\n      return this.http.get(`assets/icons/${iconName}.svg`, { responseType: \\"text\\" });\\n    }\\n  }\\n}\\n","extends":[],"type":"injectable"},{"name":"OverlayService","id":"injectable-OverlayService-5fb6ce070ca6686a13958692266978d965013ea2dfb92ff9796e09e81fdf38680cb966cadc4703f515ac3ed5bb5abcb774b1128d41dd2931dc18824ddab795f8","file":"projects/ds-rte-lib/src/lib/services/overlay.service.ts","properties":[{"name":"activeOverlays","defaultValue":"new Set<ComponentRef<unknown>>()","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":6,"modifierKind":[123]},{"name":"overlayRoot","deprecated":false,"deprecationMessage":"","type":"HTMLElement","indexKey":"","optional":true,"description":"","line":5,"modifierKind":[123]}],"methods":[{"name":"create","args":[{"name":"component","type":"Type<T>","deprecated":false,"deprecationMessage":""},{"name":"viewContainer","type":"ViewContainerRef","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ComponentRef<T>","typeParameters":["T"],"line":23,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"component","type":"Type<T>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"viewContainer","type":"ViewContainerRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":40,"deprecated":false,"deprecationMessage":""},{"name":"getOverlayRoot","args":[],"optional":false,"returnType":"HTMLElement","typeParameters":[],"line":10,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable, ComponentRef, Type, ViewContainerRef } from \\"@angular/core\\";\\n\\n@Injectable({ providedIn: \\"root\\" })\\nexport class OverlayService {\\n  private overlayRoot?: HTMLElement;\\n  private activeOverlays = new Set<ComponentRef<unknown>>();\\n\\n  constructor() {}\\n\\n  private getOverlayRoot(): HTMLElement {\\n    if (!this.overlayRoot) {\\n      this.overlayRoot = document.getElementById(\\"overlay-root\\") as HTMLElement;\\n\\n      if (!this.overlayRoot) {\\n        this.overlayRoot = document.createElement(\\"div\\");\\n        this.overlayRoot.id = \\"overlay-root\\";\\n        document.body.appendChild(this.overlayRoot);\\n      }\\n    }\\n    return this.overlayRoot;\\n  }\\n\\n  create<T>(component: Type<T>, viewContainer: ViewContainerRef): ComponentRef<T> {\\n    const root = this.getOverlayRoot();\\n\\n    const componentRef = viewContainer.createComponent(component);\\n\\n    root.appendChild(componentRef.location.nativeElement);\\n    this.activeOverlays.add(componentRef);\\n\\n    const originalDestroy = componentRef.destroy.bind(componentRef);\\n    componentRef.destroy = () => {\\n      this.activeOverlays.delete(componentRef);\\n      originalDestroy();\\n    };\\n\\n    return componentRef;\\n  }\\n\\n  destroy() {\\n    if (this.activeOverlays.size === 0) {\\n      this.overlayRoot?.remove();\\n      this.overlayRoot = undefined;\\n    }\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":6},"extends":[],"type":"injectable"}],"guards":[],"interceptors":[],"classes":[],"directives":[{"name":"BadgeDirective","id":"directive-BadgeDirective-2ac2fd727bc0bb7e94c5cdc7697405286251ebfeea60e190a96af3a914646072156f6db6706262ffb5b655c2a6ff0986122ebc876e6841bebf0c9f7f14726580","file":"projects/ds-rte-lib/src/lib/components/badge/badge.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import {\\n  Directive,\\n  input,\\n  OnChanges,\\n  OnDestroy,\\n  ViewContainerRef,\\n  ComponentRef,\\n  inject,\\n  ElementRef,\\n  Renderer2,\\n  OnInit,\\n} from \\"@angular/core\\";\\nimport { BadgeType, BadgeSize, BadgeContent } from \\"@design-system-rte/core/components/badge/badge.interface\\";\\n\\nimport { RegularIconIdKey, TogglableIconIdKey } from \\"../icon/icon.service\\";\\n\\nimport { BadgeComponent } from \\"./badge.component\\";\\n\\n@Directive({\\n  selector: \\"[rteBadge]\\",\\n  standalone: true,\\n})\\nexport class BadgeDirective implements OnInit, OnChanges, OnDestroy {\\n  readonly rteBadgeType = input<BadgeType>(\\"brand\\");\\n  readonly rteBadgeSize = input<BadgeSize>(\\"m\\");\\n  readonly rteBadgeContent = input<BadgeContent>(\\"number\\");\\n  readonly rteBadgeCount = input<number | undefined>();\\n  readonly rteBadgeIcon = input<RegularIconIdKey | TogglableIconIdKey>(\\"settings\\");\\n\\n  private badgeComponentRef: ComponentRef<BadgeComponent> | null = null;\\n  private hostElement: HTMLElement;\\n\\n  private readonly viewContainer = inject(ViewContainerRef);\\n  private readonly elementRef = inject(ElementRef);\\n  private readonly renderer = inject(Renderer2);\\n\\n  constructor() {\\n    this.hostElement = this.elementRef.nativeElement;\\n  }\\n\\n  ngOnInit(): void {\\n    this.badgeComponentRef = this.viewContainer.createComponent(BadgeComponent);\\n    this.assignDirectiveToComponent();\\n    this.appendComponentToHost();\\n    this.renderer.setStyle(this.hostElement, \\"position\\", \\"relative\\");\\n  }\\n\\n  ngOnChanges(): void {\\n    this.assignDirectiveToComponent();\\n  }\\n\\n  ngOnDestroy(): void {\\n    if (this.badgeComponentRef) {\\n      this.badgeComponentRef.destroy();\\n    }\\n  }\\n\\n  private assignDirectiveToComponent(): void {\\n    if (this.badgeComponentRef) {\\n      this.badgeComponentRef.setInput(\\"badgeType\\", this.rteBadgeType());\\n      this.badgeComponentRef.setInput(\\"badgeSize\\", this.rteBadgeSize());\\n      this.badgeComponentRef.setInput(\\"badgeContent\\", this.rteBadgeContent());\\n      this.badgeComponentRef.setInput(\\"count\\", this.rteBadgeCount());\\n      this.badgeComponentRef.setInput(\\"icon\\", this.rteBadgeIcon());\\n    }\\n  }\\n\\n  private appendComponentToHost(): void {\\n    if (this.badgeComponentRef) {\\n      this.renderer.appendChild(this.elementRef.nativeElement, this.badgeComponentRef.location.nativeElement);\\n    }\\n  }\\n}\\n","selector":"[rteBadge]","providers":[],"hostDirectives":[],"standalone":true,"inputsClass":[{"name":"rteBadgeContent","defaultValue":"\\"number\\"","deprecated":false,"deprecationMessage":"","type":"BadgeContent","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148],"required":false},{"name":"rteBadgeCount","deprecated":false,"deprecationMessage":"","type":"number | undefined","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[148],"required":false},{"name":"rteBadgeIcon","defaultValue":"\\"settings\\"","deprecated":false,"deprecationMessage":"","type":"RegularIconIdKey | TogglableIconIdKey","indexKey":"","optional":false,"description":"","line":28,"modifierKind":[148],"required":false},{"name":"rteBadgeSize","defaultValue":"\\"m\\"","deprecated":false,"deprecationMessage":"","type":"BadgeSize","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148],"required":false},{"name":"rteBadgeType","defaultValue":"\\"brand\\"","deprecated":false,"deprecationMessage":"","type":"BadgeType","indexKey":"","optional":false,"description":"","line":24,"modifierKind":[148],"required":false}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[{"name":"badgeComponentRef","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"ComponentRef<BadgeComponent> | null","indexKey":"","optional":false,"description":"","line":30,"modifierKind":[123]},{"name":"elementRef","defaultValue":"inject(ElementRef)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":34,"modifierKind":[123,148]},{"name":"hostElement","deprecated":false,"deprecationMessage":"","type":"HTMLElement","indexKey":"","optional":false,"description":"","line":31,"modifierKind":[123]},{"name":"renderer","defaultValue":"inject(Renderer2)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":35,"modifierKind":[123,148]},{"name":"viewContainer","defaultValue":"inject(ViewContainerRef)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":33,"modifierKind":[123,148]}],"methodsClass":[{"name":"appendComponentToHost","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":68,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"assignDirectiveToComponent","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnChanges","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":""},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":""}],"extends":[],"implements":["OnInit","OnChanges","OnDestroy"],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":35}},{"name":"ColDirective","id":"directive-ColDirective-f405f1affce709074da0ff3eae8927fa924efe7ace1d5ece0da6937e12a65b9cfb9726ddf777d81c2e378f553abeffc71306f60d7a05ab6e25a941f4e2337a30","file":"projects/ds-rte-lib/src/lib/components/grid/col/col.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { Directive, HostBinding, input } from \\"@angular/core\\";\\n\\n@Directive({\\n  selector: \\"[rteCol]\\",\\n  standalone: true,\\n})\\nexport class ColDirective {\\n  readonly xxs = input<number>();\\n  readonly xs = input<number>();\\n  readonly s = input<number>();\\n  readonly m = input<number>();\\n  readonly l = input<number>();\\n  readonly xl = input<number>();\\n\\n  @HostBinding(\\"class\\")\\n  get colClasses(): string {\\n    return [\\n      \\"col\\",\\n      this.generateColumnClass(\\"col-xxs\\", this.xxs()),\\n      this.generateColumnClass(\\"col-xs\\", this.xs()),\\n      this.generateColumnClass(\\"col-s\\", this.s()),\\n      this.generateColumnClass(\\"col-m\\", this.m()),\\n      this.generateColumnClass(\\"col-l\\", this.l()),\\n      this.generateColumnClass(\\"col-xl\\", this.xl()),\\n    ]\\n      .filter(Boolean)\\n      .join(\\" \\");\\n  }\\n\\n  constructor() {}\\n\\n  private generateColumnClass(prefix: string, size?: number): string {\\n    return size ? `${prefix}-${size}` : \\"\\";\\n  }\\n}\\n","selector":"[rteCol]","providers":[],"hostDirectives":[],"standalone":true,"inputsClass":[{"name":"l","deprecated":false,"deprecationMessage":"","type":"number","indexKey":"","optional":false,"description":"","line":12,"modifierKind":[148],"required":false},{"name":"m","deprecated":false,"deprecationMessage":"","type":"number","indexKey":"","optional":false,"description":"","line":11,"modifierKind":[148],"required":false},{"name":"s","deprecated":false,"deprecationMessage":"","type":"number","indexKey":"","optional":false,"description":"","line":10,"modifierKind":[148],"required":false},{"name":"xl","deprecated":false,"deprecationMessage":"","type":"number","indexKey":"","optional":false,"description":"","line":13,"modifierKind":[148],"required":false},{"name":"xs","deprecated":false,"deprecationMessage":"","type":"number","indexKey":"","optional":false,"description":"","line":9,"modifierKind":[148],"required":false},{"name":"xxs","deprecated":false,"deprecationMessage":"","type":"number","indexKey":"","optional":false,"description":"","line":8,"modifierKind":[148],"required":false}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[{"name":"class","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[]}],"hostListeners":[],"propertiesClass":[],"methodsClass":[{"name":"generateColumnClass","args":[{"name":"prefix","type":"string","deprecated":false,"deprecationMessage":""},{"name":"size","type":"number","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"string","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"prefix","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"size","type":"number","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]}],"extends":[],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":28},"accessors":{"colClasses":{"name":"colClasses","getSignature":{"name":"colClasses","type":"string","returnType":"string","line":16}}}},{"name":"DropdownDirective","id":"directive-DropdownDirective-f33246c8feaa757e22585c358e638b171fd9bf33f6d4831bbb5b4bc78c07ef136a5044b869c7dfe8763c5c177df86b77a608b257b3ba0cc445fccb6343bcf15a","file":"projects/ds-rte-lib/src/lib/components/dropdown/dropdown.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import {\\n  AfterContentInit,\\n  ChangeDetectorRef,\\n  ComponentRef,\\n  contentChild,\\n  DestroyRef,\\n  Directive,\\n  ElementRef,\\n  inject,\\n  input,\\n  OnDestroy,\\n  output,\\n  Renderer2,\\n  ViewContainerRef,\\n} from \\"@angular/core\\";\\nimport { takeUntilDestroyed } from \\"@angular/core/rxjs-interop\\";\\nimport { Position } from \\"@design-system-rte/core/components/common/common-types\\";\\nimport {\\n  getAutoAlignment,\\n  getAutoPlacementDropdown,\\n  getCoordinates,\\n} from \\"@design-system-rte/core/components/utils/auto-placement\\";\\nimport { SPACE_KEY, TAB_KEY } from \\"@design-system-rte/core/constants/keyboard/keyboard.constants\\";\\n\\nimport { DropdownService } from \\"../../services/dropdown.service\\";\\nimport { OverlayService } from \\"../../services/overlay.service\\";\\n\\nimport { DropdownMenuComponent } from \\"./dropdown-menu/dropdown-menu.component\\";\\nimport { DropdownTriggerDirective } from \\"./dropdown-trigger/dropdown-trigger.directive\\";\\n\\n@Directive({\\n  selector: \\"[rteDropdown]\\",\\n  host: {\\n    \\"[class.dropdown]\\": \\"true\\",\\n    \\"[attr.data-dropdown-id]\\": \\"dropdownId\\",\\n  },\\n  standalone: true,\\n})\\nexport class DropdownDirective implements AfterContentInit, OnDestroy {\\n  private static idCounter = 0;\\n\\n  readonly trigger = contentChild(DropdownTriggerDirective);\\n  readonly menu = contentChild(DropdownMenuComponent);\\n\\n  readonly rteDropdownPosition = input<Position>(\\"bottom\\");\\n  readonly rteDropdownIsOpen = input<boolean>(false);\\n  readonly rteDropdownOffset = input<number>(0);\\n\\n  readonly dropdownId = `dropdown_${++DropdownDirective.idCounter}`;\\n  readonly menuEvent = output<{ event: Event; id: string }>();\\n\\n  readonly overlayService = inject(OverlayService);\\n  readonly dropdownService = inject(DropdownService);\\n  readonly viewContainerRef = inject(ViewContainerRef);\\n  readonly elementRef = inject(ElementRef);\\n  readonly renderer = inject(Renderer2);\\n  readonly hostElement: HTMLElement;\\n  readonly destroyRef = inject(DestroyRef);\\n  readonly cdr = inject(ChangeDetectorRef);\\n\\n  constructor() {\\n    this.hostElement = this.elementRef.nativeElement;\\n  }\\n\\n  dropdownMenuRef: ComponentRef<DropdownMenuComponent> | null = null;\\n\\n  onTrigger(): void {\\n    this.showDropdownMenu();\\n  }\\n\\n  onTriggerKeyEvent(event: KeyboardEvent): void {\\n    if (event.key === SPACE_KEY) {\\n      this.showDropdownMenu();\\n    }\\n\\n    if (event.key === TAB_KEY && this.dropdownMenuRef) {\\n      event.preventDefault();\\n      const menuElement = this.dropdownMenuRef.location.nativeElement;\\n      const focusableElements = menuElement.querySelectorAll(\\n        \'button:not([disabled]), [href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), [tabindex]:not([tabindex=\\"-1\\"]):not([disabled])\',\\n      );\\n      if (focusableElements.length) {\\n        focusableElements[0].focus();\\n      }\\n    }\\n  }\\n\\n  onMenuEvent(event: { event: Event; id: string }): void {\\n    this.menuEvent.emit(event);\\n    this.dropdownService.closeAllMenus();\\n  }\\n\\n  ngAfterContentInit(): void {\\n    if (this.trigger()) {\\n      this.trigger()?.dropdownTriggered.subscribe(() => {\\n        this.onTrigger();\\n      });\\n\\n      this.trigger()?.dropdownKeyDown.subscribe((event: KeyboardEvent) => {\\n        this.onTriggerKeyEvent(event);\\n      });\\n    }\\n  }\\n\\n  showDropdownMenu(): void {\\n    if (this.dropdownMenuRef) {\\n      this.dropdownMenuRef.destroy();\\n    }\\n\\n    this.dropdownMenuRef = this.overlayService.create(DropdownMenuComponent, this.viewContainerRef);\\n\\n    const menuId = this.dropdownId;\\n\\n    this.dropdownMenuRef.setInput(\\"menuId\\", menuId);\\n\\n    this.dropdownService.openMenu(menuId);\\n\\n    this.assignItems();\\n    this.positionDropdownMenu(this.rteDropdownPosition());\\n    this.addClickOutsideListener();\\n\\n    this.dropdownMenuRef.instance.itemEvent.subscribe((event: { event: Event; id: string }) => {\\n      this.onMenuEvent(event);\\n    });\\n\\n    const dropdownStateSubscription = this.dropdownService.state$\\n      .pipe(takeUntilDestroyed(this.destroyRef))\\n      .subscribe((state) => {\\n        if (state === null) {\\n          if (this.dropdownMenuRef) {\\n            this.dropdownMenuRef.destroy();\\n            this.dropdownMenuRef = null;\\n\\n            this.removeClickOutsideListener();\\n            dropdownStateSubscription.unsubscribe();\\n          }\\n        }\\n      });\\n  }\\n\\n  private assignItems(): void {\\n    if (this.dropdownMenuRef) {\\n      this.dropdownMenuRef.setInput(\\"items\\", this.menu()?.items());\\n    }\\n  }\\n\\n  private positionDropdownMenu(position: Position = \\"bottom\\"): void {\\n    if (this.dropdownMenuRef && this.trigger()) {\\n      const dropdownMenuElement = this.dropdownMenuRef.location.nativeElement;\\n      const triggerElement = this.trigger()?.elementRef.nativeElement;\\n\\n      if (triggerElement) {\\n        this.renderer.setStyle(dropdownMenuElement, \\"display\\", \\"block\\");\\n        this.cdr.detectChanges();\\n        const computedPosition: Exclude<Position, \\"auto\\"> =\\n          position === \\"auto\\" ? getAutoPlacementDropdown(triggerElement, dropdownMenuElement, \\"bottom\\") : position;\\n        const autoAlignment = getAutoAlignment(triggerElement, dropdownMenuElement, computedPosition);\\n        const computedCoordinates = getCoordinates(\\n          computedPosition,\\n          triggerElement,\\n          dropdownMenuElement.children[0],\\n          this.rteDropdownOffset(),\\n          autoAlignment,\\n        );\\n\\n        this.renderer.setStyle(dropdownMenuElement, \\"top\\", `${computedCoordinates.top}px`);\\n        this.renderer.setStyle(dropdownMenuElement, \\"left\\", `${computedCoordinates.left}px`);\\n\\n        this.renderer.setStyle(dropdownMenuElement, \\"opacity\\", \\"1\\");\\n      }\\n    }\\n  }\\n\\n  ngOnDestroy(): void {\\n    this.removeClickOutsideListener();\\n    if (this.dropdownMenuRef) {\\n      this.dropdownMenuRef.destroy();\\n    }\\n  }\\n\\n  private readonly handleClickOutside = (event: MouseEvent): void => {\\n    const target = event.target as Element;\\n\\n    const isMenuItemClick = target.closest(\\".rte-dropdown-item\\") !== null;\\n    if (isMenuItemClick) {\\n      return;\\n    }\\n\\n    const clickedInTrigger = this.hostElement.contains(target);\\n\\n    if (!clickedInTrigger) {\\n      this.closeDropdown();\\n    }\\n  };\\n\\n  private addClickOutsideListener(): void {\\n    document.addEventListener(\\"mousedown\\", this.handleClickOutside);\\n  }\\n\\n  private removeClickOutsideListener(): void {\\n    document.removeEventListener(\\"mousedown\\", this.handleClickOutside);\\n  }\\n\\n  private closeDropdown(): void {\\n    this.dropdownService.closeAllMenus();\\n  }\\n}\\n","selector":"[rteDropdown]","providers":[],"hostDirectives":[],"standalone":true,"inputsClass":[{"name":"rteDropdownIsOpen","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":46,"modifierKind":[148],"required":false},{"name":"rteDropdownOffset","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","indexKey":"","optional":false,"description":"","line":47,"modifierKind":[148],"required":false},{"name":"rteDropdownPosition","defaultValue":"\\"bottom\\"","deprecated":false,"deprecationMessage":"","type":"Position","indexKey":"","optional":false,"description":"","line":45,"modifierKind":[148],"required":false}],"outputsClass":[{"name":"menuEvent","deprecated":false,"deprecationMessage":"","type":"{ event: Event; id: string }","indexKey":"","optional":false,"description":"","line":50,"modifierKind":[148],"required":false}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[{"name":"cdr","defaultValue":"inject(ChangeDetectorRef)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":59,"modifierKind":[148]},{"name":"destroyRef","defaultValue":"inject(DestroyRef)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":58,"modifierKind":[148]},{"name":"dropdownId","defaultValue":"`dropdown_${++DropdownDirective.idCounter}`","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":49,"modifierKind":[148]},{"name":"dropdownMenuRef","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"ComponentRef<DropdownMenuComponent> | null","indexKey":"","optional":false,"description":"","line":65},{"name":"dropdownService","defaultValue":"inject(DropdownService)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":53,"modifierKind":[148]},{"name":"elementRef","defaultValue":"inject(ElementRef)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":55,"modifierKind":[148]},{"name":"handleClickOutside","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":181,"modifierKind":[123,148]},{"name":"hostElement","deprecated":false,"deprecationMessage":"","type":"HTMLElement","indexKey":"","optional":false,"description":"","line":57,"modifierKind":[148]},{"name":"idCounter","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","indexKey":"","optional":false,"description":"","line":40,"modifierKind":[123,126]},{"name":"menu","defaultValue":"contentChild(DropdownMenuComponent)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":43,"modifierKind":[148]},{"name":"overlayService","defaultValue":"inject(OverlayService)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":52,"modifierKind":[148]},{"name":"renderer","defaultValue":"inject(Renderer2)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":56,"modifierKind":[148]},{"name":"trigger","defaultValue":"contentChild(DropdownTriggerDirective)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":42,"modifierKind":[148]},{"name":"viewContainerRef","defaultValue":"inject(ViewContainerRef)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":54,"modifierKind":[148]}],"methodsClass":[{"name":"addClickOutsideListener","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":196,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"assignItems","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":141,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"closeDropdown","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":204,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngAfterContentInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":93,"deprecated":false,"deprecationMessage":""},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":""},{"name":"onMenuEvent","args":[{"name":"event","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":88,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onTrigger","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":""},{"name":"onTriggerKeyEvent","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":71,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"positionDropdownMenu","args":[{"name":"position","type":"Position","deprecated":false,"deprecationMessage":"","defaultValue":"\\"bottom\\""}],"optional":false,"returnType":"void","typeParameters":[],"line":147,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"position","type":"Position","deprecated":false,"deprecationMessage":"","defaultValue":"\\"bottom\\"","tagName":{"text":"param"}}]},{"name":"removeClickOutsideListener","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":200,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"showDropdownMenu","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":""}],"extends":[],"implements":["AfterContentInit","OnDestroy"],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":59}},{"name":"DropdownTriggerDirective","id":"directive-DropdownTriggerDirective-20e1498892d8d2e2a6034170def7d36b96d13def4cc838179817bb0a1c8c2f9b10d84543d0b073cac5f2bb53b1f7d18d96b619eb85e46845519a51ae237435ac","file":"projects/ds-rte-lib/src/lib/components/dropdown/dropdown-trigger/dropdown-trigger.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { Directive, ElementRef, HostListener, inject, output } from \\"@angular/core\\";\\n\\n@Directive({\\n  selector: \\"[rteDropdownTrigger]\\",\\n  standalone: true,\\n})\\nexport class DropdownTriggerDirective {\\n  readonly elementRef = inject(ElementRef);\\n\\n  readonly dropdownKeyDown = output<KeyboardEvent>();\\n\\n  readonly dropdownTriggered = output<Event>();\\n\\n  @HostListener(\\"click\\", [\\"$event\\"])\\n  onDropdownTriggered(event: Event): void {\\n    this.dropdownTriggered.emit(event);\\n  }\\n\\n  @HostListener(\\"keydown\\", [\\"$event\\"])\\n  onKeyDown(event: KeyboardEvent): void {\\n    this.dropdownKeyDown.emit(event);\\n  }\\n}\\n","selector":"[rteDropdownTrigger]","providers":[],"hostDirectives":[],"standalone":true,"inputsClass":[],"outputsClass":[{"name":"dropdownKeyDown","deprecated":false,"deprecationMessage":"","type":"KeyboardEvent","indexKey":"","optional":false,"description":"","line":10,"modifierKind":[148],"required":false},{"name":"dropdownTriggered","deprecated":false,"deprecationMessage":"","type":"Event","indexKey":"","optional":false,"description":"","line":12,"modifierKind":[148],"required":false}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"click","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"argsDecorator":["$event"],"deprecated":false,"deprecationMessage":"","line":15},{"name":"keydown","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""}],"argsDecorator":["$event"],"deprecated":false,"deprecationMessage":"","line":20}],"propertiesClass":[{"name":"elementRef","defaultValue":"inject(ElementRef)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":8,"modifierKind":[148]}],"methodsClass":[{"name":"onDropdownTriggered","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'click\', [\'$event\']"}],"modifierKind":[171],"jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onKeyDown","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'keydown\', [\'$event\']"}],"modifierKind":[171],"jsdoctags":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"extends":[]},{"name":"GridDirective","id":"directive-GridDirective-da7291dbfff52e7d39103a3459dc92b3118ab8e3e1c969bef13c80a36f82ab9973d561a687ca440310c237da8d647f1dcacec3b07ae95c75c9c95070dff446ae","file":"projects/ds-rte-lib/src/lib/components/grid/grid.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { Directive, HostBinding, input } from \\"@angular/core\\";\\nimport { GridType } from \\"@design-system-rte/core/components/grid/grid.interface\\";\\n\\n@Directive({\\n  selector: \\"[rteGrid]\\",\\n  standalone: true,\\n})\\nexport class GridDirective {\\n  readonly gridType = input<GridType>(\\"fluid\\");\\n\\n  @HostBinding(\\"class\\")\\n  get hostClasses(): string {\\n    return \\"grid\\";\\n  }\\n\\n  @HostBinding(\\"attr.data-gridtype\\")\\n  get hostDataClasses(): string {\\n    const variation = this.gridType();\\n    return `${variation}`;\\n  }\\n  constructor() {}\\n}\\n","selector":"[rteGrid]","providers":[],"hostDirectives":[],"standalone":true,"inputsClass":[{"name":"gridType","defaultValue":"\\"fluid\\"","deprecated":false,"deprecationMessage":"","type":"GridType","indexKey":"","optional":false,"description":"","line":9,"modifierKind":[148],"required":false}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[{"name":"attr.data-gridtype","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[]},{"name":"class","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[]}],"hostListeners":[],"propertiesClass":[],"methodsClass":[],"extends":[],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":20},"accessors":{"hostClasses":{"name":"hostClasses","getSignature":{"name":"hostClasses","type":"string","returnType":"string","line":12}},"hostDataClasses":{"name":"hostDataClasses","getSignature":{"name":"hostDataClasses","type":"string","returnType":"string","line":17}}}},{"name":"PopoverDirective","id":"directive-PopoverDirective-9117d0a11a7ba09eb8e5b4e9dabb629c9caf6f00353f155e950c12ef1e095efe7efeedd7d3df40db2e9a2dc77695379454d7949679355635558ae1485467bac1","file":"projects/ds-rte-lib/src/lib/components/popover/popover.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import {\\n  AfterViewInit,\\n  ComponentRef,\\n  Directive,\\n  ElementRef,\\n  HostListener,\\n  inject,\\n  input,\\n  OnDestroy,\\n  output,\\n  Renderer2,\\n  ViewContainerRef,\\n} from \\"@angular/core\\";\\nimport { POPOVER_GAP, POPOVER_GAP_ARROW } from \\"@design-system-rte/core/components/popover/popover.constants\\";\\nimport {\\n  getAutoAlignment,\\n  getAutoPlacement,\\n  getCoordinates,\\n} from \\"@design-system-rte/core/components/utils/auto-placement\\";\\nimport { ESCAPE_KEY } from \\"@design-system-rte/core/constants/keyboard/keyboard.constants\\";\\n\\nimport { OverlayService } from \\"../../services/overlay.service\\";\\n\\nimport { PopoverComponent } from \\"./popover.component\\";\\n\\n@Directive({\\n  selector: \\"[rtePopover]\\",\\n  standalone: true,\\n})\\nexport class PopoverDirective implements AfterViewInit, OnDestroy {\\n  readonly rtePopoverContent = input.required<string>();\\n  readonly rtePopoverTitle = input<string>();\\n  readonly rtePopoverPosition = input(\\"auto\\");\\n  readonly rtePopoverAlignment = input(\\"center\\");\\n  readonly rtePopoverArrow = input(true);\\n  readonly rtePopoverPrimaryButtonLabel = input<string>();\\n  readonly rtePopoverSecondaryButtonLabel = input<string>();\\n  readonly clickPrimaryButton = output<void>();\\n  readonly clickSecondaryButton = output<void>();\\n  readonly rtePopoverCloseOnClickOutside = input<boolean>(true);\\n  readonly rtePopoverCloseOnEscape = input<boolean>(true);\\n\\n  private popoverRef: ComponentRef<PopoverComponent> | null = null;\\n  private hostElement: HTMLElement;\\n  private overlayService: OverlayService;\\n\\n  private elementRef = inject(ElementRef);\\n  private viewContainerRef = inject(ViewContainerRef);\\n  private renderer = inject(Renderer2);\\n\\n  private subPrimary?: { unsubscribe(): void };\\n  private subSecondary?: { unsubscribe(): void };\\n\\n  private onScroll = () => this.positionPopover();\\n  private onMouseDown = (e: MouseEvent) => this.handleClickAway(e);\\n  private onKeyDown = (e: KeyboardEvent) => this.handleKeydown(e);\\n\\n  @HostListener(\\"click\\")\\n  onClick(): void {\\n    if (!this.popoverRef) {\\n      this.showPopover();\\n    }\\n  }\\n\\n  constructor() {\\n    this.overlayService = inject(OverlayService);\\n    this.hostElement = this.elementRef.nativeElement;\\n    this.hostElement.setAttribute(\\"tabindex\\", \\"0\\");\\n  }\\n\\n  ngAfterViewInit() {\\n    window.addEventListener(\\"scroll\\", this.onScroll);\\n    document.addEventListener(\\"mousedown\\", this.onMouseDown);\\n    document.addEventListener(\\"keydown\\", this.onKeyDown);\\n  }\\n\\n  ngOnDestroy() {\\n    window.removeEventListener(\\"scroll\\", this.onScroll);\\n    document.removeEventListener(\\"mousedown\\", this.onMouseDown);\\n    document.removeEventListener(\\"keydown\\", this.onKeyDown);\\n    this.destroyPopover();\\n  }\\n\\n  showPopover(): void {\\n    if (this.popoverRef) {\\n      this.popoverRef.destroy();\\n    }\\n    this.popoverRef = this.overlayService.create(PopoverComponent, this.viewContainerRef);\\n\\n    this.subPrimary?.unsubscribe();\\n    this.subSecondary?.unsubscribe();\\n    this.subPrimary = this.popoverRef.instance.clickPrimaryButton.subscribe(() => this.handleClickPrimaryButton());\\n    this.subSecondary = this.popoverRef.instance.clickSecondaryButton.subscribe(() =>\\n      this.handleClickSecondaryButton(),\\n    );\\n\\n    this.assignDirectiveToComponent();\\n    requestAnimationFrame(() => {\\n      requestAnimationFrame(() => {\\n        this.positionPopover();\\n      });\\n    });\\n  }\\n\\n  private handleClickAway(event: MouseEvent) {\\n    const elements = [this.hostElement, this.popoverRef?.location.nativeElement] as HTMLElement[];\\n    if (elements.some((element) => !element)) return;\\n    const shouldIgnore = elements.some((element) => element.contains(event.target as Node));\\n    if (!shouldIgnore && this.rtePopoverCloseOnClickOutside()) {\\n      this.hidePopover();\\n    }\\n  }\\n\\n  private handleKeydown(event: KeyboardEvent) {\\n    if (event.key === ESCAPE_KEY && this.rtePopoverCloseOnEscape()) {\\n      event.preventDefault();\\n      this.hidePopover();\\n    }\\n  }\\n\\n  private assignDirectiveToComponent(): void {\\n    if (this.popoverRef) {\\n      const popoverElement = this.popoverRef.location.nativeElement.children[0];\\n\\n      const position =\\n        this.rtePopoverPosition() === \\"auto\\"\\n          ? getAutoPlacement(\\n              this.hostElement,\\n              popoverElement,\\n              \\"top\\",\\n              this.rtePopoverArrow() ? POPOVER_GAP_ARROW : POPOVER_GAP,\\n            )\\n          : this.rtePopoverPosition();\\n\\n      this.popoverRef.setInput(\\"title\\", this.rtePopoverTitle());\\n      this.popoverRef.setInput(\\"content\\", this.rtePopoverContent());\\n      this.popoverRef.setInput(\\"position\\", position);\\n      this.popoverRef.setInput(\\"alignment\\", this.rtePopoverAlignment());\\n      this.popoverRef.setInput(\\"arrow\\", this.rtePopoverArrow());\\n      this.popoverRef.setInput(\\"primaryButtonLabel\\", this.rtePopoverPrimaryButtonLabel());\\n      this.popoverRef.setInput(\\"secondaryButtonLabel\\", this.rtePopoverSecondaryButtonLabel());\\n    }\\n  }\\n\\n  private handleClickPrimaryButton() {\\n    if (!this.popoverRef) return;\\n    this.clickPrimaryButton.emit();\\n    this.hidePopover();\\n  }\\n\\n  private handleClickSecondaryButton() {\\n    this.clickSecondaryButton?.emit();\\n    this.hidePopover();\\n  }\\n\\n  private positionPopover(): void {\\n    if (this.popoverRef) {\\n      const popoverElement = this.popoverRef.location.nativeElement.children[0];\\n\\n      const autoAlignment = getAutoAlignment(this.hostElement, popoverElement, this.popoverRef.instance.position());\\n      this.popoverRef.setInput(\\"alignment\\", autoAlignment);\\n\\n      const positions = getCoordinates(\\n        this.popoverRef.instance.position(),\\n        this.hostElement,\\n        popoverElement,\\n        this.rtePopoverArrow() ? POPOVER_GAP_ARROW : POPOVER_GAP,\\n        autoAlignment,\\n      );\\n\\n      this.renderer.setStyle(this.hostElement, \\"position\\", \\"relative\\");\\n\\n      this.renderer.setStyle(popoverElement, \\"position\\", \\"absolute\\");\\n\\n      this.renderer.setStyle(popoverElement, \\"top\\", `${positions.top}px`);\\n      this.renderer.setStyle(popoverElement, \\"left\\", `${positions.left}px`);\\n      this.popoverRef.setInput(\\"isOpen\\", true);\\n    }\\n  }\\n\\n  private hidePopover(): void {\\n    if (this.popoverRef) {\\n      this.popoverRef.setInput(\\"isOpen\\", false);\\n\\n      setTimeout(() => this.destroyPopover(), 200);\\n    }\\n  }\\n\\n  private destroyPopover(): void {\\n    if (this.popoverRef) {\\n      this.subPrimary?.unsubscribe();\\n      this.subSecondary?.unsubscribe();\\n      this.subPrimary = undefined;\\n      this.subSecondary = undefined;\\n      this.popoverRef.destroy();\\n      this.popoverRef = null;\\n      this.overlayService.destroy();\\n    }\\n  }\\n}\\n","selector":"[rtePopover]","providers":[],"hostDirectives":[],"standalone":true,"inputsClass":[{"name":"rtePopoverAlignment","defaultValue":"\\"center\\"","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":34,"modifierKind":[148],"required":false},{"name":"rtePopoverArrow","defaultValue":"true","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":35,"modifierKind":[148],"required":false},{"name":"rtePopoverCloseOnClickOutside","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":40,"modifierKind":[148],"required":false},{"name":"rtePopoverCloseOnEscape","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":41,"modifierKind":[148],"required":false},{"name":"rtePopoverContent","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":31,"modifierKind":[148],"required":true},{"name":"rtePopoverPosition","defaultValue":"\\"auto\\"","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":33,"modifierKind":[148],"required":false},{"name":"rtePopoverPrimaryButtonLabel","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":36,"modifierKind":[148],"required":false},{"name":"rtePopoverSecondaryButtonLabel","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":37,"modifierKind":[148],"required":false},{"name":"rtePopoverTitle","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":32,"modifierKind":[148],"required":false}],"outputsClass":[{"name":"clickPrimaryButton","deprecated":false,"deprecationMessage":"","type":"void","indexKey":"","optional":false,"description":"","line":38,"modifierKind":[148],"required":false},{"name":"clickSecondaryButton","deprecated":false,"deprecationMessage":"","type":"void","indexKey":"","optional":false,"description":"","line":39,"modifierKind":[148],"required":false}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"click","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","line":59}],"propertiesClass":[{"name":"elementRef","defaultValue":"inject(ElementRef)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":47,"modifierKind":[123]},{"name":"hostElement","deprecated":false,"deprecationMessage":"","type":"HTMLElement","indexKey":"","optional":false,"description":"","line":44,"modifierKind":[123]},{"name":"onKeyDown","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":56,"modifierKind":[123]},{"name":"onMouseDown","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":55,"modifierKind":[123]},{"name":"onScroll","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":54,"modifierKind":[123]},{"name":"overlayService","deprecated":false,"deprecationMessage":"","type":"OverlayService","indexKey":"","optional":false,"description":"","line":45,"modifierKind":[123]},{"name":"popoverRef","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"ComponentRef<PopoverComponent> | null","indexKey":"","optional":false,"description":"","line":43,"modifierKind":[123]},{"name":"renderer","defaultValue":"inject(Renderer2)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":49,"modifierKind":[123]},{"name":"subPrimary","deprecated":false,"deprecationMessage":"","type":"literal type","indexKey":"","optional":true,"description":"","line":51,"modifierKind":[123]},{"name":"subSecondary","deprecated":false,"deprecationMessage":"","type":"literal type","indexKey":"","optional":true,"description":"","line":52,"modifierKind":[123]},{"name":"viewContainerRef","defaultValue":"inject(ViewContainerRef)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":48,"modifierKind":[123]}],"methodsClass":[{"name":"assignDirectiveToComponent","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":121,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"destroyPopover","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":189,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"handleClickAway","args":[{"name":"event","type":"MouseEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"MouseEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleClickPrimaryButton","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":145,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"handleClickSecondaryButton","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":151,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"handleKeydown","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"hidePopover","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":71,"deprecated":false,"deprecationMessage":""},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":77,"deprecated":false,"deprecationMessage":""},{"name":"onClick","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'click\'"}],"modifierKind":[171]},{"name":"positionPopover","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":156,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"showPopover","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":""}],"extends":[],"implements":["AfterViewInit","OnDestroy"],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":63}},{"name":"TooltipDirective","id":"directive-TooltipDirective-e8c65f7a4e3972153488353d11d8e5a40279dbb4a7cd4eda42b5ba6a4671dfa9ba507658c93b593f2b2ffeed39853f0a0d7e6840eb54517cac3aadcd9ca1d128","file":"projects/ds-rte-lib/src/lib/components/tooltip/tooltip.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import {\\n  AfterViewInit,\\n  ChangeDetectorRef,\\n  ComponentRef,\\n  Directive,\\n  ElementRef,\\n  HostListener,\\n  inject,\\n  input,\\n  OnDestroy,\\n  Renderer2,\\n  ViewContainerRef,\\n} from \\"@angular/core\\";\\nimport { TOOLTIP_GAP, TOOLTIP_GAP_ARROW } from \\"@design-system-rte/core/components/tooltip/tooltip.constants\\";\\nimport { getAutoPlacement, getCoordinates } from \\"@design-system-rte/core/components/utils/auto-placement\\";\\n\\nimport { OverlayService } from \\"../../services/overlay.service\\";\\n\\nimport { TooltipComponent } from \\"./tooltip.component\\";\\n\\n@Directive({\\n  selector: \\"[rteTooltip]\\",\\n  standalone: true,\\n})\\nexport class TooltipDirective implements AfterViewInit, OnDestroy {\\n  readonly rteTooltip = input.required<string>();\\n  readonly rteTooltipPosition = input(\\"auto\\");\\n  readonly rteTooltipAlignment = input(\\"center\\");\\n  readonly rteTooltipArrow = input(true);\\n\\n  private tooltipRef: ComponentRef<TooltipComponent> | null = null;\\n  private hostElement: HTMLElement;\\n  private overlayService: OverlayService;\\n\\n  private elementRef = inject(ElementRef);\\n  private viewContainerRef = inject(ViewContainerRef);\\n  private renderer = inject(Renderer2);\\n  private cdr = inject(ChangeDetectorRef);\\n\\n  @HostListener(\\"mouseenter\\")\\n  onMouseEnter(): void {\\n    this.showTooltip();\\n  }\\n\\n  @HostListener(\\"mouseleave\\")\\n  onMouseLeave(): void {\\n    this.hideTooltip();\\n  }\\n\\n  @HostListener(\\"focus\\")\\n  onFocus(): void {\\n    this.showTooltip();\\n  }\\n\\n  @HostListener(\\"blur\\")\\n  onBlur(): void {\\n    this.hideTooltip();\\n  }\\n\\n  constructor() {\\n    this.overlayService = inject(OverlayService);\\n    this.hostElement = this.elementRef.nativeElement;\\n    this.hostElement.setAttribute(\\"tabindex\\", \\"0\\");\\n  }\\n\\n  ngAfterViewInit() {\\n    window.addEventListener(\\"scroll\\", this.positionTooltip.bind(this));\\n  }\\n\\n  ngOnDestroy() {\\n    window.removeEventListener(\\"scroll\\", this.positionTooltip.bind(this));\\n  }\\n\\n  showTooltip(): void {\\n    if (this.tooltipRef) {\\n      this.tooltipRef.destroy();\\n    }\\n\\n    this.tooltipRef = this.overlayService.create(TooltipComponent, this.viewContainerRef);\\n    this.assignDirectiveToComponent();\\n    this.positionTooltip();\\n  }\\n\\n  private assignDirectiveToComponent(): void {\\n    if (this.tooltipRef) {\\n      const tooltipElement = this.tooltipRef.location.nativeElement;\\n\\n      const position =\\n        this.rteTooltipPosition() === \\"auto\\"\\n          ? getAutoPlacement(\\n              this.hostElement,\\n              tooltipElement,\\n              \\"top\\",\\n              this.rteTooltipArrow() ? TOOLTIP_GAP_ARROW : TOOLTIP_GAP,\\n              true,\\n            )\\n          : this.rteTooltipPosition();\\n\\n      this.tooltipRef.setInput(\\"label\\", this.rteTooltip());\\n      this.tooltipRef.setInput(\\"position\\", position);\\n      this.tooltipRef.setInput(\\"alignment\\", this.rteTooltipAlignment());\\n      this.tooltipRef.setInput(\\"arrow\\", this.rteTooltipArrow());\\n    }\\n  }\\n\\n  private positionTooltip(): void {\\n    if (this.tooltipRef) {\\n      const tooltipElement = this.tooltipRef.location.nativeElement;\\n\\n      const positions = getCoordinates(\\n        this.tooltipRef.instance.position(),\\n        this.hostElement,\\n        tooltipElement,\\n        this.rteTooltipArrow() ? TOOLTIP_GAP_ARROW : TOOLTIP_GAP,\\n      );\\n\\n      this.renderer.setStyle(this.hostElement, \\"position\\", \\"relative\\");\\n\\n      this.renderer.setStyle(tooltipElement, \\"top\\", `${positions.top}px`);\\n      this.renderer.setStyle(tooltipElement, \\"left\\", `${positions.left}px`);\\n    }\\n  }\\n\\n  private hideTooltip(): void {\\n    if (this.tooltipRef) {\\n      const tooltipElement = this.tooltipRef.location.nativeElement;\\n\\n      this.renderer.setStyle(tooltipElement, \\"opacity\\", \\"0\\");\\n\\n      setTimeout(() => {\\n        if (this.tooltipRef) {\\n          this.tooltipRef.destroy();\\n          this.tooltipRef = null;\\n          this.overlayService.destroy();\\n        }\\n      }, 200);\\n    }\\n  }\\n}\\n","selector":"[rteTooltip]","providers":[],"hostDirectives":[],"standalone":true,"inputsClass":[{"name":"rteTooltip","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148],"required":true},{"name":"rteTooltipAlignment","defaultValue":"\\"center\\"","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":28,"modifierKind":[148],"required":false},{"name":"rteTooltipArrow","defaultValue":"true","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":29,"modifierKind":[148],"required":false},{"name":"rteTooltipPosition","defaultValue":"\\"auto\\"","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[148],"required":false}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"blur","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","line":56},{"name":"focus","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","line":51},{"name":"mouseenter","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","line":41},{"name":"mouseleave","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","line":46}],"propertiesClass":[{"name":"cdr","defaultValue":"inject(ChangeDetectorRef)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":38,"modifierKind":[123]},{"name":"elementRef","defaultValue":"inject(ElementRef)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":35,"modifierKind":[123]},{"name":"hostElement","deprecated":false,"deprecationMessage":"","type":"HTMLElement","indexKey":"","optional":false,"description":"","line":32,"modifierKind":[123]},{"name":"overlayService","deprecated":false,"deprecationMessage":"","type":"OverlayService","indexKey":"","optional":false,"description":"","line":33,"modifierKind":[123]},{"name":"renderer","defaultValue":"inject(Renderer2)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":37,"modifierKind":[123]},{"name":"tooltipRef","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"ComponentRef<TooltipComponent> | null","indexKey":"","optional":false,"description":"","line":31,"modifierKind":[123]},{"name":"viewContainerRef","defaultValue":"inject(ViewContainerRef)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":36,"modifierKind":[123]}],"methodsClass":[{"name":"assignDirectiveToComponent","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"hideTooltip","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":124,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":""},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":70,"deprecated":false,"deprecationMessage":""},{"name":"onBlur","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":56,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'blur\'"}],"modifierKind":[171]},{"name":"onFocus","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'focus\'"}],"modifierKind":[171]},{"name":"onMouseEnter","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'mouseenter\'"}],"modifierKind":[171]},{"name":"onMouseLeave","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'mouseleave\'"}],"modifierKind":[171]},{"name":"positionTooltip","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":106,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"showTooltip","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":""}],"extends":[],"implements":["AfterViewInit","OnDestroy"],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":58}}],"components":[{"name":"BadgeComponent","id":"component-BadgeComponent-b09e1216e5e0b580bb18b43a9cbe27d1bbdf614c5705f38185592a75656fa7c12be569562f632af4f2f403986976a2738620a913f80e9acd2408701321689fc2","file":"projects/ds-rte-lib/src/lib/components/badge/badge.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-badge","styleUrls":[],"styles":[],"templateUrl":["./badge.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"badgeContent","defaultValue":"\\"number\\"","deprecated":false,"deprecationMessage":"","type":"BadgeContent","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148],"required":false},{"name":"badgeSize","defaultValue":"\\"m\\"","deprecated":false,"deprecationMessage":"","type":"BadgeSize","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148],"required":false},{"name":"badgeType","defaultValue":"\\"brand\\"","deprecated":false,"deprecationMessage":"","type":"BadgeType","indexKey":"","optional":false,"description":"","line":24,"modifierKind":[148],"required":false},{"name":"count","deprecated":false,"deprecationMessage":"","type":"number | undefined","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[148],"required":false},{"name":"icon","defaultValue":"\\"notification\\"","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":28,"modifierKind":[148],"required":false},{"name":"simpleBadge","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":29,"modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[{"name":"countOverflow","defaultValue":"computed(() => this.showText() && this.displayCount().length > 2)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":50,"modifierKind":[148]},{"name":"displayCount","defaultValue":"computed(() => getDisplayCount(this.count()))","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":49,"modifierKind":[148]},{"name":"iconSize","defaultValue":"computed(() => getBadgeIconSize(this.badgeSize()))","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":51,"modifierKind":[148]},{"name":"isValidIconName","defaultValue":"computed(() => isValidIconName(this.icon()))","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":31,"modifierKind":[148]},{"name":"showBadge","defaultValue":"computed(() =>\\n    getShowBadge({\\n      size: this.badgeSize(),\\n      content: this.badgeContent(),\\n      count: this.count(),\\n      iconSize: this.iconSize(),\\n    }),\\n  )","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":53,"modifierKind":[148]},{"name":"showIcon","defaultValue":"computed(() =>\\n    getShowIcon({\\n      size: this.badgeSize(),\\n      content: this.badgeContent(),\\n      iconSize: this.iconSize(),\\n    }),\\n  )","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":33,"modifierKind":[148]},{"name":"showText","defaultValue":"computed(() =>\\n    getShowText({\\n      size: this.badgeSize(),\\n      content: this.badgeContent(),\\n      count: this.count(),\\n    }),\\n  )","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":41,"modifierKind":[148]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { Component, input, computed, ChangeDetectionStrategy } from \\"@angular/core\\";\\nimport { BadgeContent, BadgeSize, BadgeType } from \\"@design-system-rte/core/components/badge/badge.interface\\";\\nimport {\\n  getBadgeIconSize,\\n  getDisplayCount,\\n  getShowBadge,\\n  getShowIcon,\\n  getShowText,\\n} from \\"@design-system-rte/core/components/badge/badge.utils\\";\\n\\nimport { isValidIconName } from \\"../icon/icon-map\\";\\nimport { IconComponent } from \\"../icon/icon.component\\";\\n\\n@Component({\\n  selector: \\"rte-badge\\",\\n  imports: [CommonModule, IconComponent],\\n  standalone: true,\\n  templateUrl: \\"./badge.component.html\\",\\n  styleUrl: \\"./badge.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class BadgeComponent {\\n  readonly badgeType = input<BadgeType>(\\"brand\\");\\n  readonly badgeSize = input<BadgeSize>(\\"m\\");\\n  readonly badgeContent = input<BadgeContent>(\\"number\\");\\n  readonly count = input<number | undefined>();\\n  readonly icon = input<string>(\\"notification\\");\\n  readonly simpleBadge = input<boolean>(false);\\n\\n  readonly isValidIconName = computed(() => isValidIconName(this.icon()));\\n\\n  readonly showIcon = computed(() =>\\n    getShowIcon({\\n      size: this.badgeSize(),\\n      content: this.badgeContent(),\\n      iconSize: this.iconSize(),\\n    }),\\n  );\\n\\n  readonly showText = computed(() =>\\n    getShowText({\\n      size: this.badgeSize(),\\n      content: this.badgeContent(),\\n      count: this.count(),\\n    }),\\n  );\\n\\n  readonly displayCount = computed(() => getDisplayCount(this.count()));\\n  readonly countOverflow = computed(() => this.showText() && this.displayCount().length > 2);\\n  readonly iconSize = computed(() => getBadgeIconSize(this.badgeSize()));\\n\\n  readonly showBadge = computed(() =>\\n    getShowBadge({\\n      size: this.badgeSize(),\\n      content: this.badgeContent(),\\n      count: this.count(),\\n      iconSize: this.iconSize(),\\n    }),\\n  );\\n}\\n","styleUrl":"./badge.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<div\\n  class=\\"badge size-{{ badgeSize() }} type-{{ badgeType() }}\\"\\n  data-testid=\\"badge\\"\\n  [attr.data-simple-badge]=\\"simpleBadge()\\"\\n  [ngClass]=\\"{ hidden: !showBadge(), \'count-overflow\': countOverflow() }\\"\\n>\\n  <rte-icon\\n    *ngIf=\\"showIcon()\\"\\n    class=\\"badge-icon\\"\\n    [name]=\\"icon()\\"\\n    [size]=\\"iconSize()!\\"\\n  />\\n  <span *ngIf=\\"showText()\\" class=\\"badge-text\\">\\n    {{ displayCount() }}\\n  </span>\\n</div>\\n"},{"name":"BannerComponent","id":"component-BannerComponent-a0301aeebd22c3b8e359b6e40477852e476becfb44edcfa7c5374006ae45aa633f21311546d4d1af0fd5939b66e2e54394fe294515dee94d2de547cd8a1473f1","file":"projects/ds-rte-lib/src/lib/components/banner/banner.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-banner","styleUrls":[],"styles":[],"templateUrl":["./banner.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"actionLabel","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":34,"modifierKind":[148],"required":false},{"name":"closable","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":31,"modifierKind":[148],"required":false},{"name":"isOpen","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":33,"modifierKind":[148],"required":false},{"name":"message","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":28,"modifierKind":[148],"required":true},{"name":"position","defaultValue":"\\"push\\"","deprecated":false,"deprecationMessage":"","type":"BannerPosition","indexKey":"","optional":false,"description":"","line":29,"modifierKind":[148],"required":false},{"name":"showIcon","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":32,"modifierKind":[148],"required":false},{"name":"title","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":30,"modifierKind":[148],"required":false},{"name":"type","defaultValue":"\\"default\\"","deprecated":false,"deprecationMessage":"","type":"BannerType","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[148],"required":false}],"outputsClass":[{"name":"click","deprecated":false,"deprecationMessage":"","type":"void","indexKey":"","optional":false,"description":"","line":36,"modifierKind":[148],"required":false},{"name":"close","deprecated":false,"deprecationMessage":"","type":"void","indexKey":"","optional":false,"description":"","line":41,"modifierKind":[148],"required":false}],"propertiesClass":[{"name":"rendering","defaultValue":"signal(false)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":39,"modifierKind":[148]},{"name":"visible","defaultValue":"signal(false)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":38,"modifierKind":[148]}],"methodsClass":[{"name":"clickAction","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":""},{"name":"closeBanner","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":65,"deprecated":false,"deprecationMessage":""},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":""},{"name":"openBanner","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconComponent","type":"component"},{"name":"IconButtonComponent","type":"component"},{"name":"ButtonComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport {\\n  ChangeDetectionStrategy,\\n  Component,\\n  input,\\n  output,\\n  signal,\\n  SimpleChanges,\\n  OnInit,\\n  OnChanges,\\n} from \\"@angular/core\\";\\nimport { BannerPosition, BannerType } from \\"@design-system-rte/core/components/banner/banner.interface\\";\\n\\nimport { ButtonComponent } from \\"../button/button.component\\";\\nimport { IconComponent } from \\"../icon/icon.component\\";\\nimport { IconButtonComponent } from \\"../icon-button/icon-button.component\\";\\n\\n@Component({\\n  selector: \\"rte-banner\\",\\n  imports: [CommonModule, IconComponent, IconButtonComponent, ButtonComponent],\\n  standalone: true,\\n  templateUrl: \\"./banner.component.html\\",\\n  styleUrl: \\"./banner.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class BannerComponent implements OnInit, OnChanges {\\n  readonly type = input<BannerType>(\\"default\\");\\n  readonly message = input.required<string>();\\n  readonly position = input<BannerPosition>(\\"push\\");\\n  readonly title = input<string>();\\n  readonly closable = input<boolean>(false);\\n  readonly showIcon = input<boolean>(false);\\n  readonly isOpen = input<boolean>(true);\\n  readonly actionLabel = input<string>();\\n\\n  readonly click = output<void>();\\n\\n  readonly visible = signal(false);\\n  readonly rendering = signal(false);\\n\\n  readonly close = output<void>();\\n\\n  ngOnInit() {\\n    this.visible.set(this.isOpen());\\n    this.rendering.set(this.isOpen());\\n    if (this.closable() === false && this.position() === \\"overlay\\") {\\n      console.warn(\\"Banner: \'closable\' and \'close\' props must be set when \'position\' has \'overlay\' value.\\");\\n      return;\\n    }\\n  }\\n\\n  ngOnChanges(changes: SimpleChanges) {\\n    if (changes[\\"isOpen\\"]) {\\n      if (this.isOpen()) this.openBanner();\\n      else {\\n        this.closeBanner();\\n      }\\n    }\\n  }\\n\\n  clickAction() {\\n    this.click.emit();\\n  }\\n\\n  closeBanner() {\\n    this.visible.set(false);\\n    setTimeout(() => {\\n      this.rendering.set(false);\\n      this.close.emit();\\n    }, 200);\\n  }\\n\\n  private openBanner() {\\n    if (this.rendering()) return;\\n    this.rendering.set(true);\\n    requestAnimationFrame(() => {\\n      requestAnimationFrame(() => this.visible.set(true));\\n    });\\n  }\\n}\\n","styleUrl":"./banner.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"implements":["OnInit","OnChanges"],"templateData":"<section\\n  *ngIf=\\"rendering()\\"\\n  class=\\"rte-banner-container {{ type() }} {{ position() }}\\"\\n  [ngClass]=\\"{ open: visible(), close: !visible() }\\"\\n  [attr.role]=\\"type() === \'default\' ? \'status\' : \'alert\'\\"\\n>\\n  <div class=\\"rte-banner\\">\\n    <div *ngIf=\\"showIcon()\\" class=\\"rte-banner-icon\\">\\n      <rte-icon [name]=\\"type() === \'default\' ? \'info\' : \'error\'\\" [size]=\\"32\\" />\\n    </div>\\n    <div class=\\"rte-banner-content\\">\\n      <span *ngIf=\\"title()\\" class=\\"rte-banner-title\\">{{ title() }}</span>\\n      <div *ngIf=\\"message()\\" class=\\"rte-banner-message\\">\\n        <span>{{ message() }}</span>\\n        <rte-button\\n          *ngIf=\\"actionLabel()\\"\\n          variant=\\"neutral\\"\\n          size=\\"s\\"\\n          [label]=\\"actionLabel()!\\"\\n          [ariaLabel]=\\"actionLabel()!\\"\\n          (click)=\\"clickAction()\\"\\n        />\\n      </div>\\n    </div>\\n    <div *ngIf=\\"closable()\\" class=\\"rte-banner-close-icon\\">\\n      <rte-icon-button\\n        name=\\"close\\"\\n        variant=\\"neutral\\"\\n        ariaLabel=\\"close banner\\"\\n        (click)=\\"closeBanner()\\"\\n      />\\n    </div>\\n  </div>\\n</section>\\n"},{"name":"BreadcrumbsComponent","id":"component-BreadcrumbsComponent-187a5870a33aafe0094b254d179320678f85e94ca2548a14e73bbb30c6044bf2e014d5af52ba3a37c5e3ec9b58d4af48f382679bfaee4559dbe50ae8090bbecb","file":"projects/ds-rte-lib/src/lib/components/breadcrumbs/breadcrumbs.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-breadcrumbs","styleUrls":[],"styles":[],"templateUrl":["./breadcrumbs.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"ariaLabel","defaultValue":"BREADCRUMBS_DEFAULT_ARIA_LABEL","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[148],"required":false},{"name":"items","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"BreadcrumbProps[]","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[{"name":"truncatedItems","defaultValue":"computed<BreadcrumbsTruncatedItems | null>(() => {\\n    if (shouldTruncateBreadcrumbs(this.items())) {\\n      return getBreadcrumbsTruncatedItems(this.items());\\n    }\\n    return null;\\n  })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":29,"modifierKind":[148]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"LinkComponent","type":"component"},{"name":"DropdownModule","type":"module"},{"name":"IconButtonComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, computed, input } from \\"@angular/core\\";\\nimport { BREADCRUMBS_DEFAULT_ARIA_LABEL } from \\"@design-system-rte/core/components/breadcrumbs/breadcrumbs.constants\\";\\nimport {\\n  BreadcrumbProps,\\n  BreadcrumbsTruncatedItems,\\n} from \\"@design-system-rte/core/components/breadcrumbs/breadcrumbs.interface\\";\\nimport {\\n  getBreadcrumbsTruncatedItems,\\n  shouldTruncateBreadcrumbs,\\n} from \\"@design-system-rte/core/components/breadcrumbs/breadcrumbs.utils\\";\\n\\nimport { DropdownModule } from \\"../dropdown\\";\\nimport { IconButtonComponent } from \\"../icon-button/icon-button.component\\";\\nimport { LinkComponent } from \\"../link/link.component\\";\\n\\n@Component({\\n  selector: \\"rte-breadcrumbs\\",\\n  imports: [CommonModule, LinkComponent, DropdownModule, IconButtonComponent],\\n  standalone: true,\\n  templateUrl: \\"./breadcrumbs.component.html\\",\\n  styleUrl: \\"./breadcrumbs.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class BreadcrumbsComponent {\\n  readonly items = input<BreadcrumbProps[]>([]);\\n  readonly ariaLabel = input<string>(BREADCRUMBS_DEFAULT_ARIA_LABEL);\\n\\n  readonly truncatedItems = computed<BreadcrumbsTruncatedItems | null>(() => {\\n    if (shouldTruncateBreadcrumbs(this.items())) {\\n      return getBreadcrumbsTruncatedItems(this.items());\\n    }\\n    return null;\\n  });\\n}\\n","styleUrl":"./breadcrumbs.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<nav\\n  class=\\"breadcrumbs-container\\"\\n  role=\\"navigation\\"\\n  [attr.aria-label]=\\"ariaLabel()\\"\\n  [ngClass]=\\"{ truncated: truncatedItems()?.truncated?.length }\\"\\n>\\n  @if (truncatedItems()?.truncated?.length) {\\n    <div class=\\"breadcrumb-item\\">\\n      <rte-link\\n        [href]=\\"truncatedItems()!.root.link\\"\\n        [label]=\\"truncatedItems()!.root.label\\"\\n        [subtle]=\\"true\\"\\n      />\\n    </div>\\n    <span aria-hidden=\\"true\\" class=\\"separator\\">/</span>\\n    <span class=\\"breadcrumb-item\\" rteDropdown [rteDropdownOffset]=\\"8\\">\\n      <rte-icon-button\\n          rteDropdownTrigger\\n          name=\\"more-horiz\\"\\n          role=\\"menu\\"\\n          variant=\\"neutral\\"\\n          aria-label=\\"More items\\"\\n          data-testid=\\"show-more\\"\\n          dropdownTrigger\\n          tabindex=\\"-1\\"\\n          [compactSpacing]=\\"true\\"\\n        />\\n      <rte-dropdown-menu [items]=\\"truncatedItems()?.truncated ?? []\\" />\\n    </span>\\n    <span aria-hidden=\\"true\\" class=\\"separator\\">/</span>\\n    @for (\\n      item of truncatedItems()!.remaining;\\n      track item.link;\\n      let i = $index\\n    ) {\\n      <div class=\\"breadcrumb-item\\">\\n        @if (i === truncatedItems()!.remaining.length - 1) {\\n          <a\\n            role=\\"link\\"\\n            aria-current=\\"page\\"\\n            tabindex=\\"0\\"\\n            [attr.aria-label]=\\"item.label\\"\\n          >\\n            {{ item.label }}\\n          </a>\\n        } @else {\\n          <rte-link [href]=\\"item.link\\" [label]=\\"item.label\\" [subtle]=\\"true\\" />\\n        }\\n      </div>\\n      @if (i < truncatedItems()!.remaining.length - 1) {\\n        <span aria-hidden=\\"true\\" class=\\"separator\\">/</span>\\n      }\\n    }\\n  } @else {\\n    @for (item of items(); track item.link; let i = $index) {\\n      <div class=\\"breadcrumb-item\\">\\n        @if (i === items().length - 1) {\\n          <a\\n            role=\\"link\\"\\n            aria-current=\\"page\\"\\n            tabindex=\\"0\\"\\n            [attr.aria-label]=\\"item.label\\"\\n          >\\n            {{ item.label }}\\n          </a>\\n        } @else {\\n          <rte-link [href]=\\"item.link\\" [label]=\\"item.label\\" [subtle]=\\"true\\" />\\n        }\\n      </div>\\n      @if (i < items().length - 1) {\\n        <span aria-hidden=\\"true\\" class=\\"separator\\">/</span>\\n      }\\n    }\\n  }\\n</nav>\\n"},{"name":"ButtonComponent","id":"component-ButtonComponent-77356ff86fe614a1f61ee1d13b18eb5e35df2ef372a9bd0e3cbf47d7c058076f67252ecdaceef04c9b452c07780986743c99a656c6be0ee319d2f24b82b84cdd","file":"projects/ds-rte-lib/src/lib/components/button/button.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"button[rteButton]","styleUrls":[],"styles":[],"templateUrl":["./button.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"rteButtonSize","defaultValue":"\\"m\\"","deprecated":false,"deprecationMessage":"","type":"ButtonSize","indexKey":"","optional":false,"description":"","line":13,"modifierKind":[148],"required":false},{"name":"rteButtonVariant","defaultValue":"\\"primary\\"","deprecated":false,"deprecationMessage":"","type":"ButtonVariant","indexKey":"","optional":false,"description":"","line":12,"modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[{"name":"class","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[]}],"hostListeners":[],"standalone":true,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, HostBinding, input } from \\"@angular/core\\";\\nimport { ButtonSize, ButtonVariant } from \\"@design-system-rte/core/components/button/common/common-button\\";\\n\\n@Component({\\n  selector: \\"button[rteButton]\\",\\n  standalone: true,\\n  templateUrl: \\"./button.component.html\\",\\n  styleUrl: \\"./button.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ButtonComponent {\\n  readonly rteButtonVariant = input<ButtonVariant>(\\"primary\\");\\n  readonly rteButtonSize = input<ButtonSize>(\\"m\\");\\n\\n  @HostBinding(\\"class\\") get classes() {\\n    return `rte-button ${this.rteButtonVariant()} size-${this.rteButtonSize()}`;\\n  }\\n}\\n","styleUrl":"./button.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"accessors":{"classes":{"name":"classes","getSignature":{"name":"classes","type":"","returnType":"","line":15}}},"templateData":"<span class=\\"rte-button-label\\">\\n    <ng-content/>\\n</span>"},{"name":"CheckboxComponent","id":"component-CheckboxComponent-4b7ae037221937ef3b0df8f652a9173b69b32a68a5b6098d6999473833245ce0b7036c85729d3880907148171d775e1cf7a9fa30f12731f4f7693d9750beb14b","file":"projects/ds-rte-lib/src/lib/components/checkbox/checkbox.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-checkbox","styleUrls":[],"styles":[],"templateUrl":["./checkbox.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"checked","defaultValue":"false","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148],"required":false},{"name":"description","defaultValue":"\\"\\"","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":19,"modifierKind":[148],"required":false},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":21,"modifierKind":[148],"required":false},{"name":"error","defaultValue":"false","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148],"required":false},{"name":"errorMessage","defaultValue":"\\"\\"","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":23,"modifierKind":[148],"required":false},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":15,"modifierKind":[148],"required":true},{"name":"indeterminate","defaultValue":"false","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148],"required":false},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":16,"modifierKind":[148],"required":true},{"name":"readOnly","defaultValue":"false","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":24,"modifierKind":[148],"required":false},{"name":"showLabel","defaultValue":"true","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":20,"modifierKind":[148],"required":false},{"name":"value","defaultValue":"\\"\\"","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":17,"modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"onKeydown","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":27,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, input } from \\"@angular/core\\";\\n\\nimport { IconComponent } from \\"../icon/icon.component\\";\\n\\n@Component({\\n  selector: \\"rte-checkbox\\",\\n  imports: [CommonModule, IconComponent],\\n  standalone: true,\\n  templateUrl: \\"./checkbox.component.html\\",\\n  styleUrl: \\"./checkbox.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class CheckboxComponent {\\n  readonly id = input.required<string>();\\n  readonly label = input.required<string>();\\n  readonly value = input(\\"\\");\\n  readonly indeterminate = input(false);\\n  readonly description = input(\\"\\");\\n  readonly showLabel = input(true);\\n  readonly disabled = input(false);\\n  readonly error = input(false);\\n  readonly errorMessage = input(\\"\\");\\n  readonly readOnly = input(false);\\n  readonly checked = input(false);\\n\\n  onKeydown(event: KeyboardEvent) {\\n    if (event.code === \\"Space\\") {\\n      if (this.readOnly()) {\\n        event.preventDefault();\\n      }\\n    }\\n  }\\n}\\n","styleUrl":"./checkbox.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"    <div class=\\"rte-checkbox-container\\">\\n        <input\\n            type=\\"checkbox\\"\\n            class=\\"rte-checkbox\\"\\n            [id]=\\"id()\\"\\n            [value]=\\"value()\\"\\n            [ngClass]=\\"{\'error\': error(), \'read-only\': readOnly()}\\"\\n            [disabled]=\\"disabled()\\"\\n            [indeterminate]=\\"indeterminate()\\"\\n            [checked]=\\"checked()\\"\\n            (keydown)=\\"onKeydown($event)\\"\\n        />\\n            <rte-icon class=\\"rte-checkbox-icons rte-checkbox-icon-selected\\" name=\\"check-small\\" [size]=\\"16\\"/> \\n            <rte-icon class=\\"rte-checkbox-icons rte-checkbox-icon-indeterminated\\" name=\\"check-indeterminate\\" [size]=\\"16\\" /> \\n        <div class=\\"rte-checkbox-text-container\\">\\n            <label \\n            *ngIf=\\"showLabel()\\" \\n            class=\\"rte-checkbox-label\\" \\n            [for]=\\"id()\\"\\n            [ngClass]=\\"{\\n                \'error\': error(),\\n                \'read-only\': readOnly(),\\n                \'disabled\': disabled()\\n            }\\"\\n            >\\n                {{ label() }}\\n            </label>\\n            <p class=\\"rte-checkbox-description\\">{{ description() }}</p>\\n            <p *ngIf=\\"error() && errorMessage()\\" class=\\"rte-checkbox-error\\">{{ errorMessage() }}</p>\\n        </div>\\n    </div>\\n"},{"name":"CheckboxGroupComponent","id":"component-CheckboxGroupComponent-fae539a32c26bf932dad4ec5ae0323e351faef9619e9b38698d529add9cacbc96107fea04677adb11198e7e9c506e51c4c32cabe6394a0134214424ecc0d8fe6","file":"projects/ds-rte-lib/src/lib/components/checkbox-group/checkbox-group.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-checkbox-group","styleUrls":[],"styles":[],"templateUrl":["./checkbox-group.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"direction","defaultValue":"\\"horizontal\\"","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":16,"modifierKind":[148],"required":false},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":24,"modifierKind":[148],"required":false},{"name":"error","defaultValue":"false","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":23,"modifierKind":[148],"required":false},{"name":"errorMessage","defaultValue":"\\"\\"","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148],"required":false},{"name":"groupHelpText","defaultValue":"\\"\\"","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":20,"modifierKind":[148],"required":false},{"name":"groupTitle","defaultValue":"\\"\\"","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148],"required":false},{"name":"items","deprecated":false,"deprecationMessage":"","type":"string[]","indexKey":"","optional":false,"description":"","line":15,"modifierKind":[148],"required":true},{"name":"readOnly","defaultValue":"false","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148],"required":false},{"name":"showGroupTitle","defaultValue":"false","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":19,"modifierKind":[148],"required":false},{"name":"showHelpText","defaultValue":"false","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":21,"modifierKind":[148],"required":false},{"name":"showItemsLabel","defaultValue":"true","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":17,"modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[{"name":"isDisplayed","defaultValue":"computed(() => !(this.disabled() && this.error()))","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[148]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"CheckboxComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, computed, input } from \\"@angular/core\\";\\n\\nimport { CheckboxComponent } from \\"../checkbox/checkbox.component\\";\\n\\n@Component({\\n  selector: \\"rte-checkbox-group\\",\\n  imports: [CommonModule, CheckboxComponent],\\n  standalone: true,\\n  templateUrl: \\"./checkbox-group.component.html\\",\\n  styleUrl: \\"./checkbox-group.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class CheckboxGroupComponent {\\n  readonly items = input.required<string[]>();\\n  readonly direction = input(\\"horizontal\\");\\n  readonly showItemsLabel = input(true);\\n  readonly groupTitle = input(\\"\\");\\n  readonly showGroupTitle = input(false);\\n  readonly groupHelpText = input(\\"\\");\\n  readonly showHelpText = input(false);\\n  readonly errorMessage = input(\\"\\");\\n  readonly error = input(false);\\n  readonly disabled = input(false);\\n  readonly readOnly = input(false);\\n\\n  readonly isDisplayed = computed(() => !(this.disabled() && this.error()));\\n}\\n","styleUrl":"./checkbox-group.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<div  \\n  *ngIf=\\"isDisplayed()\\"\\n  class=\\"checkbox-group-container\\">\\n  <div\\n    class=\\"checkbox-group-header\\"\\n    [ngClass]=\\"{\\n        \'disabled\': disabled(),\\n        \'error\': error(),\\n        \'read-only\': readOnly(),\\n    }\\">\\n    <h3\\n        *ngIf=\\"showGroupTitle()\\"\\n        class=\\"group-title\\"\\n        >\\n        {{ groupTitle() }}\\n    </h3>\\n    <p\\n        *ngIf=\\"showHelpText()\\"\\n        class=\\"group-help-text\\"\\n        >\\n        {{ groupHelpText() }}\\n\\n    </p>\\n    <p\\n        *ngIf=\\"error()\\"\\n        class=\\"group-error-message\\"\\n        >\\n        {{ errorMessage() }}\\n    </p>\\n  </div>\\n  <div class=\\"checkbox-group\\" \\n    [ngClass]=\\"{\'horizontal\': direction() === \'horizontal\', \'vertical\': direction() === \'vertical\'}\\">\\n    <ng-container \\n    *ngFor=\\"let item of items(); let i = index\\">\\n      <rte-checkbox\\n        [id]=\\"item + \'-\' + i\\"\\n        [label]=\\"item\\"\\n        [showLabel]=\\"showItemsLabel()\\"\\n        [disabled]=\\"disabled()\\"\\n        [error]=\\"error()\\"\\n        [readOnly]=\\"readOnly()\\"\\n      />\\n    </ng-container>\\n  </div>\\n</div>"},{"name":"ChipComponent","id":"component-ChipComponent-0e89965f7720607802dabb113b2588ce53cbe2621fe1814504124e7620fd8b5216bb4ef42b1b6b309c1ca47c3ec0160f664033e51ec74bf8bd28ff44d7d55882","file":"projects/ds-rte-lib/src/lib/components/chip/chip.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-chip","styleUrls":[],"styles":[],"templateUrl":["./chip.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"compactSpacing","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[148],"required":false},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148],"required":false},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string | undefined","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148],"required":false},{"name":"label","defaultValue":"\\"\\"","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":23,"modifierKind":[148],"required":false},{"name":"selected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":24,"modifierKind":[148],"required":false},{"name":"type","defaultValue":"\\"single\\"","deprecated":false,"deprecationMessage":"","type":"\\"single\\" | \\"multi\\" | \\"input\\"","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148],"required":false}],"outputsClass":[{"name":"click","deprecated":false,"deprecationMessage":"","type":"Event","indexKey":"","optional":false,"description":"","line":28,"modifierKind":[148],"required":false},{"name":"close","deprecated":false,"deprecationMessage":"","type":"Event","indexKey":"","optional":false,"description":"","line":29,"modifierKind":[148],"required":false}],"propertiesClass":[{"name":"isCheckable","defaultValue":"computed(() => this.type() === \\"single\\" || this.type() === \\"multi\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":31,"modifierKind":[148]},{"name":"role","defaultValue":"computed(() => CHIP_TYPE_TO_ARIA_ROLE_MAP[this.type()] || null)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":32,"modifierKind":[148]}],"methodsClass":[{"name":"onBlur","args":[{"name":"event","type":"FocusEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"FocusEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onClick","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onCloseClick","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":65,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onKeyUp","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, computed, input, output } from \\"@angular/core\\";\\nimport { CHIP_TYPE_TO_ARIA_ROLE_MAP } from \\"@design-system-rte/core/components/chip/chip.constants\\";\\nimport {\\n  BACKSPACE_KEY,\\n  DELETE_KEY,\\n  ENTER_KEY,\\n  SPACE_KEY,\\n} from \\"@design-system-rte/core/constants/keyboard/keyboard.constants\\";\\n\\nimport { IconComponent } from \\"../icon/icon.component\\";\\n\\n@Component({\\n  selector: \\"rte-chip\\",\\n  imports: [CommonModule, IconComponent],\\n  standalone: true,\\n  templateUrl: \\"./chip.component.html\\",\\n  styleUrl: \\"./chip.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ChipComponent {\\n  readonly id = input<string | undefined>();\\n  readonly label = input<string>(\\"\\");\\n  readonly selected = input<boolean>(false);\\n  readonly disabled = input<boolean>(false);\\n  readonly type = input<\\"single\\" | \\"multi\\" | \\"input\\">(\\"single\\");\\n  readonly compactSpacing = input<boolean>(false);\\n  readonly click = output<Event>();\\n  readonly close = output<Event>();\\n\\n  readonly isCheckable = computed(() => this.type() === \\"single\\" || this.type() === \\"multi\\");\\n  readonly role = computed(() => CHIP_TYPE_TO_ARIA_ROLE_MAP[this.type()] || null);\\n\\n  onClick(event: Event) {\\n    event.stopPropagation();\\n    if (!this.disabled()) {\\n      this.click.emit(event);\\n    }\\n  }\\n\\n  onKeyUp(event: KeyboardEvent) {\\n    event.preventDefault();\\n    if (!this.disabled()) {\\n      if (event.key === SPACE_KEY || event.key === ENTER_KEY) {\\n        const target = event.target as HTMLElement;\\n        const isCloseButton = target.classList.contains(\\"chip-close-button\\");\\n        if (isCloseButton) {\\n          target.click();\\n        } else {\\n          this.onClick(event);\\n        }\\n      } else if ((event.key === BACKSPACE_KEY || event.key === DELETE_KEY) && this.type() === \\"input\\") {\\n        const closeButton = (event.target as HTMLElement).querySelector(\\n          \\".chip-close-button\\",\\n        ) as HTMLButtonElement | null;\\n        if (closeButton) {\\n          closeButton.click();\\n        }\\n      }\\n    }\\n  }\\n  onBlur(event: FocusEvent) {\\n    event.stopPropagation();\\n  }\\n  onCloseClick(event: Event) {\\n    event.stopPropagation();\\n    if (!this.disabled()) {\\n      this.close.emit(event);\\n    }\\n  }\\n}\\n","styleUrl":"./chip.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<span\\n  class=\\"chip\\"\\n  tabindex=\\"0\\"\\n  [attr.role]=\\"role()\\"\\n  [attr.data-selected]=\\"isCheckable() ? selected() : null\\"\\n  [attr.data-disabled]=\\"disabled()\\"\\n  [attr.data-compact-spacing]=\\"compactSpacing()\\"\\n  [attr.data-type]=\\"type()\\"\\n  [attr.aria-checked]=\\"isCheckable() ? selected() : null\\"\\n  [attr.aria-disabled]=\\"disabled()\\"\\n  (click)=\\"onClick($event)\\"\\n  (keyup)=\\"onKeyUp($event)\\"\\n  (blur)=\\"onBlur($event)\\"\\n>\\n  <ng-container *ngIf=\\"type() === \'multi\'\\">\\n    <span class=\\"chip-icon-container\\">\\n      <span\\n        class=\\"chip-icon\\"\\n        [class.chip-icon--visible]=\\"selected()\\"\\n        [attr.aria-hidden]=\\"!selected()\\"\\n      >\\n        <rte-icon name=\\"check-circle\\" appearance=\\"filled\\" [size]=\\"16\\"></rte-icon>\\n      </span>\\n      <span\\n        class=\\"chip-icon\\"\\n        [class.chip-icon--visible]=\\"!selected()\\"\\n        [attr.aria-hidden]=\\"selected()\\"\\n      >\\n        <rte-icon name=\\"radio-button-empty\\" [size]=\\"16\\"></rte-icon>\\n      </span>\\n    </span>\\n  </ng-container>\\n  <span class=\\"chip-label\\" [attr.data-type]=\\"type()\\">{{ label() }}</span>\\n  <button\\n    *ngIf=\\"type() === \'input\'\\"\\n    type=\\"button\\"\\n    class=\\"chip-close-button\\"\\n    [attr.aria-label]=\\"\'Supprimer \' + label()\\"\\n    [disabled]=\\"disabled()\\"\\n    [value]=\\"label()\\"\\n    (click)=\\"onCloseClick($event)\\"\\n  >\\n    <rte-icon class=\\"chip-close-button--icon\\" name=\\"close\\" [size]=\\"16\\"></rte-icon>\\n  </button>\\n</span>"},{"name":"DividerComponent","id":"component-DividerComponent-3f049bf523071ad083215931b304ee6e81e55d60c5eefed70d653e5f6d1de99bbf86258950f8900e13179d4d2d1925fdabad4d306f42cb242cef3252f2cfb52b","file":"projects/ds-rte-lib/src/lib/components/divider/divider.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-divider","styleUrls":[],"styles":[],"templateUrl":["./divider.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"appearance","defaultValue":"\\"default\\"","deprecated":false,"deprecationMessage":"","type":"DividerProps[\\"appearance\\"]","indexKey":"","optional":false,"description":"","line":16,"modifierKind":[148],"required":false},{"name":"endPoint","defaultValue":"\\"round\\"","deprecated":false,"deprecationMessage":"","type":"DividerProps[\\"endPoint\\"]","indexKey":"","optional":false,"description":"","line":17,"modifierKind":[148],"required":false},{"name":"orientation","defaultValue":"\\"horizontal\\"","deprecated":false,"deprecationMessage":"","type":"DividerProps[\\"orientation\\"]","indexKey":"","optional":false,"description":"","line":14,"modifierKind":[148],"required":false},{"name":"thickness","defaultValue":"\\"light\\"","deprecated":false,"deprecationMessage":"","type":"DividerProps[\\"thickness\\"]","indexKey":"","optional":false,"description":"","line":15,"modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[{"name":"isHorizontal","defaultValue":"computed(() => this.orientation() === \\"horizontal\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":19,"modifierKind":[148]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, computed, input } from \\"@angular/core\\";\\nimport { DividerProps } from \\"@design-system-rte/core/components/divider/divider.interface\\";\\n\\n@Component({\\n  selector: \\"rte-divider\\",\\n  imports: [CommonModule],\\n  standalone: true,\\n  templateUrl: \\"./divider.component.html\\",\\n  styleUrl: \\"./divider.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class DividerComponent {\\n  readonly orientation = input<DividerProps[\\"orientation\\"]>(\\"horizontal\\");\\n  readonly thickness = input<DividerProps[\\"thickness\\"]>(\\"light\\");\\n  readonly appearance = input<DividerProps[\\"appearance\\"]>(\\"default\\");\\n  readonly endPoint = input<DividerProps[\\"endPoint\\"]>(\\"round\\");\\n\\n  readonly isHorizontal = computed(() => this.orientation() === \\"horizontal\\");\\n}\\n","styleUrl":"./divider.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"@if (isHorizontal()) {\\n  <hr class=\\"horizontal {{thickness()}} {{appearance()}} {{endPoint()}}\\" />\\n} @else {\\n  <div class=\\"vertical {{thickness()}} {{appearance()}} {{endPoint()}}\\" role=\\"separator\\"></div>\\n}"},{"name":"DropdownItemComponent","id":"component-DropdownItemComponent-674e917d3ad60a1b2915697502c4afd8c6019a1ac8647879892cbfe757b0ec53abaa4ba63d43f0bfb40c62b0d838b473c293c9b663f06611f859f35c1ee955f8","file":"projects/ds-rte-lib/src/lib/components/dropdown/dropdown-item/dropdown-item.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-dropdown-item","styleUrls":[],"styles":[],"templateUrl":["./dropdown-item.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"item","deprecated":false,"deprecationMessage":"","type":"DropdownItemConfig","indexKey":"","optional":false,"description":"","line":28,"modifierKind":[148],"required":false},{"name":"menuId","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":29,"modifierKind":[148],"required":false}],"outputsClass":[{"name":"itemEvent","deprecated":false,"deprecationMessage":"","type":"{ event: Event; id: string }","indexKey":"","optional":false,"description":"","line":30,"modifierKind":[148],"required":false}],"propertiesClass":[],"methodsClass":[{"name":"handleClick","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleKeyDown","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconComponent","type":"component"},{"name":"DividerComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { Component, EventEmitter, input, output } from \\"@angular/core\\";\\nimport { ENTER_KEY, SPACE_KEY } from \\"@design-system-rte/core/constants/keyboard/keyboard.constants\\";\\n\\nimport { DividerComponent } from \\"../../divider/divider.component\\";\\nimport { IconComponent } from \\"../../icon/icon.component\\";\\n\\nexport interface DropdownItemConfig {\\n  id?: string;\\n  label: string;\\n  leftIcon?: string;\\n  trailingText?: string;\\n  disabled?: boolean;\\n  hasSeparator?: boolean;\\n  hasIndent?: boolean;\\n  link?: string;\\n  click?: EventEmitter<Event>;\\n}\\n\\n@Component({\\n  selector: \\"rte-dropdown-item\\",\\n  imports: [CommonModule, IconComponent, DividerComponent],\\n  standalone: true,\\n  templateUrl: \\"./dropdown-item.component.html\\",\\n  styleUrl: \\"./dropdown-item.component.scss\\",\\n})\\nexport class DropdownItemComponent {\\n  readonly item = input<DropdownItemConfig>();\\n  readonly menuId = input<string>();\\n  readonly itemEvent = output<{ event: Event; id: string }>();\\n\\n  handleClick(event: Event): void {\\n    if (this.item()?.disabled) {\\n      event.preventDefault();\\n      event.stopPropagation();\\n      return;\\n    }\\n    this.itemEvent.emit({ event, id: this.item()?.id || this.item()?.label || \\"\\" });\\n  }\\n\\n  handleKeyDown(event: KeyboardEvent): void {\\n    event.preventDefault();\\n\\n    if ([SPACE_KEY, ENTER_KEY].includes(event.key)) {\\n      if (this.item()?.link) {\\n        const link = (event.target as HTMLElement).closest(\\"li\\")?.querySelector(\\"a\\");\\n        link?.click();\\n      } else {\\n        this.itemEvent.emit({ event, id: this.item()?.id || this.item()?.label || \\"\\" });\\n      }\\n    }\\n  }\\n}\\n","styleUrl":"./dropdown-item.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<ng-container>\\n    <li\\n      #itemRef\\n      class=\\"rte-dropdown-item\\"\\n      role=\\"menuitem\\"\\n      tabindex=\\"0\\"\\n      [attr.data-disabled]=\\"item()?.disabled\\"\\n      [attr.aria-disabled]=\\"item()?.disabled\\"\\n      (click)=\\"handleClick($event)\\"\\n      (keydown)=\\"handleKeyDown($event)\\"\\n    >\\n      <span *ngIf=\\"item()?.hasIndent && !item()?.leftIcon\\" style=\\"width: 20px\\"></span>\\n      <rte-icon *ngIf=\\"item()?.leftIcon\\" [name]=\\"item()?.leftIcon ?? \'\'\\" />\\n      <ng-container [ngSwitch]=\\"!!item()?.link\\">\\n        <a *ngSwitchCase=\\"true\\" style=\\"flex: 2; text-decoration: none; color: inherit\\" [href]=\\"item()?.link\\">{{ item()?.label }} </a>\\n        <span *ngSwitchDefault style=\\"flex: 2\\">{{ item()?.label }}</span>\\n      </ng-container>\\n      <div *ngIf=\\"item()?.trailingText\\">{{ item()?.trailingText }}</div>\\n    </li>\\n    <div *ngIf=\\"item()?.hasSeparator\\" class=\\"dropdown-divider\\">\\n      <rte-divider/>\\n    </div>\\n</ng-container>"},{"name":"DropdownMenuComponent","id":"component-DropdownMenuComponent-2537cfe16a07acdd121017fe9d3dc5da03102046276b16b41502c4909acc511b9474ad87c8bb0a7bdc395a274341b1161cdfce0b841ba03e03c260c2450876ab","file":"projects/ds-rte-lib/src/lib/components/dropdown/dropdown-menu/dropdown-menu.component.ts","encapsulation":[],"entryComponents":[],"host":{},"inputs":[],"outputs":[],"providers":[],"selector":"rte-dropdown-menu","styleUrls":[],"styles":[],"templateUrl":["./dropdown-menu.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"items","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"DropdownItemConfig[]","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148],"required":false},{"name":"menuId","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[148],"required":false}],"outputsClass":[{"name":"itemEvent","deprecated":false,"deprecationMessage":"","type":"{ event: Event; id: string }","indexKey":"","optional":false,"description":"","line":29,"modifierKind":[148],"required":false}],"propertiesClass":[{"name":"dropdownService","defaultValue":"inject(DropdownService)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":24,"modifierKind":[123,148]},{"name":"elementRef","defaultValue":"inject(ElementRef)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":23,"modifierKind":[123,148]}],"methodsClass":[{"name":"getChildMenuId","args":[{"name":"itemIndex","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"itemIndex","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleItemEvent","args":[{"name":"itemEvent","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"itemEvent","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onKeyDown","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":40,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'keydown\', [\'$event\']"}],"modifierKind":[171],"jsdoctags":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"keydown","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""}],"argsDecorator":["$event"],"deprecated":false,"deprecationMessage":"","line":40}],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"DropdownItemComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { Component, ElementRef, HostListener, inject, input, output } from \\"@angular/core\\";\\nimport {\\n  ARROW_DOWN_KEY,\\n  ARROW_LEFT_KEY,\\n  ARROW_RIGHT_KEY,\\n  ARROW_UP_KEY,\\n  TAB_KEY,\\n} from \\"@design-system-rte/core/constants/keyboard/keyboard.constants\\";\\n\\nimport { DropdownService } from \\"../../../services/dropdown.service\\";\\nimport { DropdownItemComponent, DropdownItemConfig } from \\"../dropdown-item/dropdown-item.component\\";\\n\\n@Component({\\n  selector: \\"rte-dropdown-menu\\",\\n  imports: [CommonModule, DropdownItemComponent],\\n  standalone: true,\\n  templateUrl: \\"./dropdown-menu.component.html\\",\\n  styleUrl: \\"./dropdown-menu.component.scss\\",\\n  host: { \\"[attr.data-menu-id]\\": \\"menuId()\\" },\\n})\\nexport class DropdownMenuComponent {\\n  private readonly elementRef = inject(ElementRef);\\n  private readonly dropdownService = inject(DropdownService);\\n\\n  readonly items = input<DropdownItemConfig[]>([]);\\n  readonly menuId = input<string>();\\n\\n  readonly itemEvent = output<{ event: Event; id: string }>();\\n\\n  getChildMenuId(itemIndex: number): string {\\n    return `${this.menuId()}:${itemIndex + 1}`;\\n  }\\n\\n  handleItemEvent(itemEvent: { event: Event; id: string }): void {\\n    this.itemEvent.emit(itemEvent);\\n  }\\n\\n  @HostListener(\\"keydown\\", [\\"$event\\"])\\n  onKeyDown(event: KeyboardEvent): void {\\n    if (!event.target || !this.menuId()) {\\n      return;\\n    }\\n\\n    if ([ARROW_UP_KEY, ARROW_DOWN_KEY, ARROW_LEFT_KEY, ARROW_RIGHT_KEY, TAB_KEY].includes(event.key)) {\\n      event.preventDefault();\\n    }\\n\\n    const menuId = this.menuId() as string;\\n\\n    this.dropdownService.handleKeyboardInput(event.key, {\\n      menuElement: this.elementRef,\\n      menuId,\\n    });\\n  }\\n}\\n","styleUrl":"./dropdown-menu.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<div class=\\"rte-dropdown-menu\\">\\n  <ul \\n    class=\\"rte-dropdown-items\\"\\n    role=\\"menu\\" \\n    [attr.aria-activedescendant]=\\"menuId()\\"\\n  >\\n    @for (item of items(); track item.label; let i = $index) {\\n      <rte-dropdown-item \\n        [item]=\\"item\\"\\n        (itemEvent)=\\"handleItemEvent($event)\\"\\n      />\\n    }\\n  </ul>\\n</div>"},{"name":"IconButtonComponent","id":"component-IconButtonComponent-1069deb5a7051cae78bd90caa3690ad580c96ae558d4a6740c14c9c7d8ea77c5f9a6c1b91bb79713894aac6b79995d2af9c1938db2015ed51e4016a8b906c2c3","file":"projects/ds-rte-lib/src/lib/components/icon-button/icon-button.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-icon-button","styleUrls":[],"styles":[],"templateUrl":["./icon-button.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"appearance","defaultValue":"\\"outlined\\"","deprecated":false,"deprecationMessage":"","type":"\\"outlined\\" | \\"filled\\"","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148],"required":false},{"name":"ariaLabel","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string | undefined","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[148],"required":false},{"name":"ariaLabelledBy","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string | undefined","indexKey":"","optional":false,"description":"","line":28,"modifierKind":[148],"required":false},{"name":"compactSpacing","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148],"required":false},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":20,"modifierKind":[148],"required":false},{"name":"name","deprecated":false,"deprecationMessage":"","type":"RegularIconIdKey | TogglableIconIdKey","indexKey":"","optional":false,"description":"","line":21,"modifierKind":[148],"required":true},{"name":"size","defaultValue":"\\"m\\"","deprecated":false,"deprecationMessage":"","type":"ButtonSize","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148],"required":false},{"name":"type","defaultValue":"\\"button\\"","deprecated":false,"deprecationMessage":"","type":"ButtonType","indexKey":"","optional":false,"description":"","line":24,"modifierKind":[148],"required":false},{"name":"variant","defaultValue":"\\"primary\\"","deprecated":false,"deprecationMessage":"","type":"ButtonVariant","indexKey":"","optional":false,"description":"","line":23,"modifierKind":[148],"required":false}],"outputsClass":[{"name":"click","deprecated":false,"deprecationMessage":"","type":"MouseEvent | KeyboardEvent","indexKey":"","optional":false,"description":"","line":34,"modifierKind":[148],"required":false}],"propertiesClass":[{"name":"buttonIconSize","defaultValue":"computed(() => buttonIconSize[this.size()])","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":30,"modifierKind":[148]},{"name":"isValidIconName","defaultValue":"computed(() => isValidIconName(this.name()))","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":32,"modifierKind":[148]}],"methodsClass":[{"name":"onClick","args":[{"name":"event","type":"MouseEvent | KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"MouseEvent | KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, computed, input, output } from \\"@angular/core\\";\\nimport { ButtonType } from \\"@design-system-rte/core/components/button/button.interface\\";\\nimport { ButtonSize, ButtonVariant } from \\"@design-system-rte/core/components/button/common/common-button\\";\\nimport { buttonIconSize } from \\"@design-system-rte/core/components/button/common/common-button.constants\\";\\n\\nimport { isValidIconName } from \\"../icon/icon-map\\";\\nimport { IconComponent } from \\"../icon/icon.component\\";\\nimport { RegularIconIdKey, TogglableIconIdKey } from \\"../icon/icon.service\\";\\n\\n@Component({\\n  selector: \\"rte-icon-button\\",\\n  imports: [CommonModule, IconComponent],\\n  standalone: true,\\n  templateUrl: \\"./icon-button.component.html\\",\\n  styleUrl: \\"./icon-button.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class IconButtonComponent {\\n  readonly disabled = input<boolean>(false);\\n  readonly name = input.required<RegularIconIdKey | TogglableIconIdKey>();\\n  readonly size = input<ButtonSize>(\\"m\\");\\n  readonly variant = input<ButtonVariant>(\\"primary\\");\\n  readonly type = input<ButtonType>(\\"button\\");\\n  readonly appearance = input<\\"outlined\\" | \\"filled\\">(\\"outlined\\");\\n  readonly compactSpacing = input<boolean>(false);\\n  readonly ariaLabel = input<string | undefined>(undefined);\\n  readonly ariaLabelledBy = input<string | undefined>(undefined);\\n\\n  readonly buttonIconSize = computed(() => buttonIconSize[this.size()]);\\n\\n  readonly isValidIconName = computed(() => isValidIconName(this.name()));\\n\\n  readonly click = output<MouseEvent | KeyboardEvent>();\\n\\n  onClick(event: MouseEvent | KeyboardEvent): void {\\n    event.stopPropagation();\\n    this.click.emit(event);\\n  }\\n}\\n","styleUrl":"./icon-button.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<button\\n  *ngIf=\\"isValidIconName\\"\\n  class=\\"rte-icon-button {{ variant() }} size-{{ size() }}\\"\\n  [class.compact-spacing]=\\"compactSpacing()\\"\\n  [disabled]=\\"disabled()\\"\\n  [attr.aria-label]=\\"ariaLabel()\\"\\n  [attr.aria-labelledby]=\\"ariaLabelledBy()\\"\\n  [type]=\\"type()\\"\\n  (click)=\\"onClick($event)\\"\\n>\\n  <rte-icon\\n    [name]=\\"name()\\"\\n    [appearance]=\\"appearance()\\"\\n    [size]=\\"buttonIconSize()\\"\\n  />\\n</button>"},{"name":"IconButtonToggleComponent","id":"component-IconButtonToggleComponent-6dd39615571794c1da26818c309ad5c10a9d1194e0077afc80204d5bd2c0088d40a7b96d900b54e9e5090162b511fb94cb89d769f066abbb64418400c7c8526f","file":"projects/ds-rte-lib/src/lib/components/icon-button-toggle/icon-button-toggle.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-icon-button-toggle","styleUrls":[],"styles":[],"templateUrl":["./icon-button-toggle.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"ariaLabel","deprecated":false,"deprecationMessage":"","type":"string | undefined","indexKey":"","optional":false,"description":"","line":24,"modifierKind":[148],"required":false},{"name":"ariaLabelledBy","deprecated":false,"deprecationMessage":"","type":"string | undefined","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148],"required":false},{"name":"compactSpacing","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":23,"modifierKind":[148],"required":false},{"name":"defaultSelected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":31,"modifierKind":[148],"required":false},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148],"required":false},{"name":"name","deprecated":false,"deprecationMessage":"","type":"RegularIconIdKey | TogglableIconIdKey","indexKey":"","optional":false,"description":"","line":19,"modifierKind":[148],"required":true},{"name":"selected","deprecated":false,"deprecationMessage":"","type":"boolean | undefined","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[148],"required":false},{"name":"size","defaultValue":"\\"m\\"","deprecated":false,"deprecationMessage":"","type":"ButtonSize","indexKey":"","optional":false,"description":"","line":20,"modifierKind":[148],"required":false},{"name":"type","defaultValue":"\\"button\\"","deprecated":false,"deprecationMessage":"","type":"ButtonType","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148],"required":false},{"name":"variant","defaultValue":"\\"primary\\"","deprecated":false,"deprecationMessage":"","type":"ButtonVariant","indexKey":"","optional":false,"description":"","line":21,"modifierKind":[148],"required":false}],"outputsClass":[{"name":"click","deprecated":false,"deprecationMessage":"","type":"MouseEvent | KeyboardEvent","indexKey":"","optional":false,"description":"","line":35,"modifierKind":[148],"required":false}],"propertiesClass":[{"name":"buttonIconSize","defaultValue":"computed(() => buttonIconSize[this.size()])","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":53,"modifierKind":[148]},{"name":"internalSelected","defaultValue":"signal(false)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":29,"modifierKind":[148]},{"name":"isControlled","defaultValue":"computed(() => this.selected() !== undefined)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":33,"modifierKind":[148]},{"name":"isSelected","defaultValue":"computed(() => {\\n    return this.isControlled() ? this.selected() : this.internalSelected();\\n  })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":37,"modifierKind":[148]}],"methodsClass":[{"name":"onClick","args":[{"name":"event","type":"MouseEvent | KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"MouseEvent | KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"toggleInternalSelectedState","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconButtonComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, computed, input, output, signal } from \\"@angular/core\\";\\nimport { ButtonType } from \\"@design-system-rte/core/components/button/button.interface\\";\\nimport { ButtonSize, ButtonVariant } from \\"@design-system-rte/core/components/button/common/common-button\\";\\nimport { buttonIconSize } from \\"@design-system-rte/core/components/button/common/common-button.constants\\";\\n\\nimport { RegularIconIdKey, TogglableIconIdKey } from \\"../icon/icon.service\\";\\nimport { IconButtonComponent } from \\"../icon-button/icon-button.component\\";\\n\\n@Component({\\n  selector: \\"rte-icon-button-toggle\\",\\n  imports: [CommonModule, IconButtonComponent],\\n  standalone: true,\\n  templateUrl: \\"./icon-button-toggle.component.html\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class IconButtonToggleComponent {\\n  readonly disabled = input<boolean>(false);\\n  readonly name = input.required<RegularIconIdKey | TogglableIconIdKey>();\\n  readonly size = input<ButtonSize>(\\"m\\");\\n  readonly variant = input<ButtonVariant>(\\"primary\\");\\n  readonly type = input<ButtonType>(\\"button\\");\\n  readonly compactSpacing = input<boolean>(false);\\n  readonly ariaLabel = input<string | undefined>();\\n  readonly ariaLabelledBy = input<string | undefined>();\\n\\n  readonly selected = input<boolean | undefined>();\\n\\n  readonly internalSelected = signal(false);\\n\\n  readonly defaultSelected = input<boolean>(false);\\n\\n  readonly isControlled = computed(() => this.selected() !== undefined);\\n\\n  readonly click = output<MouseEvent | KeyboardEvent>();\\n\\n  readonly isSelected = computed(() => {\\n    return this.isControlled() ? this.selected() : this.internalSelected();\\n  });\\n\\n  private toggleInternalSelectedState(): void {\\n    this.internalSelected.set(!this.internalSelected());\\n  }\\n\\n  onClick(event: MouseEvent | KeyboardEvent): void {\\n    event.stopPropagation();\\n    this.click.emit(event);\\n    if (!this.isControlled()) {\\n      this.toggleInternalSelectedState();\\n    }\\n  }\\n\\n  readonly buttonIconSize = computed(() => buttonIconSize[this.size()]);\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<rte-icon-button \\n  [size]=\\"size()\\" \\n  [name]=\\"name()\\" \\n  [compactSpacing]=\\"compactSpacing()\\"\\n  [disabled]=\\"disabled()\\"\\n  [ariaLabel]=\\"ariaLabel()\\"\\n  [ariaLabelledBy]=\\"ariaLabelledBy()\\"\\n  [type]=\\"type()\\"\\n  [variant]=\\"variant()\\"\\n  [appearance]=\\"isSelected() ? \'filled\' : \'outlined\'\\"\\n  (click)=\\"onClick($event)\\"\\n/>"},{"name":"IconComponent","id":"component-IconComponent-42e2da1601f10405aa506d085e3ec8e3f94832292b7afd82cfcc4da0727f14f17864c776dd04dfc4aa75eb71b9814a2bbeedaacc1f6937ec00cbcb9590414413","file":"projects/ds-rte-lib/src/lib/components/icon/icon.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[{"name":"IconService","type":"injectable"}],"selector":"rte-icon","styleUrls":[],"styles":[],"templateUrl":["./icon.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"appearance","deprecated":false,"deprecationMessage":"","type":"\\"outlined\\" | \\"filled\\"","indexKey":"","optional":false,"description":"","line":31,"modifierKind":[148],"required":false},{"name":"classes","defaultValue":"\\"\\"","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":30,"modifierKind":[148],"required":false},{"name":"color","defaultValue":"\\"currentColor\\"","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":29,"modifierKind":[148],"required":false},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[148],"required":true},{"name":"size","defaultValue":"20","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":28,"modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[{"name":"cdr","defaultValue":"inject(ChangeDetectorRef)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":39,"modifierKind":[123]},{"name":"destroyRef","defaultValue":"inject(DestroyRef)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":32},{"name":"iconService","defaultValue":"inject(IconService)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":38,"modifierKind":[123]},{"name":"sanitizer","defaultValue":"inject(DomSanitizer)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":37,"modifierKind":[123]},{"name":"svg","deprecated":false,"deprecationMessage":"","type":"Observable<string>","indexKey":"","optional":false,"description":"","line":35},{"name":"svgContent","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"SafeHtml | null","indexKey":"","optional":false,"description":"","line":34}],"methodsClass":[{"name":"setSvgContent","args":[{"name":"svgName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"svgName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport {\\n  ChangeDetectionStrategy,\\n  ChangeDetectorRef,\\n  Component,\\n  DestroyRef,\\n  effect,\\n  inject,\\n  input,\\n} from \\"@angular/core\\";\\nimport { takeUntilDestroyed } from \\"@angular/core/rxjs-interop\\";\\nimport { DomSanitizer, SafeHtml } from \\"@angular/platform-browser\\";\\nimport { Observable } from \\"rxjs\\";\\n\\nimport { IconService, RegularIconIdKey, TogglableIconIdKey } from \\"./icon.service\\";\\n\\n@Component({\\n  selector: \\"rte-icon\\",\\n  imports: [CommonModule],\\n  standalone: true,\\n  templateUrl: \\"./icon.component.html\\",\\n  styleUrl: \\"./icon.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  providers: [IconService],\\n})\\nexport class IconComponent {\\n  readonly name = input.required<string>();\\n  readonly size = input(20);\\n  readonly color = input(\\"currentColor\\");\\n  readonly classes = input(\\"\\");\\n  readonly appearance = input<\\"outlined\\" | \\"filled\\">();\\n  destroyRef = inject(DestroyRef);\\n\\n  svgContent: SafeHtml | null = null;\\n  svg!: Observable<string>;\\n\\n  private sanitizer = inject(DomSanitizer);\\n  private iconService = inject(IconService);\\n  private cdr = inject(ChangeDetectorRef);\\n\\n  constructor() {\\n    effect(() => {\\n      this.setSvgContent(this.name());\\n    });\\n  }\\n\\n  private setSvgContent(svgName: string) {\\n    const svgFile = this.iconService.getSvg(\\n      svgName as RegularIconIdKey | TogglableIconIdKey,\\n      this.appearance() || \\"outlined\\",\\n    );\\n\\n    svgFile.pipe(takeUntilDestroyed(this.destroyRef)).subscribe((res) => {\\n      const size = this.size();\\n      const svgWithSize = res.replace(/<svg([^>]*)>/, `<svg$1 width=\\"${size}\\" height=\\"${size}\\">`);\\n\\n      this.svgContent = this.sanitizer.bypassSecurityTrustHtml(svgWithSize);\\n      this.cdr.markForCheck();\\n    });\\n  }\\n}\\n","styleUrl":"./icon.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":39},"extends":[],"templateData":"<div class=\\"rte-icon-container\\" [innerHTML]=\\"svgContent\\" [style.height]=\\"(size())+\'px\'\\" [style.width]=\\"(size())+\'px\'\\"></div>"},{"name":"LinkComponent","id":"component-LinkComponent-73c028735c6f86f44d05a10cc7b23ea2dece1e9c97775661224ceef609855710058aff363684a63b0182290040ff20a20b97dbdf1d35a1bcfd3d2917b8081f8d","file":"projects/ds-rte-lib/src/lib/components/link/link.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-link","styleUrls":[],"styles":[],"templateUrl":["./link.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"externalLink","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148],"required":false},{"name":"href","defaultValue":"\\"#\\"","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":16,"modifierKind":[148],"required":false},{"name":"label","defaultValue":"\\"\\"","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":15,"modifierKind":[148],"required":false},{"name":"subtle","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":17,"modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, input } from \\"@angular/core\\";\\n\\nimport { IconComponent } from \\"../icon/icon.component\\";\\n\\n@Component({\\n  selector: \\"rte-link\\",\\n  imports: [CommonModule, IconComponent],\\n  standalone: true,\\n  templateUrl: \\"./link.component.html\\",\\n  styleUrl: \\"./link.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class LinkComponent {\\n  readonly label = input(\\"\\");\\n  readonly href = input<string>(\\"#\\");\\n  readonly subtle = input<boolean>(false);\\n  readonly externalLink = input<boolean>(false);\\n}\\n","styleUrl":"./link.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<a href=\\"{{ href() }}\\" class=\\"rte-link\\" role=\\"link\\" [ngClass]=\\"{\'subtle\': subtle()}\\" [target]=\\"externalLink() ? \'_blank\' : undefined\\" [rel]=\\"externalLink() ? \'noopener noreferrer\' : null\\">\\n    <span class=\\"rte-link-label\\">\\n        {{ label() }}\\n    </span>\\n    <rte-icon *ngIf=\\"externalLink()\\" name=\\"external-link\\" [size]=\\"12\\"></rte-icon>\\n</a>"},{"name":"LoaderComponent","id":"component-LoaderComponent-d3037348188d6d8793cb8432a6b0b433c3169b0fee82b596bcd2988db26db936b866f3251c70b867e7736f8561e87233c86603f6a75be417ec9eeb250ea16af6","file":"projects/ds-rte-lib/src/lib/components/loader/loader.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-loader","styleUrls":[],"styles":[],"templateUrl":["./loader.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"appearance","defaultValue":"\\"brand\\"","deprecated":false,"deprecationMessage":"","type":"LoaderProps[\\"appearance\\"]","indexKey":"","optional":false,"description":"","line":16,"modifierKind":[148],"required":false},{"name":"label","defaultValue":"\\"\\"","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":19,"modifierKind":[148],"required":false},{"name":"labelPosition","defaultValue":"\\"right\\"","deprecated":false,"deprecationMessage":"","type":"LoaderProps[\\"labelPosition\\"]","indexKey":"","optional":false,"description":"","line":20,"modifierKind":[148],"required":false},{"name":"showLabel","defaultValue":"true","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148],"required":false},{"name":"size","defaultValue":"\\"medium\\"","deprecated":false,"deprecationMessage":"","type":"LoaderProps[\\"size\\"]","indexKey":"","optional":false,"description":"","line":17,"modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[{"name":"sizeOfLoader","defaultValue":"computed(() => loaderSize[this.size() || \\"medium\\"])","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, input } from \\"@angular/core\\";\\nimport { computed } from \\"@angular/core\\";\\nimport { loaderSize } from \\"@design-system-rte/core/components/loader/loader.constants\\";\\nimport { LoaderProps } from \\"@design-system-rte/core/components/loader/loader.interface.d\\";\\n\\n@Component({\\n  selector: \\"rte-loader\\",\\n  imports: [CommonModule],\\n  standalone: true,\\n  templateUrl: \\"./loader.component.html\\",\\n  styleUrl: \\"./loader.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class LoaderComponent {\\n  readonly appearance = input<LoaderProps[\\"appearance\\"]>(\\"brand\\");\\n  readonly size = input<LoaderProps[\\"size\\"]>(\\"medium\\");\\n  readonly showLabel = input(true);\\n  readonly label = input(\\"\\");\\n  readonly labelPosition = input<LoaderProps[\\"labelPosition\\"]>(\\"right\\");\\n\\n  readonly sizeOfLoader = computed(() => loaderSize[this.size() || \\"medium\\"]);\\n}\\n","styleUrl":"./loader.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<div class=\\"rte-loader appearance--{{appearance()}} labelPosition--{{labelPosition()}}\\">\\n    @if (appearance() === \'brand\'){\\n    <svg xmlns=\\"http://www.w3.org/2000/svg\\" class=\\"svgLoader\\" viewBox=\\"0 0 48 48\\" fill=\\"none\\" [style.width]=\\"sizeOfLoader()\\" [style.height]=\\"sizeOfLoader()\\">\\n  <g clip-path=\\"url(#paint0_angular_4434_67_clip_path)\\" data-figma-skip-parse=\\"true\\"><g transform=\\"matrix(0.0240793 7.6297e-08 -7.62968e-08 0.0240017 24.0001 24.0003)\\"><foreignObject x=\\"-999.939\\" y=\\"-999.939\\" width=\\"1999.88\\" height=\\"1999.88\\"><div xmlns=\\"http://www.w3.org/1999/xhtml\\" style=\\"background:conic-gradient(from 90deg,rgba(41, 100, 160, 0) 0deg,rgba(41, 100, 160, 1) 360deg);height:100%;width:100%;opacity:1\\"></div></foreignObject></g></g><path d=\\"M23.9269 0.000388189C30.296 -0.0295367 36.417 2.4654 40.9454 6.93691C44.9866 10.9275 47.4648 16.2012 47.9796 21.809C48.0828 22.9328 47.1647 23.8555 46.0363 23.8627C44.9079 23.8698 43.998 22.958 43.8751 21.8363C43.3798 17.3109 41.3426 13.0674 38.0714 9.8373C34.3129 6.12602 29.2327 4.05571 23.9464 4.08047C18.66 4.10534 13.5995 6.22361 9.87609 9.97011C6.1527 13.7167 4.07043 18.7851 4.08703 24.0629C4.10364 29.3406 6.21709 34.3964 9.96399 38.1195C13.7109 41.8427 18.7849 43.9286 24.0714 43.9203C29.3579 43.912 34.4251 41.8095 38.1603 38.0746C41.4109 34.8241 43.422 30.5687 43.8888 26.0404C44.0045 24.918 44.9079 24.0006 46.0363 24.0004C47.1648 24.0004 48.0893 24.917 47.9933 26.0414C47.5138 31.6525 45.068 36.9416 41.0519 40.9574C36.5518 45.4572 30.4473 47.9903 24.0782 48.0004C17.709 48.0104 11.5955 45.4969 7.08117 41.0111C2.56686 36.5254 0.0201276 30.4343 0.000118312 24.0756C-0.0198507 17.7169 2.48874 11.61 6.97473 7.09609C11.4607 2.58224 17.5578 0.0303524 23.9269 0.000388189Z\\" data-figma-gradient-fill=\\"{&quot;type&quot;:&quot;GRADIENT_ANGULAR&quot;,&quot;stops&quot;:[{&quot;color&quot;:{&quot;r&quot;:0.16078431904315948,&quot;g&quot;:0.39215686917304993,&quot;b&quot;:0.62745100259780884,&quot;a&quot;:0.0},&quot;position&quot;:0.0},{&quot;color&quot;:{&quot;r&quot;:0.16078431904315948,&quot;g&quot;:0.39215686917304993,&quot;b&quot;:0.62745100259780884,&quot;a&quot;:1.0},&quot;position&quot;:1.0}],&quot;stopsVar&quot;:[{&quot;color&quot;:{&quot;r&quot;:0.16078431904315948,&quot;g&quot;:0.39215686917304993,&quot;b&quot;:0.62745100259780884,&quot;a&quot;:0.0},&quot;position&quot;:0.0},{&quot;color&quot;:{&quot;r&quot;:0.16078431904315948,&quot;g&quot;:0.39215686917304993,&quot;b&quot;:0.62745100259780884,&quot;a&quot;:1.0},&quot;position&quot;:1.0}],&quot;transform&quot;:{&quot;m00&quot;:48.158504486083984,&quot;m01&quot;:-0.00015259353676810861,&quot;m02&quot;:-0.079098686575889587,&quot;m10&quot;:0.00015259397332556546,&quot;m11&quot;:48.003398895263672,&quot;m12&quot;:-0.0015066617634147406},&quot;opacity&quot;:1.0,&quot;blendMode&quot;:&quot;NORMAL&quot;,&quot;visible&quot;:true}\\"/>\\n  <defs>\\n    <clipPath id=\\"paint0_angular_4434_67_clip_path\\"><path d=\\"M23.9269 0.000388189C30.296 -0.0295367 36.417 2.4654 40.9454 6.93691C44.9866 10.9275 47.4648 16.2012 47.9796 21.809C48.0828 22.9328 47.1647 23.8555 46.0363 23.8627C44.9079 23.8698 43.998 22.958 43.8751 21.8363C43.3798 17.3109 41.3426 13.0674 38.0714 9.8373C34.3129 6.12602 29.2327 4.05571 23.9464 4.08047C18.66 4.10534 13.5995 6.22361 9.87609 9.97011C6.1527 13.7167 4.07043 18.7851 4.08703 24.0629C4.10364 29.3406 6.21709 34.3964 9.96399 38.1195C13.7109 41.8427 18.7849 43.9286 24.0714 43.9203C29.3579 43.912 34.4251 41.8095 38.1603 38.0746C41.4109 34.8241 43.422 30.5687 43.8888 26.0404C44.0045 24.918 44.9079 24.0006 46.0363 24.0004C47.1648 24.0004 48.0893 24.917 47.9933 26.0414C47.5138 31.6525 45.068 36.9416 41.0519 40.9574C36.5518 45.4572 30.4473 47.9903 24.0782 48.0004C17.709 48.0104 11.5955 45.4969 7.08117 41.0111C2.56686 36.5254 0.0201276 30.4343 0.000118312 24.0756C-0.0198507 17.7169 2.48874 11.61 6.97473 7.09609C11.4607 2.58224 17.5578 0.0303524 23.9269 0.000388189Z\\"/></clipPath></defs>\\n    </svg>\\n    } @else {\\n    <svg xmlns=\\"http://www.w3.org/2000/svg\\" class=\\"svgLoader\\" viewBox=\\"0 0 48 48\\" fill=\\"none\\" [style.width]=\\"sizeOfLoader()\\" [style.height]=\\"sizeOfLoader()\\">\\n  <g clip-path=\\"url(#paint0_angular_4434_1033_clip_path)\\" data-figma-skip-parse=\\"true\\"><g transform=\\"matrix(0.0240793 7.6297e-08 -7.62968e-08 0.0240017 24.0001 24.0003)\\"><foreignObject x=\\"-999.939\\" y=\\"-999.939\\" width=\\"1999.88\\" height=\\"1999.88\\"><div xmlns=\\"http://www.w3.org/1999/xhtml\\" style=\\"background:conic-gradient(from 90deg,rgba(255, 255, 255, 0) 0deg,rgba(255, 255, 255, 1) 360deg);height:100%;width:100%;opacity:1\\"></div></foreignObject></g></g><path d=\\"M23.9269 0.000388189C30.296 -0.0295367 36.417 2.4654 40.9454 6.93691C44.9866 10.9275 47.4648 16.2012 47.9796 21.809C48.0828 22.9328 47.1647 23.8555 46.0363 23.8627C44.9079 23.8698 43.998 22.958 43.8751 21.8363C43.3798 17.3109 41.3426 13.0674 38.0714 9.8373C34.3129 6.12602 29.2327 4.05571 23.9464 4.08047C18.66 4.10534 13.5995 6.22361 9.87609 9.97011C6.1527 13.7167 4.07043 18.7851 4.08703 24.0629C4.10364 29.3406 6.21709 34.3964 9.96399 38.1195C13.7109 41.8427 18.7849 43.9286 24.0714 43.9203C29.3579 43.912 34.4251 41.8095 38.1603 38.0746C41.4109 34.8241 43.422 30.5687 43.8888 26.0404C44.0045 24.918 44.9079 24.0006 46.0363 24.0004C47.1648 24.0004 48.0893 24.917 47.9933 26.0414C47.5138 31.6525 45.068 36.9416 41.0519 40.9574C36.5518 45.4572 30.4473 47.9903 24.0782 48.0004C17.709 48.0104 11.5955 45.4969 7.08117 41.0111C2.56686 36.5254 0.0201276 30.4343 0.000118312 24.0756C-0.0198507 17.7169 2.48874 11.61 6.97473 7.09609C11.4607 2.58224 17.5578 0.0303524 23.9269 0.000388189Z\\" data-figma-gradient-fill=\\"{&quot;type&quot;:&quot;GRADIENT_ANGULAR&quot;,&quot;stops&quot;:[{&quot;color&quot;:{&quot;r&quot;:1.0,&quot;g&quot;:1.0,&quot;b&quot;:1.0,&quot;a&quot;:0.0},&quot;position&quot;:0.0},{&quot;color&quot;:{&quot;r&quot;:1.0,&quot;g&quot;:1.0,&quot;b&quot;:1.0,&quot;a&quot;:1.0},&quot;position&quot;:1.0}],&quot;stopsVar&quot;:[{&quot;color&quot;:{&quot;r&quot;:1.0,&quot;g&quot;:1.0,&quot;b&quot;:1.0,&quot;a&quot;:0.0},&quot;position&quot;:0.0},{&quot;color&quot;:{&quot;r&quot;:1.0,&quot;g&quot;:1.0,&quot;b&quot;:1.0,&quot;a&quot;:1.0},&quot;position&quot;:1.0}],&quot;transform&quot;:{&quot;m00&quot;:48.158504486083984,&quot;m01&quot;:-0.00015259353676810861,&quot;m02&quot;:-0.079098686575889587,&quot;m10&quot;:0.00015259397332556546,&quot;m11&quot;:48.003398895263672,&quot;m12&quot;:-0.0015066617634147406},&quot;opacity&quot;:1.0,&quot;blendMode&quot;:&quot;NORMAL&quot;,&quot;visible&quot;:true}\\"/>\\n  <defs>\\n    <clipPath id=\\"paint0_angular_4434_1033_clip_path\\"><path d=\\"M23.9269 0.000388189C30.296 -0.0295367 36.417 2.4654 40.9454 6.93691C44.9866 10.9275 47.4648 16.2012 47.9796 21.809C48.0828 22.9328 47.1647 23.8555 46.0363 23.8627C44.9079 23.8698 43.998 22.958 43.8751 21.8363C43.3798 17.3109 41.3426 13.0674 38.0714 9.8373C34.3129 6.12602 29.2327 4.05571 23.9464 4.08047C18.66 4.10534 13.5995 6.22361 9.87609 9.97011C6.1527 13.7167 4.07043 18.7851 4.08703 24.0629C4.10364 29.3406 6.21709 34.3964 9.96399 38.1195C13.7109 41.8427 18.7849 43.9286 24.0714 43.9203C29.3579 43.912 34.4251 41.8095 38.1603 38.0746C41.4109 34.8241 43.422 30.5687 43.8888 26.0404C44.0045 24.918 44.9079 24.0006 46.0363 24.0004C47.1648 24.0004 48.0893 24.917 47.9933 26.0414C47.5138 31.6525 45.068 36.9416 41.0519 40.9574C36.5518 45.4572 30.4473 47.9903 24.0782 48.0004C17.709 48.0104 11.5955 45.4969 7.08117 41.0111C2.56686 36.5254 0.0201276 30.4343 0.000118312 24.0756C-0.0198507 17.7169 2.48874 11.61 6.97473 7.09609C11.4607 2.58224 17.5578 0.0303524 23.9269 0.000388189Z\\"/></clipPath></defs>\\n    </svg>}\\n    @if (showLabel()){ <span class=\\"loaderLabel appearance--{{appearance()}} size--{{size()}}\\" role=\\"status\\" aria-live=\\"polite\\"\\n    >{{label()}}</span>}\\n</div>"},{"name":"PopoverComponent","id":"component-PopoverComponent-e07e052e0fc619a11a3aa144d5691fb67c6dd2bd565a4ac01b80b5db80cdcca669cbb0984b1ee9f64ea13b1076afcd770b1978bdd7a55c46450111e1fc3966a9","file":"projects/ds-rte-lib/src/lib/components/popover/popover.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-popover","styleUrls":[],"styles":[],"templateUrl":["./popover.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"alignment","deprecated":false,"deprecationMessage":"","type":"PopoverAlignment","indexKey":"","optional":false,"description":"","line":19,"modifierKind":[148],"required":false},{"name":"arrow","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":21,"modifierKind":[148],"required":false},{"name":"content","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":20,"modifierKind":[148],"required":false},{"name":"coordinates","defaultValue":"{ top: 0, left: 0 }","deprecated":false,"deprecationMessage":"","type":"{ top: number; left: number }","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148],"required":false},{"name":"isOpen","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":24,"modifierKind":[148],"required":false},{"name":"position","deprecated":false,"deprecationMessage":"","type":"Exclude<PopoverPosition, \\"auto\\">","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148],"required":true},{"name":"primaryButtonLabel","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":17,"modifierKind":[148],"required":true},{"name":"secondaryButtonLabel","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":23,"modifierKind":[148],"required":false},{"name":"title","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148],"required":false}],"outputsClass":[{"name":"clickPrimaryButton","deprecated":false,"deprecationMessage":"","type":"void","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[148],"required":false},{"name":"clickSecondaryButton","deprecated":false,"deprecationMessage":"","type":"void","indexKey":"","optional":false,"description":"","line":28,"modifierKind":[148],"required":false}],"propertiesClass":[{"name":"element","deprecated":false,"deprecationMessage":"","type":"HTMLElement","indexKey":"","optional":false,"description":"","line":30,"modifierKind":[123]},{"name":"elementRef","defaultValue":"inject(ElementRef)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":32,"modifierKind":[123]}],"methodsClass":[{"name":"focusFirstElement","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"handleClickPrimaryButton","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":""},{"name":"handleClickSecondaryButton","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":""},{"name":"handleKeydown","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":38,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"ButtonComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { Component, ElementRef, inject, input, output, AfterViewInit } from \\"@angular/core\\";\\nimport { PopoverAlignment, PopoverPosition } from \\"@design-system-rte/core/components/popover/popover.interface\\";\\nimport { FOCUSABLE_ELEMENTS_QUERY } from \\"@design-system-rte/core/constants/dom/dom.constants\\";\\nimport { TAB_KEY } from \\"@design-system-rte/core/constants/keyboard/keyboard.constants\\";\\n\\nimport { ButtonComponent } from \\"../button/button.component\\";\\n\\n@Component({\\n  selector: \\"rte-popover\\",\\n  imports: [CommonModule, ButtonComponent],\\n  standalone: true,\\n  templateUrl: \\"./popover.component.html\\",\\n  styleUrl: \\"./popover.component.scss\\",\\n})\\nexport class PopoverComponent implements AfterViewInit {\\n  readonly primaryButtonLabel = input.required<string>();\\n  readonly position = input.required<Exclude<PopoverPosition, \\"auto\\">>();\\n  readonly alignment = input<PopoverAlignment>();\\n  readonly content = input<string>();\\n  readonly arrow = input<boolean>();\\n  readonly title = input<string>();\\n  readonly secondaryButtonLabel = input<string>();\\n  readonly isOpen = input<boolean>(false);\\n  readonly coordinates = input<{ top: number; left: number }>({ top: 0, left: 0 });\\n\\n  readonly clickPrimaryButton = output<void>();\\n  readonly clickSecondaryButton = output<void>();\\n\\n  private element: HTMLElement;\\n\\n  private elementRef = inject(ElementRef);\\n\\n  constructor() {\\n    this.element = this.elementRef.nativeElement;\\n  }\\n\\n  ngAfterViewInit() {\\n    this.focusFirstElement();\\n  }\\n\\n  handleKeydown(event: KeyboardEvent) {\\n    if (event.key === TAB_KEY) {\\n      if (this.isOpen()) {\\n        const focusable = this.element.querySelectorAll(FOCUSABLE_ELEMENTS_QUERY);\\n        const first = focusable[0] as HTMLElement;\\n        const last = focusable[focusable.length - 1] as HTMLElement;\\n        if (event.shiftKey && document.activeElement === first) {\\n          event.preventDefault();\\n          last.focus();\\n        } else if (!event.shiftKey && document.activeElement === last) {\\n          event.preventDefault();\\n          first.focus();\\n        }\\n      }\\n    }\\n  }\\n\\n  handleClickPrimaryButton() {\\n    this.clickPrimaryButton.emit();\\n  }\\n  handleClickSecondaryButton() {\\n    this.clickSecondaryButton.emit();\\n  }\\n\\n  private focusFirstElement() {\\n    const focusable = this.element.querySelectorAll(FOCUSABLE_ELEMENTS_QUERY);\\n    if (focusable.length > 0) (focusable[0] as HTMLElement).focus();\\n  }\\n}\\n","styleUrl":"./popover.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":32},"extends":[],"implements":["AfterViewInit"],"templateData":"<div\\n  #root\\n  class=\\"rte-popover\\"\\n  role=\\"dialog\\"\\n  aria-modal=\\"true\\"\\n  [attr.data-arrow]=\\"arrow()\\"\\n  [attr.data-position]=\\"position()\\"\\n  [attr.data-alignment]=\\"alignment()\\"\\n  [attr.data-open]=\\"isOpen()\\"\\n  [style]=\\"{ top: coordinates().top + \'px\', left: coordinates().left + \'px\' }\\"\\n  (keydown)=\\"handleKeydown($event)\\"\\n>\\n  <div class=\\"popoverInner\\">\\n    <div class=\\"popoverContentContainer\\">\\n      <div *ngIf=\\"title\\" class=\\"popoverTitle\\">{{ title() }}</div>\\n      <div class=\\"popoverContent\\">{{ content() }}</div>\\n    </div>\\n    <div class=\\"popoverButtonContainer\\">\\n      <rte-button\\n        *ngIf=\\"secondaryButtonLabel()\\"\\n        variant=\\"secondary\\"\\n        [label]=\\"secondaryButtonLabel() || \'\'\\"\\n        (click)=\\"handleClickSecondaryButton()\\"\\n      />\\n      <rte-button\\n        variant=\\"primary\\"\\n        [label]=\\"primaryButtonLabel()\\"\\n        (click)=\\"handleClickPrimaryButton()\\"\\n      />\\n    </div>\\n  </div>\\n</div>\\n"},{"name":"RadioButtonComponent","id":"component-RadioButtonComponent-bebabdaed56c95c72862c6247c35b478435c8d1709c847f4df0ac78c45279bca721b11a58731b276b3f8f899a6374ae372bc2ecfa12b12f1db7e9cfbd2c67c64","file":"projects/ds-rte-lib/src/lib/components/radio-button/radio-button.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-radio-button","styleUrls":[],"styles":[],"templateUrl":["./radio-button.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":17,"modifierKind":[148],"required":false},{"name":"error","defaultValue":"false","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148],"required":false},{"name":"groupName","defaultValue":"\\"\\"","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":15,"modifierKind":[148],"required":false},{"name":"label","defaultValue":"\\"\\"","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":14,"modifierKind":[148],"required":false},{"name":"readOnly","defaultValue":"false","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":19,"modifierKind":[148],"required":false},{"name":"showLabel","defaultValue":"true","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":16,"modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[{"name":"isDisplayed","defaultValue":"computed(() => !(this.disabled() && this.error()))","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148]},{"name":"labelSize","defaultValue":"labelSize","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":20}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, computed, input } from \\"@angular/core\\";\\nimport { labelSize } from \\"@design-system-rte/core/components/radio-button/radio-button.constants\\";\\n\\n@Component({\\n  selector: \\"rte-radio-button\\",\\n  imports: [CommonModule],\\n  standalone: true,\\n  templateUrl: \\"./radio-button.component.html\\",\\n  styleUrl: \\"./radio-button.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class RadioButtonComponent {\\n  readonly label = input(\\"\\");\\n  readonly groupName = input(\\"\\");\\n  readonly showLabel = input(true);\\n  readonly disabled = input(false);\\n  readonly error = input(false);\\n  readonly readOnly = input(false);\\n  labelSize = labelSize;\\n\\n  readonly isDisplayed = computed(() => !(this.disabled() && this.error()));\\n}\\n","styleUrl":"./radio-button.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"    <div *ngIf=\\"isDisplayed()\\" class=\\"rte-radio-button-container\\">\\n        <input\\n            type=\\"radio\\"\\n            class=\\"rte-radio-button\\"\\n            [id]=\\"label()\\"\\n            [value]=\\"label()\\"\\n            [size]=\\"labelSize\\"\\n            [name]=\\"groupName()\\"\\n            [ngClass]=\\"{\'error\': error(), \'read-only\': readOnly()}\\"\\n            [disabled]=\\"disabled()\\"\\n        />\\n        <label \\n            *ngIf=\\"showLabel()\\" \\n            class=\\"rte-radio-button-label\\" \\n            [for]=\\"label()\\"\\n            [ngClass]=\\"{\\n                \'error\': error(),\\n                \'read-only\': readOnly(),\\n                \'disabled\': disabled()\\n            }\\"\\n        >\\n            {{ label() }}\\n        </label>\\n    </div>\\n"},{"name":"RadioButtonGroupComponent","id":"component-RadioButtonGroupComponent-31b63baedfac895232c5d98ae8f6cf0b2379fb22e41f4ff204fd967df09d8f03d4facfbb41ec84f0d9768ced49975efea06c5979a396f7a4cb85ef435a48be1a","file":"projects/ds-rte-lib/src/lib/components/radio-button-group/radio-button-group.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-radio-button-group","styleUrls":[],"styles":[],"templateUrl":["./radio-button-group.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"direction","defaultValue":"\\"horizontal\\"","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":17,"modifierKind":[148],"required":false},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148],"required":false},{"name":"error","defaultValue":"false","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":24,"modifierKind":[148],"required":false},{"name":"errorMessage","defaultValue":"\\"\\"","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":23,"modifierKind":[148],"required":false},{"name":"groupHelpText","defaultValue":"\\"\\"","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":21,"modifierKind":[148],"required":false},{"name":"groupName","defaultValue":"\\"\\"","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":15,"modifierKind":[148],"required":false},{"name":"groupTitle","defaultValue":"\\"\\"","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":19,"modifierKind":[148],"required":false},{"name":"items","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"string[]","indexKey":"","optional":false,"description":"","line":16,"modifierKind":[148],"required":false},{"name":"readOnly","defaultValue":"false","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148],"required":false},{"name":"showGroupTitle","defaultValue":"false","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":20,"modifierKind":[148],"required":false},{"name":"showHelpText","defaultValue":"false","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148],"required":false},{"name":"showItemsLabel","defaultValue":"true","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[{"name":"isDisplayed","defaultValue":"computed(() => !(this.disabled() && this.error()))","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":28,"modifierKind":[148]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"RadioButtonComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, computed, input } from \\"@angular/core\\";\\n\\nimport { RadioButtonComponent } from \\"../radio-button/radio-button.component\\";\\n\\n@Component({\\n  selector: \\"rte-radio-button-group\\",\\n  imports: [CommonModule, RadioButtonComponent],\\n  standalone: true,\\n  templateUrl: \\"./radio-button-group.component.html\\",\\n  styleUrl: \\"./radio-button-group.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class RadioButtonGroupComponent {\\n  readonly groupName = input(\\"\\");\\n  readonly items = input<string[]>([]);\\n  readonly direction = input(\\"horizontal\\");\\n  readonly showItemsLabel = input(true);\\n  readonly groupTitle = input(\\"\\");\\n  readonly showGroupTitle = input(false);\\n  readonly groupHelpText = input(\\"\\");\\n  readonly showHelpText = input(false);\\n  readonly errorMessage = input(\\"\\");\\n  readonly error = input(false);\\n  readonly disabled = input(false);\\n  readonly readOnly = input(false);\\n\\n  readonly isDisplayed = computed(() => !(this.disabled() && this.error()));\\n}\\n","styleUrl":"./radio-button-group.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<div  \\n    *ngIf=\\"isDisplayed()\\"\\n    class=\\"radio-button-group-container\\">\\n    <div\\n        class=\\"radio-button-group-header\\"\\n        [ngClass]=\\"{\\n            \'disabled\': disabled(),\\n            \'error\': error(),\\n            \'read-only\': readOnly(),\\n        }\\">\\n        <h3\\n            *ngIf=\\"showGroupTitle()\\"\\n            class=\\"group-title\\"\\n            >\\n            {{ groupTitle() }}\\n        </h3>\\n        <p\\n            *ngIf=\\"showHelpText()\\"\\n            class=\\"group-help-text\\"\\n            >\\n            {{ groupHelpText() }}\\n\\n        </p>\\n        <p\\n            *ngIf=\\"error()\\"\\n            class=\\"group-error-message\\"\\n            >\\n            {{ errorMessage() }}\\n        </p>\\n    </div>\\n    <div class=\\"radio-button-group\\" \\n        [ngClass]=\\"{\'horizontal\': direction() === \'horizontal\', \'vertical\': direction() === \'vertical\'}\\">\\n        <ng-container \\n        *ngFor=\\"let item of items()\\">\\n            <rte-radio-button\\n                [label]=\\"item\\"\\n                [groupName]=\\"groupName()\\"\\n                [showLabel]=\\"showItemsLabel()\\"\\n                [disabled]=\\"disabled()\\"\\n                [error]=\\"error()\\"\\n                [readOnly]=\\"readOnly()\\"\\n            />\\n        </ng-container>\\n    </div>\\n</div>"},{"name":"SegmentedControlComponent","id":"component-SegmentedControlComponent-bacc0480a5d2639e5f9d8c07f2ba50fc15f2641d7fb0214c9cfd721cc67d3d5c9ed8dd9107db5b37c8570177ddcab6d6b2c376d000ef80622fa157f38c9804bc","file":"projects/ds-rte-lib/src/lib/components/segmented-control/segmented-control.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-segmented-control","styleUrls":[],"styles":[],"templateUrl":["./segmented-control.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"ariaLabel","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":54,"modifierKind":[148],"required":false},{"name":"ariaLabelledBy","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":55,"modifierKind":[148],"required":false},{"name":"options","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"SegmentOptions[]","indexKey":"","optional":false,"description":"","line":51,"modifierKind":[148],"required":false},{"name":"selectedSegment","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":53,"modifierKind":[148],"required":false}],"outputsClass":[{"name":"change","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":52,"modifierKind":[148],"required":false}],"propertiesClass":[{"name":"isValidOptions","defaultValue":"computed(() => isValidSegmentedControlOptions(this.options()))","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":69,"modifierKind":[148]},{"name":"lastKeydown","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"string | null","indexKey":"","optional":false,"description":"","line":162,"modifierKind":[123]},{"name":"onGlobalKeyDown","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":164,"modifierKind":[123]},{"name":"segmentRefs","defaultValue":"viewChildren<ElementRef<HTMLDivElement>>(\\"segment\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":57,"modifierKind":[148]},{"name":"segmentSelectedIndicatorStyle","defaultValue":"computed(() => ({\\n    left: `${this.sliderLeft()}px`,\\n    top: `${this.sliderTop()}px`,\\n    width: `${this.sliderWidth()}px`,\\n  }))","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":63,"modifierKind":[148]},{"name":"sliderLeft","defaultValue":"signal(0)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":59,"modifierKind":[148]},{"name":"sliderTop","defaultValue":"signal(0)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":61,"modifierKind":[148]},{"name":"sliderWidth","defaultValue":"signal(0)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":60,"modifierKind":[148]}],"methodsClass":[{"name":"focusCurrentSegmentElement","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":168,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getSegmentPosition","args":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"","typeParameters":[],"line":147,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleKeyDown","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleKeyUp","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":104,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isSegmentSelected","args":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":77,"deprecated":false,"deprecationMessage":""},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":71,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":87,"deprecated":false,"deprecationMessage":""},{"name":"selectSegment","args":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":96,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"updateSelectedSegmentIndicator","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":151,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport {\\n  ChangeDetectionStrategy,\\n  Component,\\n  ElementRef,\\n  input,\\n  output,\\n  viewChildren,\\n  AfterViewInit,\\n  OnDestroy,\\n  computed,\\n  signal,\\n  OnChanges,\\n  SimpleChanges,\\n} from \\"@angular/core\\";\\nimport {\\n  getSegmentPosition,\\n  focusNextNotSegmentElement,\\n  focusPreviousNotSegmentElement,\\n  focusNextSegmentElement,\\n  focusPreviousSegmentElement,\\n  isValidSegmentedControlOptions,\\n} from \\"@design-system-rte/core/components/segmented-control/segmented-control-utils\\";\\nimport {\\n  SegmentOptions,\\n  SegmentProps,\\n} from \\"@design-system-rte/core/components/segmented-control/segmented-control.interface\\";\\nimport { FOCUSABLE_ELEMENTS_QUERY } from \\"@design-system-rte/core/constants/dom/dom.constants\\";\\nimport {\\n  ARROW_LEFT_KEY,\\n  ARROW_RIGHT_KEY,\\n  ENTER_KEY,\\n  SPACE_KEY,\\n  TAB_KEY,\\n} from \\"@design-system-rte/core/constants/keyboard/keyboard.constants\\";\\n\\nimport { IconComponent } from \\"../icon/icon.component\\";\\n\\nconst segmentClass = \\"rte-segment\\";\\nconst segmentSelector = `.${segmentClass}`;\\n\\n@Component({\\n  selector: \\"rte-segmented-control\\",\\n  imports: [CommonModule, IconComponent],\\n  standalone: true,\\n  templateUrl: \\"./segmented-control.component.html\\",\\n  styleUrl: \\"./segmented-control.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class SegmentedControlComponent implements OnChanges, AfterViewInit, OnDestroy {\\n  readonly options = input<SegmentOptions[]>([]);\\n  readonly change = output<string>();\\n  readonly selectedSegment = input<string>();\\n  readonly ariaLabel = input<string>();\\n  readonly ariaLabelledBy = input<string>();\\n\\n  readonly segmentRefs = viewChildren<ElementRef<HTMLDivElement>>(\\"segment\\");\\n\\n  readonly sliderLeft = signal(0);\\n  readonly sliderWidth = signal(0);\\n  readonly sliderTop = signal(0);\\n\\n  readonly segmentSelectedIndicatorStyle = computed(() => ({\\n    left: `${this.sliderLeft()}px`,\\n    top: `${this.sliderTop()}px`,\\n    width: `${this.sliderWidth()}px`,\\n  }));\\n\\n  readonly isValidOptions = computed(() => isValidSegmentedControlOptions(this.options()));\\n\\n  ngOnChanges(changes: SimpleChanges): void {\\n    if (changes[\\"selectedSegment\\"]) {\\n      this.updateSelectedSegmentIndicator();\\n    }\\n  }\\n\\n  ngAfterViewInit() {\\n    this.updateSelectedSegmentIndicator();\\n    window.addEventListener(\\"resize\\", this.updateSelectedSegmentIndicator.bind(this));\\n    window.addEventListener(\\"keydown\\", this.onGlobalKeyDown.bind(this));\\n\\n    this.segmentRefs().forEach((segmentElement) => {\\n      segmentElement.nativeElement.addEventListener(\\"focus\\", this.focusCurrentSegmentElement.bind(this));\\n    });\\n  }\\n\\n  ngOnDestroy() {\\n    window.removeEventListener(\\"resize\\", this.updateSelectedSegmentIndicator.bind(this));\\n    window.removeEventListener(\\"keydown\\", this.onGlobalKeyDown.bind(this));\\n\\n    this.segmentRefs().forEach((segmentElement) => {\\n      segmentElement.nativeElement.addEventListener(\\"focus\\", this.focusCurrentSegmentElement.bind(this));\\n    });\\n  }\\n\\n  selectSegment(id: string) {\\n    this.change.emit(id);\\n  }\\n\\n  isSegmentSelected(id: string): boolean {\\n    return this.selectedSegment() === id;\\n  }\\n\\n  handleKeyUp(event: KeyboardEvent) {\\n    event.preventDefault();\\n    if (event.key === ARROW_RIGHT_KEY || event.key === ARROW_LEFT_KEY) {\\n      const allSegmentElements =\\n        Array.from(\\n          document.activeElement?.parentElement?.parentElement?.querySelectorAll(\\n            segmentSelector,\\n          ) as NodeListOf<HTMLElement>,\\n        ) || [];\\n\\n      const currentActiveSegmentElementIndex = Array.from(allSegmentElements).findIndex(\\n        (element) => element === document.activeElement,\\n      );\\n\\n      if (event.key === ARROW_RIGHT_KEY) {\\n        focusNextSegmentElement(currentActiveSegmentElementIndex, allSegmentElements);\\n      } else if (event.key === ARROW_LEFT_KEY) {\\n        focusPreviousSegmentElement(currentActiveSegmentElementIndex, allSegmentElements);\\n      }\\n    } else if (event.key === SPACE_KEY || event.key === ENTER_KEY) {\\n      const target = event.target as HTMLElement;\\n      const dataId = target.getAttribute(\\"data-id\\");\\n      this.selectSegment(dataId || \\"\\");\\n    }\\n  }\\n\\n  handleKeyDown(event: KeyboardEvent) {\\n    if (event.key === TAB_KEY || event.key === SPACE_KEY || event.key === ENTER_KEY) {\\n      event.preventDefault();\\n    }\\n    if (event.key === TAB_KEY) {\\n      const allFocusableElements = Array.from(document.querySelectorAll(FOCUSABLE_ELEMENTS_QUERY)) as HTMLElement[];\\n      const currentActiveElement = document.activeElement;\\n      const currentIndex = allFocusableElements.indexOf(currentActiveElement as HTMLElement);\\n\\n      if (event.shiftKey) {\\n        focusPreviousNotSegmentElement(currentIndex, allFocusableElements, segmentClass);\\n      } else {\\n        focusNextNotSegmentElement(currentIndex, allFocusableElements, segmentClass);\\n      }\\n    }\\n  }\\n\\n  getSegmentPosition(index: number): SegmentProps[\\"position\\"] {\\n    return getSegmentPosition(index, this.options().length);\\n  }\\n\\n  private updateSelectedSegmentIndicator() {\\n    const idx = this.options().findIndex((opt) => opt.id === this.selectedSegment());\\n    const segment = this.segmentRefs()[idx]?.nativeElement;\\n\\n    if (segment) {\\n      this.sliderWidth.set(segment.offsetWidth);\\n      this.sliderTop.set(segment.offsetTop);\\n      this.sliderLeft.set(segment.offsetLeft);\\n    }\\n  }\\n\\n  private lastKeydown: string | null = null;\\n\\n  private onGlobalKeyDown = (event: KeyboardEvent) => {\\n    this.lastKeydown = event.key;\\n  };\\n\\n  private focusCurrentSegmentElement() {\\n    if (this.lastKeydown === \\"Tab\\") {\\n      const selectedSegmentElement = this.segmentRefs().find((segment) =>\\n        segment.nativeElement.classList.contains(\\"selected\\"),\\n      )?.nativeElement;\\n      if (selectedSegmentElement) {\\n        selectedSegmentElement.focus();\\n      } else {\\n        this.segmentRefs()[0]?.nativeElement?.focus();\\n      }\\n    }\\n  }\\n}\\n","styleUrl":"./segmented-control.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"implements":["OnChanges","AfterViewInit","OnDestroy"],"templateData":"<div *ngIf=\\"isValidOptions()\\" class=\\"rte-segmented-control\\" role=\\"radiogroup\\" [attr.aria-label]=\\"ariaLabel()\\">\\n  <span class=\\"rte-segment-selected-indicator\\" [ngStyle]=\\"segmentSelectedIndicatorStyle()\\"></span>\\n  <ng-container *ngFor=\\"let option of options(); let idx = index\\">\\n    <div class=\\"rte-segment-container\\" [attr.data-position]=\\"getSegmentPosition(idx)\\">\\n      <div\\n      #segment\\n      role=\\"radio\\"\\n      class=\\"rte-segment\\"\\n      tabindex=\\"0\\"\\n      [attr.data-id]=\\"option.id\\"\\n      [attr.data-segment-type]=\\"option.icon ?  \'icon\' : \'label\'\\"\\n      [class.selected]=\\"isSegmentSelected(option.id)\\"\\n      [attr.aria-checked]=\\"isSegmentSelected(option.id)\\"\\n      [attr.aria-label]=\\"option.label\\"\\n      (click)=\\"selectSegment(option.id)\\"\\n      (keydown)=\\"handleKeyDown($event)\\"\\n      (keyup)=\\"handleKeyUp($event)\\"\\n      >\\n      <rte-icon\\n          *ngIf=\\"isSegmentSelected(option.id)\\"\\n          name=\\"check-small\\"\\n          class=\\"rte-selected-icon\\"\\n          [size]=\\"24\\"\\n      />\\n      <div class=\\"rte-segment-content\\">\\n        <ng-container *ngIf=\\"option.icon; else label\\">\\n          <rte-icon [name]=\\"option.icon\\" [size]=\\"24\\" [appearance]=\\"isSegmentSelected(option.id) ? \'filled\' : \'outlined\' \\"></rte-icon>\\n        </ng-container>\\n        <ng-template #label>\\n          <span class=\\"rte-segment-label\\">{{ option.label }}</span>\\n        </ng-template>\\n      </div>\\n    </div>\\n  </div>\\n  </ng-container>\\n</div>"},{"name":"SplitButtonComponent","id":"component-SplitButtonComponent-ec347edf83082ab86e4dd701ddfd48f615ebc7fc55e986a4025fd900a8c2291fb06d313f73a844c7e913d7e172aa60aab0f0fcf52fd73dc5c31009d3df9cfd14","file":"projects/ds-rte-lib/src/lib/components/split-button/split-button.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-split-button","styleUrls":[],"styles":[],"templateUrl":["./split-button.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"appearance","defaultValue":"\\"primary\\"","deprecated":false,"deprecationMessage":"","type":"SplitButtonAppearance","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148],"required":false},{"name":"ariaLabelRight","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":33,"modifierKind":[148],"required":false},{"name":"compactSpacing","defaultValue":"false","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":28,"modifierKind":[148],"required":false},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":32,"modifierKind":[148],"required":false},{"name":"icon","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"RegularIconIdKey | TogglableIconIdKey | null","indexKey":"","optional":false,"description":"","line":31,"modifierKind":[148],"required":false},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[148],"required":true},{"name":"position","defaultValue":"\\"bottom-start\\"","deprecated":false,"deprecationMessage":"","type":"SplitButtonPosition","indexKey":"","optional":false,"description":"","line":30,"modifierKind":[148],"required":false},{"name":"selected","defaultValue":"false","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":29,"modifierKind":[148],"required":false},{"name":"size","defaultValue":"\\"m\\"","deprecated":false,"deprecationMessage":"","type":"SplitButtonSize","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[{"name":"isOpen","defaultValue":"signal(false)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":38,"modifierKind":[148]},{"name":"splitButtonLeftIconSize","defaultValue":"computed(() => splitButtonLeftIconSize[this.size()])","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":35,"modifierKind":[148]},{"name":"splitButtonRightIconSize","defaultValue":"computed(() => splitButtonRightIconSize[this.size()])","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":36,"modifierKind":[148]}],"methodsClass":[{"name":"handleKeyDown","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""},{"name":"key","type":"string","deprecated":false,"deprecationMessage":""},{"name":"callback","type":"function","deprecated":false,"deprecationMessage":"","function":[]}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"key","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"callback","type":"function","deprecated":false,"deprecationMessage":"","function":[],"tagName":{"text":"param"}}]},{"name":"handleKeyDownOnMenu","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleKeyDownOnRightButton","args":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":40,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"KeyboardEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, computed, input, signal } from \\"@angular/core\\";\\nimport {\\n  splitButtonLeftIconSize,\\n  splitButtonRightIconSize,\\n} from \\"@design-system-rte/core/components/split-button/split-button.constants\\";\\nimport {\\n  SplitButtonAppearance,\\n  SplitButtonPosition,\\n  SplitButtonSize,\\n} from \\"@design-system-rte/core/components/split-button/split-button.interface\\";\\n\\nimport { IconComponent } from \\"../icon/icon.component\\";\\nimport { RegularIconIdKey, TogglableIconIdKey } from \\"../icon/icon.service\\";\\n\\n@Component({\\n  selector: \\"rte-split-button\\",\\n  imports: [CommonModule, IconComponent],\\n  standalone: true,\\n  templateUrl: \\"./split-button.component.html\\",\\n  styleUrl: \\"./split-button.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class SplitButtonComponent {\\n  readonly appearance = input<SplitButtonAppearance>(\\"primary\\");\\n  readonly size = input<SplitButtonSize>(\\"m\\");\\n  readonly label = input.required<string>();\\n  readonly compactSpacing = input(false);\\n  readonly selected = input(false);\\n  readonly position = input<SplitButtonPosition>(\\"bottom-start\\");\\n  readonly icon = input<RegularIconIdKey | TogglableIconIdKey | null>(null);\\n  readonly disabled = input(false);\\n  readonly ariaLabelRight = input<string>();\\n\\n  readonly splitButtonLeftIconSize = computed(() => splitButtonLeftIconSize[this.size()]);\\n  readonly splitButtonRightIconSize = computed(() => splitButtonRightIconSize[this.size()]);\\n\\n  readonly isOpen = signal(false);\\n\\n  handleKeyDownOnRightButton(event: KeyboardEvent): void {\\n    this.handleKeyDown(event, \\"ArrowDown\\", () => this.isOpen.set(true));\\n    this.handleKeyDown(event, \\"Escape\\", () => this.isOpen.set(false));\\n  }\\n\\n  handleKeyDownOnMenu(event: KeyboardEvent): void {\\n    this.handleKeyDown(event, \\"Escape\\", () => this.isOpen.set(false));\\n  }\\n\\n  private handleKeyDown(event: KeyboardEvent, key: string, callback: () => void): void {\\n    if (event.key === key) {\\n      event.preventDefault();\\n      callback();\\n    }\\n  }\\n}\\n","styleUrl":"./split-button.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<div \\n  class=\\"split-button-container size-{{ size() }} {{appearance()}}\\"\\n  [ngClass]=\\"{\'compact-spacing\': compactSpacing()}\\"\\n>\\n  <button\\n    class=\\"split-button-left size-{{ size() }}\\"\\n    data-testid=\\"Main action button\\" \\n    type=\\"button\\"\\n    [disabled]=\\"disabled()\\"\\n  >\\n    <rte-icon \\n      *ngIf=\\"icon()\\"\\n      [name]=\\"icon()!\\"\\n      [size]=\\"splitButtonLeftIconSize()\\"\\n    />\\n    <p class=\\"split-button-label size-{{ size() }}\\">\\n      {{label()}}\\n    </p>\\n  </button>\\n\\n  <div \\n    class=\\"split-button-divider\\"\\n    [ngClass]=\\"{\'disabled\': disabled()}\\"\\n  ></div>\\n\\n  <div class=\\"split-button-right-container\\">\\n    <button\\n      class=\\"split-button-right size-{{ size() }}\\"\\n      data-testid=\\"Menu button\\"\\n      type=\\"button\\"\\n      aria-haspopup=\\"menu\\"\\n      [attr.aria-expanded]=\\"isOpen()\\"\\n      [attr.aria-label]=\\"ariaLabelRight()\\"\\n      [attr.data-selected]=\\"selected()\\"\\n      [disabled]=\\"disabled()\\"\\n      (click)=\\"isOpen.set(true)\\"\\n      (mouseenter)=\\"isOpen.set(true)\\"\\n      (mouseleave)=\\"isOpen.set(false)\\"\\n      (keydown)=\\"handleKeyDownOnRightButton($event)\\"\\n    >\\n      <div class=\\"split-button-right-icon-container\\">\\n        <rte-icon name=\\"arrow-chevron-down\\" [size]=\\"splitButtonRightIconSize()\\"/>\\n      </div>\\n    </button>\\n\\n    <div\\n      class=\\"split-button-dropdown position-{{ position() }}\\"\\n      role=\\"menu\\"\\n      data-testid=\\"Menu container\\"\\n      [style.visibility]=\\"isOpen() ? \'visible\' : \'hidden\'\\"\\n      (keydown)=\\"handleKeyDownOnMenu($event)\\"\\n    >\\n      <ng-content/>\\n    </div>\\n  </div>\\n</div>"},{"name":"SwitchComponent","id":"component-SwitchComponent-5362ea5e7dc451eb9a3783d3e1e85c88ca81163d2a6619c0f85f7345f4632fdc967523b367d62bd76921de3070d4d8566539ddf5e72184c9817547d3e6d76812","file":"projects/ds-rte-lib/src/lib/components/switch/switch.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-switch","styleUrls":[],"styles":[],"templateUrl":["./switch.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"appearance","defaultValue":"\\"brand\\"","deprecated":false,"deprecationMessage":"","type":"SwitchProps[\\"appearance\\"]","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148],"required":false},{"name":"checked","defaultValue":"false","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":23,"modifierKind":[148],"required":false},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":21,"modifierKind":[148],"required":false},{"name":"label","defaultValue":"\\"\\"","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":17,"modifierKind":[148],"required":false},{"name":"readOnly","defaultValue":"false","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148],"required":false},{"name":"showIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":20,"modifierKind":[148],"required":false},{"name":"showLabel","defaultValue":"true","deprecated":false,"deprecationMessage":"","indexKey":"","optional":false,"description":"","line":19,"modifierKind":[148],"required":false}],"outputsClass":[{"name":"stateChange","deprecated":false,"deprecationMessage":"","type":"Event","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148],"required":false}],"propertiesClass":[{"name":"isChecked","defaultValue":"signal(false)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":30,"modifierKind":[148]},{"name":"switchHeight","defaultValue":"switchHeight","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":27},{"name":"switchWidth","defaultValue":"switchWidth","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":28}],"methodsClass":[{"name":"handleChange","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleClick","args":[{"name":"event","type":"MouseEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"MouseEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, input, signal, OnInit, output } from \\"@angular/core\\";\\nimport { switchHeight, switchWidth } from \\"@design-system-rte/core/components/switch/switch.constants\\";\\nimport { SwitchProps } from \\"@design-system-rte/core/components/switch/switch.interface\\";\\n\\nimport { IconComponent } from \\"../icon/icon.component\\";\\n\\n@Component({\\n  selector: \\"rte-switch\\",\\n  imports: [CommonModule, IconComponent],\\n  standalone: true,\\n  templateUrl: \\"./switch.component.html\\",\\n  styleUrl: \\"./switch.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class SwitchComponent implements OnInit {\\n  readonly label = input(\\"\\");\\n  readonly appearance = input<SwitchProps[\\"appearance\\"]>(\\"brand\\");\\n  readonly showLabel = input(true);\\n  readonly showIcon = input(true);\\n  readonly disabled = input(false);\\n  readonly readOnly = input(false);\\n  readonly checked = input(false);\\n\\n  readonly stateChange = output<Event>();\\n\\n  switchHeight = switchHeight;\\n  switchWidth = switchWidth;\\n\\n  readonly isChecked = signal(false);\\n\\n  ngOnInit() {\\n    this.isChecked.set(this.checked());\\n  }\\n\\n  handleChange(event: Event): void {\\n    const target = event.target as HTMLInputElement;\\n    this.isChecked.set(target.checked);\\n    this.stateChange.emit(event);\\n  }\\n\\n  handleClick(event: MouseEvent): void {\\n    if (this.readOnly() || this.disabled()) {\\n      event.stopPropagation();\\n    } else {\\n      const inputElement = (event.currentTarget as HTMLInputElement).querySelector<HTMLInputElement>(\\n        \'input[type=\\"checkbox\\"]\',\\n      );\\n      if (inputElement) {\\n        inputElement.checked = !this.isChecked();\\n        const changeEvent = new Event(\\"change\\", { bubbles: true });\\n        Object.defineProperty(changeEvent, \\"target\\", {\\n          value: inputElement,\\n          writable: false,\\n        });\\n        this.handleChange(changeEvent);\\n      }\\n    }\\n  }\\n}\\n","styleUrl":"./switch.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"implements":["OnInit"],"templateData":"<div\\n    class=\\"switch-container appearance-{{appearance()}}\\"\\n    [ngClass]=\\"{\\n        \'disabled\': disabled(),\\n        \'read-only\': readOnly(),\\n        \'checked\': isChecked()\\n    }\\"\\n    (click)=\\"handleClick($event)\\"\\n>\\n    <input\\n        type=\\"checkbox\\"\\n        role=\\"switch\\"\\n        class=\\"switch\\"\\n        [attr.aria-checked]=\\"isChecked()\\"\\n        [attr.aria-label]=\\"label()\\"\\n        [attr.aria-disabled]=\\"disabled()\\"\\n        [attr.aria-readonly]=\\"readOnly()\\"\\n        [ariaLabel]=\\"label()\\"\\n        [name]=\\"label()\\"\\n        [ngClass]=\\"{\\n        \'disabled\': disabled(),\\n        \'read-only\': readOnly(),\\n        \'checked\': isChecked()\\n    }\\"\\n        [style.min-height.px]=\\"switchHeight\\"\\n        [style.min-width.px]=\\"switchWidth\\"\\n        [disabled]=\\"disabled()\\"\\n        [checked]=\\"isChecked()\\"\\n    />\\n    <div class=\\"switch-icon-check\\" [ngClass]=\\"{\'checked\': isChecked() }\\" (click)=\\"handleClick($event)\\">\\n        @if (showIcon()) {\\n            <rte-icon\\n            class=\\"icon\\"\\n            [name]=\\"isChecked() ? \'check\' : \'close\'\\"\\n            [size]=\\"16\\"\\n            (click)=\\"handleClick($event)\\"\\n            ></rte-icon>\\n        }\\n    </div>\\n    @if (showLabel() && label()) {\\n        <label\\n            class=\\"switch-label\\"\\n            [for]=\\"label()\\"\\n        >\\n        {{ label() }}\\n    </label>\\n    }\\n</div>"},{"name":"TabComponent","id":"component-TabComponent-78d1cfe072a55347a360fa2fb1fbc0044ecf7262a85def87b356b3bd74d517ce48cfa4fd63f5612435047adfa1d2d9b04139c9b8a2f3fa7a5a26ad08f5f9726a","file":"projects/ds-rte-lib/src/lib/components/tab/tab.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-tab","styleUrls":[],"styles":[],"templateUrl":["./tab.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"alignment","defaultValue":"\\"start\\"","deprecated":false,"deprecationMessage":"","type":"TabAlignment","indexKey":"","optional":false,"description":"","line":44,"modifierKind":[148],"required":false},{"name":"compactSpacing","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"TabProps[\\"compactSpacing\\"]","indexKey":"","optional":false,"description":"","line":48,"modifierKind":[148],"required":false},{"name":"direction","defaultValue":"\\"horizontal\\"","deprecated":false,"deprecationMessage":"","type":"Direction","indexKey":"","optional":false,"description":"","line":45,"modifierKind":[148],"required":false},{"name":"inverted","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":50,"modifierKind":[148],"required":false},{"name":"options","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"TabProps[\\"options\\"]","indexKey":"","optional":false,"description":"","line":46,"modifierKind":[148],"required":false},{"name":"overflowType","defaultValue":"\\"scrollable\\"","deprecated":false,"deprecationMessage":"","type":"TabProps[\\"overflowType\\"]","indexKey":"","optional":false,"description":"","line":49,"modifierKind":[148],"required":false},{"name":"selectedTabId","deprecated":false,"deprecationMessage":"","type":"TabProps[\\"selectedTabId\\"]","indexKey":"","optional":false,"description":"","line":47,"modifierKind":[148],"required":false}],"outputsClass":[{"name":"change","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":75,"modifierKind":[148],"required":false}],"propertiesClass":[{"name":"canScrollBackward","defaultValue":"computed(() => {\\n    return this.isOverflowingLeft() || this.isOverflowingTop();\\n  })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":83,"modifierKind":[148]},{"name":"canScrollForward","defaultValue":"computed(() => {\\n    return this.isOverflowingRight() || this.isOverflowingBottom();\\n  })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":87,"modifierKind":[148]},{"name":"computeScrollableSignals","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":256,"modifierKind":[123]},{"name":"containerRef","defaultValue":"viewChild<ElementRef<HTMLDivElement>>(\\"tabList\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":58,"modifierKind":[148]},{"name":"displayBadge","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":104},{"name":"dropdownFilteredOptions","defaultValue":"computed(() => {\\n    return this.options().filter((option) => option.id !== this.selectedTabId()) as DropdownItemConfig[];\\n  })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":100,"modifierKind":[148]},{"name":"focusItem","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":200,"modifierKind":[123]},{"name":"getTabItem","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":196,"modifierKind":[123]},{"name":"hoverIndicatorRefs","defaultValue":"viewChildren<ElementRef<HTMLDivElement>>(\\"hoverIndicator\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":59,"modifierKind":[148]},{"name":"hoverIndicatorStyle","defaultValue":"signal<{\\n    width?: number;\\n    left?: number;\\n    top?: number;\\n    height?: number;\\n    opacity?: number;\\n  } | null>(null)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":67,"modifierKind":[148]},{"name":"isHorizontal","defaultValue":"computed(\\n    () => this.direction() === \\"horizontal\\" && (this.isOverflowingRight() || this.isOverflowingLeft()),\\n  )","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":91,"modifierKind":[148]},{"name":"isOverflowingBottom","defaultValue":"signal(false)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":81,"modifierKind":[123,148]},{"name":"isOverflowingLeft","defaultValue":"signal(false)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":78,"modifierKind":[123,148]},{"name":"isOverflowingRight","defaultValue":"signal(false)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":79,"modifierKind":[123,148]},{"name":"isOverflowingTop","defaultValue":"signal(false)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":80,"modifierKind":[123,148]},{"name":"isScrollable","defaultValue":"signal(false)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":77,"modifierKind":[148]},{"name":"onClickTabItem","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":167},{"name":"onKeydownTabItem","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":150},{"name":"selectedTab","defaultValue":"computed(() => {\\n    return this.options().find((option) => option.id === this.selectedTabId());\\n  })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":97,"modifierKind":[148]},{"name":"selectedTabRef","defaultValue":"computed(() => {\\n    const idx = this.options().findIndex((opt) => opt.id === this.selectedTabId());\\n    const tabItem = this.tabItemRefs()[idx];\\n    return tabItem;\\n  })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":61,"modifierKind":[148]},{"name":"shouldDisplayDropdown","defaultValue":"computed(() => this.overflowType() === \\"dropdown\\" && this.isHorizontal())","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":95,"modifierKind":[148]},{"name":"sliderHeight","defaultValue":"signal(0)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":55,"modifierKind":[148]},{"name":"sliderLeft","defaultValue":"signal(0)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":52,"modifierKind":[148]},{"name":"sliderTop","defaultValue":"signal(0)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":54,"modifierKind":[148]},{"name":"sliderWidth","defaultValue":"signal(0)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":53,"modifierKind":[148]},{"name":"tabItemRefs","defaultValue":"viewChildren<TabItemComponent>(\\"tabItem\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":57,"modifierKind":[148]},{"name":"tabItemSelectedIndicatorStyle","defaultValue":"computed(() => ({\\n    left: `${this.shouldDisplayDropdown() ? 0 : this.sliderLeft()}px`,\\n    top: `${this.sliderTop()}px`,\\n    width: `${this.sliderWidth() + (this.shouldDisplayDropdown() ? 32 : 0)}px`,\\n    height: `${this.sliderHeight()}px`,\\n  }))","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":116,"modifierKind":[148]}],"methodsClass":[{"name":"computeIndicatorStyle","args":[{"name":"tabItem","type":"HTMLElement","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"{ width: any; left: any; top: any; height?: undefined; } | { left: number; top: any; height: any; width: number; }","typeParameters":[],"line":220,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"tabItem","type":"HTMLElement","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"computeIsOverflowingBottom","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":301,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"computeIsOverflowingLeft","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":277,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"computeIsOverflowingRight","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":285,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"computeIsOverflowingTop","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":294,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"computeIsScrollable","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":264,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"computeNextItemIndex","args":[{"name":"currentIndex","type":"number","deprecated":false,"deprecationMessage":""},{"name":"totalItems","type":"number","deprecated":false,"deprecationMessage":""},{"name":"direction","type":"\\"next\\" | \\"previous\\"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"number","typeParameters":[],"line":216,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"currentIndex","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"totalItems","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"direction","type":"\\"next\\" | \\"previous\\"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isSelected","args":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":112,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":123,"deprecated":false,"deprecationMessage":""},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":144,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":136,"deprecated":false,"deprecationMessage":""},{"name":"scrollBackward","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":182,"deprecated":false,"deprecationMessage":""},{"name":"scrollForward","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":189,"deprecated":false,"deprecationMessage":""},{"name":"updateSelectedTabItemIndicator","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":237,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"TabItemComponent","type":"component"},{"name":"IconButtonComponent","type":"component"},{"name":"DropdownModule","type":"module"},{"name":"IconComponent","type":"component"},{"name":"BadgeComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport {\\n  ChangeDetectionStrategy,\\n  Component,\\n  input,\\n  computed,\\n  signal,\\n  viewChildren,\\n  ElementRef,\\n  SimpleChanges,\\n  output,\\n  AfterViewInit,\\n  OnChanges,\\n  viewChild,\\n  OnDestroy,\\n} from \\"@angular/core\\";\\nimport { Direction } from \\"@design-system-rte/core/components/common/common-types\\";\\nimport { TabAlignment, TabItemProps, TabProps } from \\"@design-system-rte/core/components/tab/tab.interface\\";\\nimport { scrollToSelectedTab } from \\"@design-system-rte/core/components/tab/tab.utils\\";\\nimport {\\n  ARROW_DOWN_KEY,\\n  ARROW_LEFT_KEY,\\n  ARROW_RIGHT_KEY,\\n  ARROW_UP_KEY,\\n} from \\"@design-system-rte/core/constants/keyboard/keyboard.constants\\";\\n\\nimport { BadgeComponent } from \\"../badge/badge.component\\";\\nimport { DropdownModule } from \\"../dropdown\\";\\nimport { DropdownItemConfig } from \\"../dropdown/dropdown-item/dropdown-item.component\\";\\nimport { IconComponent } from \\"../icon/icon.component\\";\\nimport { IconButtonComponent } from \\"../icon-button/icon-button.component\\";\\n\\nimport { TabItemComponent } from \\"./tab-item/tab-item.component\\";\\n\\n@Component({\\n  selector: \\"rte-tab\\",\\n  imports: [CommonModule, TabItemComponent, IconButtonComponent, DropdownModule, IconComponent, BadgeComponent],\\n  standalone: true,\\n  templateUrl: \\"./tab.component.html\\",\\n  styleUrl: \\"./tab.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class TabComponent implements AfterViewInit, OnChanges, OnDestroy {\\n  readonly alignment = input<TabAlignment>(\\"start\\");\\n  readonly direction = input<Direction>(\\"horizontal\\");\\n  readonly options = input<TabProps[\\"options\\"]>([]);\\n  readonly selectedTabId = input<TabProps[\\"selectedTabId\\"]>();\\n  readonly compactSpacing = input<TabProps[\\"compactSpacing\\"]>(false);\\n  readonly overflowType = input<TabProps[\\"overflowType\\"]>(\\"scrollable\\");\\n  readonly inverted = input<boolean>(false);\\n\\n  readonly sliderLeft = signal(0);\\n  readonly sliderWidth = signal(0);\\n  readonly sliderTop = signal(0);\\n  readonly sliderHeight = signal(0);\\n\\n  readonly tabItemRefs = viewChildren<TabItemComponent>(\\"tabItem\\");\\n  readonly containerRef = viewChild<ElementRef<HTMLDivElement>>(\\"tabList\\");\\n  readonly hoverIndicatorRefs = viewChildren<ElementRef<HTMLDivElement>>(\\"hoverIndicator\\");\\n\\n  readonly selectedTabRef = computed(() => {\\n    const idx = this.options().findIndex((opt) => opt.id === this.selectedTabId());\\n    const tabItem = this.tabItemRefs()[idx];\\n    return tabItem;\\n  });\\n\\n  readonly hoverIndicatorStyle = signal<{\\n    width?: number;\\n    left?: number;\\n    top?: number;\\n    height?: number;\\n    opacity?: number;\\n  } | null>(null);\\n\\n  readonly change = output<string>();\\n\\n  readonly isScrollable = signal(false);\\n  private readonly isOverflowingLeft = signal(false);\\n  private readonly isOverflowingRight = signal(false);\\n  private readonly isOverflowingTop = signal(false);\\n  private readonly isOverflowingBottom = signal(false);\\n\\n  readonly canScrollBackward = computed(() => {\\n    return this.isOverflowingLeft() || this.isOverflowingTop();\\n  });\\n\\n  readonly canScrollForward = computed(() => {\\n    return this.isOverflowingRight() || this.isOverflowingBottom();\\n  });\\n\\n  readonly isHorizontal = computed(\\n    () => this.direction() === \\"horizontal\\" && (this.isOverflowingRight() || this.isOverflowingLeft()),\\n  );\\n\\n  readonly shouldDisplayDropdown = computed(() => this.overflowType() === \\"dropdown\\" && this.isHorizontal());\\n\\n  readonly selectedTab = computed(() => {\\n    return this.options().find((option) => option.id === this.selectedTabId());\\n  });\\n  readonly dropdownFilteredOptions = computed(() => {\\n    return this.options().filter((option) => option.id !== this.selectedTabId()) as DropdownItemConfig[];\\n  });\\n\\n  displayBadge = (option: TabItemProps): boolean => {\\n    return (\\n      !!option.showBadge ||\\n      (option.badgeCount !== undefined && option.badgeCount > 0 && option.badgeContent === \\"number\\") ||\\n      (option.badgeContent === \\"icon\\" && !!option.badgeIcon)\\n    );\\n  };\\n\\n  isSelected(id: string): boolean {\\n    return this.selectedTabId() === id;\\n  }\\n\\n  readonly tabItemSelectedIndicatorStyle = computed(() => ({\\n    left: `${this.shouldDisplayDropdown() ? 0 : this.sliderLeft()}px`,\\n    top: `${this.sliderTop()}px`,\\n    width: `${this.sliderWidth() + (this.shouldDisplayDropdown() ? 32 : 0)}px`,\\n    height: `${this.sliderHeight()}px`,\\n  }));\\n\\n  ngAfterViewInit() {\\n    this.updateSelectedTabItemIndicator();\\n    this.computeScrollableSignals();\\n    window.addEventListener(\\"resize\\", this.updateSelectedTabItemIndicator.bind(this));\\n    window.addEventListener(\\"resize\\", this.computeScrollableSignals.bind(this));\\n    if (this.containerRef()) {\\n      this.containerRef()?.nativeElement.addEventListener(\\"scroll\\", this.computeScrollableSignals.bind(this));\\n    }\\n    this.hoverIndicatorRefs().forEach((hoverIndicator) => {\\n      hoverIndicator.nativeElement.style.opacity = \\"0\\";\\n    });\\n  }\\n\\n  ngOnDestroy() {\\n    window.removeEventListener(\\"resize\\", this.updateSelectedTabItemIndicator.bind(this));\\n    window.removeEventListener(\\"resize\\", this.computeScrollableSignals.bind(this));\\n    if (this.containerRef()) {\\n      this.containerRef()?.nativeElement.removeEventListener(\\"scroll\\", this.computeScrollableSignals.bind(this));\\n    }\\n  }\\n\\n  ngOnChanges(changes: SimpleChanges): void {\\n    if (changes[\\"selectedTabId\\"]) {\\n      this.updateSelectedTabItemIndicator();\\n    }\\n  }\\n\\n  onKeydownTabItem = (event: KeyboardEvent) => {\\n    const isVertical = this.direction() === \\"vertical\\";\\n\\n    const isDownKeyPressed = isVertical && event.key === ARROW_DOWN_KEY;\\n    const isUpKeyPressed = isVertical && event.key === ARROW_UP_KEY;\\n    const isRightKeyPressed = !isVertical && event.key === ARROW_RIGHT_KEY;\\n    const isLeftKeyPressed = !isVertical && event.key === ARROW_LEFT_KEY;\\n\\n    const isArrowNext = isDownKeyPressed || isRightKeyPressed;\\n    const isArrowPrev = isUpKeyPressed || isLeftKeyPressed;\\n\\n    if (isArrowNext || isArrowPrev) {\\n      event.preventDefault();\\n      this.focusItem(isArrowNext ? \\"next\\" : \\"previous\\");\\n    }\\n  };\\n\\n  onClickTabItem = (id: string) => {\\n    if (id !== this.selectedTabId()) {\\n      this.change.emit(id);\\n      if (!this.shouldDisplayDropdown()) {\\n        const newTab = this.getTabItem(id)?.tabItemRef()?.nativeElement;\\n        if (newTab) {\\n          const container = this.containerRef()?.nativeElement;\\n          if (container) {\\n            scrollToSelectedTab(newTab, container, this.direction());\\n          }\\n        }\\n      }\\n    }\\n  };\\n\\n  scrollBackward() {\\n    if (this.containerRef()?.nativeElement) {\\n      const scrollObject = this.direction() === \\"horizontal\\" ? { left: -300 } : { top: -300 };\\n      this.containerRef()?.nativeElement.scrollBy({ ...scrollObject, behavior: \\"smooth\\" });\\n    }\\n  }\\n\\n  scrollForward() {\\n    if (this.containerRef() && this.containerRef()?.nativeElement) {\\n      const scrollObject = this.direction() === \\"horizontal\\" ? { left: 300 } : { top: 300 };\\n      this.containerRef()?.nativeElement.scrollBy({ ...scrollObject, behavior: \\"smooth\\" });\\n    }\\n  }\\n\\n  private getTabItem = (id: string) => {\\n    return this.tabItemRefs().find((tab) => tab.option()?.id === id);\\n  };\\n\\n  private focusItem = (direction: \\"next\\" | \\"previous\\") => {\\n    const currentIndex = this.tabItemRefs().findIndex((tab) => tab === this.selectedTabRef());\\n    const maxIterations = this.tabItemRefs().length;\\n    let newIndex = this.computeNextItemIndex(currentIndex, maxIterations, direction);\\n    let counter = 0;\\n    while (\\n      this.tabItemRefs()[newIndex].tabItemRef()?.nativeElement.getAttribute(\\"data-disabled\\") === \\"true\\" &&\\n      counter < maxIterations\\n    ) {\\n      newIndex = this.computeNextItemIndex(newIndex, maxIterations, direction);\\n      counter++;\\n    }\\n    this.tabItemRefs()[newIndex].tabItemRef()?.nativeElement.focus();\\n    this.tabItemRefs()[newIndex].tabItemRef()?.nativeElement.click();\\n  };\\n\\n  private computeNextItemIndex(currentIndex: number, totalItems: number, direction: \\"next\\" | \\"previous\\") {\\n    return direction === \\"next\\" ? (currentIndex + 1) % totalItems : (currentIndex - 1 + totalItems) % totalItems;\\n  }\\n\\n  private computeIndicatorStyle(tabItem: HTMLElement) {\\n    if (this.direction() === \\"horizontal\\") {\\n      return {\\n        width: tabItem.offsetWidth,\\n        left: tabItem.offsetLeft,\\n        top: tabItem.offsetTop + tabItem.offsetHeight,\\n      };\\n    } else {\\n      return {\\n        left: 0,\\n        top: tabItem.offsetTop,\\n        height: tabItem.offsetHeight,\\n        width: 2,\\n      };\\n    }\\n  }\\n\\n  private updateSelectedTabItemIndicator() {\\n    const idx = this.options().findIndex((opt) => opt.id === this.selectedTabId());\\n    const tabItem = this.tabItemRefs()[idx];\\n    if (tabItem?.tabItemRef) {\\n      if (tabItem.option()?.disabled) {\\n        return;\\n      }\\n      const tabItemRef = tabItem.tabItemRef?.();\\n      if (tabItemRef && tabItemRef.nativeElement) {\\n        const tabItemElement = tabItemRef.nativeElement;\\n        const indicatorStyle = this.computeIndicatorStyle(tabItemElement);\\n        this.sliderHeight.set(indicatorStyle.height ?? 2);\\n        this.sliderTop.set(indicatorStyle.top);\\n        this.sliderWidth.set(indicatorStyle.width ?? 2);\\n        this.sliderLeft.set(indicatorStyle.left);\\n      }\\n    }\\n  }\\n\\n  private computeScrollableSignals = () => {\\n    this.computeIsScrollable();\\n    this.computeIsOverflowingLeft();\\n    this.computeIsOverflowingRight();\\n    this.computeIsOverflowingTop();\\n    this.computeIsOverflowingBottom();\\n  };\\n\\n  private computeIsScrollable() {\\n    if (this.containerRef()?.nativeElement) {\\n      const containerNativeElement = this.containerRef()?.nativeElement;\\n      if (containerNativeElement) {\\n        this.isScrollable.set(\\n          containerNativeElement.offsetWidth < containerNativeElement.scrollWidth ||\\n            containerNativeElement.offsetHeight < containerNativeElement.scrollHeight,\\n        );\\n      }\\n    }\\n    return false;\\n  }\\n\\n  private computeIsOverflowingLeft() {\\n    const containerNativeElement = this.containerRef()?.nativeElement;\\n    if (containerNativeElement) {\\n      const isOverFlowingLeft = containerNativeElement.scrollLeft > 0;\\n      this.isOverflowingLeft.set(this.isScrollable() && isOverFlowingLeft);\\n    }\\n  }\\n\\n  private computeIsOverflowingRight() {\\n    const containerNativeElement = this.containerRef()?.nativeElement;\\n    if (containerNativeElement) {\\n      const isOverflowingRight =\\n        containerNativeElement.scrollWidth - containerNativeElement.clientWidth - containerNativeElement.scrollLeft > 0;\\n      this.isOverflowingRight.set(this.isScrollable() && isOverflowingRight);\\n    }\\n  }\\n\\n  private computeIsOverflowingTop() {\\n    const containerNativeElement = this.containerRef()?.nativeElement;\\n    if (containerNativeElement) {\\n      const isOverFlowingTop = containerNativeElement.scrollTop > 0;\\n      this.isOverflowingTop.set(this.isScrollable() && isOverFlowingTop);\\n    }\\n  }\\n  private computeIsOverflowingBottom() {\\n    const containerNativeElement = this.containerRef()?.nativeElement;\\n    if (containerNativeElement) {\\n      const isOverflowingBottom =\\n        containerNativeElement.scrollHeight - containerNativeElement.clientHeight - containerNativeElement.scrollTop >\\n        0;\\n      this.isOverflowingBottom.set(this.isScrollable() && isOverflowingBottom);\\n    }\\n  }\\n}\\n","styleUrl":"./tab.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"implements":["AfterViewInit","OnChanges","OnDestroy"],"templateData":"<div class=\\"rte-tab-container\\" [attr.data-direction]=\\"direction()\\">\\n  <div\\n    class=\\"rte-tab-border-vertical\\"\\n    aria-hidden=\\"true\\"\\n    role=\\"presentation\\"\\n    [attr.data-direction]=\\"direction()\\"\\n  ></div>\\n  <div\\n    [ngStyle]=\\"{\\n      position: \'relative\',\\n      display: \'flex\',\\n      \'align-items\': \'center\',\\n      \'flex-direction\': direction() === \'horizontal\' ? \'row\' : \'column\',\\n    }\\"\\n  >\\n    <rte-icon-button\\n      *ngIf=\\"isScrollable() && !shouldDisplayDropdown()\\"\\n      aria-label=\\"Previous tabs\\"\\n      variant=\\"transparent\\"\\n      [name]=\\"\\n        direction() === \'horizontal\' ? \'arrow-chevron-left\' : \'arrow-chevron-up\'\\n      \\"\\n      [ngStyle]=\\"{\\n        opacity: canScrollBackward() ? \'1\' : \'0\',\\n        \'pointer-events\': canScrollBackward() ? \'auto\' : \'none\',\\n      }\\"\\n      (click)=\\"scrollBackward()\\"\\n    />\\n    <div\\n      #tabList\\n      role=\\"tablist\\"\\n      aria-label=\\"Sample Tabs\\"\\n      class=\\"rte-tab\\"\\n      [attr.data-alignment]=\\"shouldDisplayDropdown() ? \'start\' : alignment()\\"\\n      [attr.data-direction]=\\"direction()\\"\\n      [attr.data-overflow-type]=\\"overflowType()\\"\\n    >\\n      <span\\n        class=\\"rte-tab-selected-indicator\\"\\n        [ngStyle]=\\"tabItemSelectedIndicatorStyle()\\"\\n      ></span>      \\n      <div *ngIf=\\"shouldDisplayDropdown() && options().length\\" rteDropdown [rteDropdownOffset]=\\"10\\" (menuEvent)=\\"onClickTabItem($event.id)\\">\\n        <button rteDropdownTrigger\\n          class=\\"rte-tab-dropdown-button\\"\\n          [attr.data-inverted]=\\"inverted()\\"\\n          [attr.data-overflow-type]=\\"overflowType()\\" \\n        >\\n          <rte-icon *ngIf=\\"selectedTab()?.icon\\" appearance=\\"filled\\" [name]=\\"selectedTab()?.icon!\\"></rte-icon>\\n          <span *ngIf=\\"selectedTab()?.label\\">{{ selectedTab()?.label }}</span>\\n          <rte-badge *ngIf=\\"selectedTab()?.badgeCount && selectedTab()?.badgeContent === \'number\'\\" [badgeType]=\\"selectedTab()?.badgeType!\\" [badgeContent]=\\"selectedTab()?.badgeContent!\\" [count]=\\"selectedTab()?.badgeCount\\" [simpleBadge]=\\"true\\"></rte-badge>\\n          <rte-icon name=\\"arrow-chevron-down\\" appearance=\\"outlined\\"></rte-icon>\\n        </button>\\n        <rte-dropdown-menu [items]=\\"dropdownFilteredOptions()\\" />\\n      </div>\\n      <ng-container *ngFor=\\"let option of options(); let idx = index\\">\\n        <rte-tab-item\\n          #tabItem\\n          [option]=\\"option\\"\\n          [direction]=\\"direction()\\"\\n          [compactSpacing]=\\"compactSpacing()\\"\\n          [isSelected]=\\"isSelected(option.id)\\"\\n          [inverted]=\\"inverted()\\"\\n          [attr.data-hidden]=\\"shouldDisplayDropdown()\\"\\n          [isHidden]=\\"shouldDisplayDropdown()\\"\\n          (keydown)=\\"onKeydownTabItem($event)\\"\\n          (click)=\\"onClickTabItem(option.id)\\"\\n        ></rte-tab-item>\\n      </ng-container>\\n    </div>\\n    <rte-icon-button\\n      *ngIf=\\"isScrollable() && !shouldDisplayDropdown()\\"\\n      aria-label=\\"Next tabs\\"\\n      variant=\\"transparent\\"\\n      [name]=\\"\\n        direction() === \'horizontal\'\\n          ? \'arrow-chevron-right\'\\n          : \'arrow-chevron-down\'\\n      \\"\\n      [ngStyle]=\\"{\\n        opacity: canScrollForward() ? \'1\' : \'0\',\\n        \'pointer-events\': canScrollForward() ? \'auto\' : \'none\',\\n      }\\"\\n      (click)=\\"scrollForward()\\"\\n    />\\n  </div>\\n  <div\\n    class=\\"rte-tab-border-horizontal\\"\\n    aria-hidden=\\"true\\"\\n    role=\\"presentation\\"\\n    [attr.data-direction]=\\"direction()\\"\\n    [attr.data-compact-spacing]=\\"compactSpacing()\\"\\n    [attr.data-scrollable]=\\"isScrollable() && overflowType() === \'scrollable\'\\"\\n  ></div>\\n</div>\\n"},{"name":"TabItemComponent","id":"component-TabItemComponent-485f15de13263165373bdf51c1aab10c4afd584c5ee3578d63648ec4347134078369a1ab3d235c552951d7531c301a58f9cf24c0f7a3d934c0bd4ba21d93dfee","file":"projects/ds-rte-lib/src/lib/components/tab/tab-item/tab-item.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-tab-item","styleUrls":[],"styles":[],"templateUrl":["./tab-item.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"compactSpacing","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":30,"modifierKind":[148],"required":false},{"name":"direction","defaultValue":"\\"horizontal\\"","deprecated":false,"deprecationMessage":"","type":"\\"horizontal\\" | \\"vertical\\"","indexKey":"","optional":false,"description":"","line":28,"modifierKind":[148],"required":false},{"name":"handleKeydown","deprecated":false,"deprecationMessage":"","type":"() => void","indexKey":"","optional":false,"description":"","line":33,"modifierKind":[148],"required":false},{"name":"inverted","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":34,"modifierKind":[148],"required":false},{"name":"isHidden","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":35,"modifierKind":[148],"required":false},{"name":"isSelected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":31,"modifierKind":[148],"required":false},{"name":"option","deprecated":false,"deprecationMessage":"","type":"TabItemProps","indexKey":"","optional":false,"description":"","line":29,"modifierKind":[148],"required":false}],"outputsClass":[{"name":"click","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":32,"modifierKind":[148],"required":false}],"propertiesClass":[{"name":"computeHoverIndicatorStyle","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":115,"modifierKind":[123]},{"name":"displayBadge","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":47,"modifierKind":[148]},{"name":"hoverIndicatorHeight","defaultValue":"computed(() => {\\n    return `${this.hoverIndicatorStyle()?.height}px`;\\n  })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":54,"modifierKind":[148]},{"name":"hoverIndicatorLeft","defaultValue":"computed(() => {\\n    return `${this.hoverIndicatorStyle()?.left}px`;\\n  })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":57,"modifierKind":[148]},{"name":"hoverIndicatorOpacity","defaultValue":"computed(() => {\\n    return this.hoverIndicatorStyle()?.opacity ?? 0;\\n  })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":63,"modifierKind":[148]},{"name":"hoverIndicatorStyle","defaultValue":"signal<{\\n    width?: number;\\n    left?: number;\\n    top?: number;\\n    height?: number;\\n    opacity?: number;\\n  } | null>(null)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":39,"modifierKind":[148]},{"name":"hoverIndicatorTop","defaultValue":"computed(() => {\\n    return `${this.hoverIndicatorStyle()?.top}px`;\\n  })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":60,"modifierKind":[148]},{"name":"hoverIndicatorWidth","defaultValue":"computed(() => {\\n    return `${this.hoverIndicatorStyle()?.width}px`;\\n  })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":51,"modifierKind":[148]},{"name":"tabItemRef","defaultValue":"viewChild<ElementRef<HTMLButtonElement>>(\\"tabItem\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":37,"modifierKind":[148]}],"methodsClass":[{"name":"handleMouseHover","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":99,"deprecated":false,"deprecationMessage":""},{"name":"handleMouseOut","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":108,"deprecated":false,"deprecationMessage":""},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":""},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":79,"deprecated":false,"deprecationMessage":""},{"name":"onClickTabItem","args":[{"name":"event","type":"MouseEvent","deprecated":false,"deprecationMessage":""},{"name":"id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":87,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"MouseEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconComponent","type":"component"},{"name":"BadgeComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport {\\n  ChangeDetectionStrategy,\\n  Component,\\n  input,\\n  signal,\\n  ElementRef,\\n  AfterViewInit,\\n  viewChild,\\n  output,\\n  OnDestroy,\\n  computed,\\n} from \\"@angular/core\\";\\nimport { TabItemProps } from \\"@design-system-rte/core/components/tab/tab.interface\\";\\n\\nimport { BadgeComponent } from \\"../../badge/badge.component\\";\\nimport { IconComponent } from \\"../../icon/icon.component\\";\\n\\n@Component({\\n  selector: \\"rte-tab-item\\",\\n  imports: [CommonModule, IconComponent, BadgeComponent],\\n  standalone: true,\\n  templateUrl: \\"./tab-item.component.html\\",\\n  styleUrl: \\"./tab-item.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class TabItemComponent implements AfterViewInit, OnDestroy {\\n  readonly direction = input<\\"horizontal\\" | \\"vertical\\">(\\"horizontal\\");\\n  readonly option = input<TabItemProps>();\\n  readonly compactSpacing = input<boolean>();\\n  readonly isSelected = input<boolean>(false);\\n  readonly click = output<string>();\\n  readonly handleKeydown = input<() => void>();\\n  readonly inverted = input<boolean>(false);\\n  readonly isHidden = input<boolean>(false);\\n\\n  readonly tabItemRef = viewChild<ElementRef<HTMLButtonElement>>(\\"tabItem\\");\\n\\n  readonly hoverIndicatorStyle = signal<{\\n    width?: number;\\n    left?: number;\\n    top?: number;\\n    height?: number;\\n    opacity?: number;\\n  } | null>(null);\\n\\n  readonly displayBadge = (option: TabItemProps): boolean => {\\n    return !!(option.badgeContent || option.badgeType || option.badgeIcon || option.badgeCount);\\n  };\\n\\n  readonly hoverIndicatorWidth = computed(() => {\\n    return `${this.hoverIndicatorStyle()?.width}px`;\\n  });\\n  readonly hoverIndicatorHeight = computed(() => {\\n    return `${this.hoverIndicatorStyle()?.height}px`;\\n  });\\n  readonly hoverIndicatorLeft = computed(() => {\\n    return `${this.hoverIndicatorStyle()?.left}px`;\\n  });\\n  readonly hoverIndicatorTop = computed(() => {\\n    return `${this.hoverIndicatorStyle()?.top}px`;\\n  });\\n  readonly hoverIndicatorOpacity = computed(() => {\\n    return this.hoverIndicatorStyle()?.opacity ?? 0;\\n  });\\n\\n  ngAfterViewInit() {\\n    this.computeHoverIndicatorStyle();\\n    if (this.tabItemRef && this.tabItemRef()?.nativeElement) {\\n      if (this.option()?.disabled) return;\\n      window.addEventListener(\\"resize\\", this.computeHoverIndicatorStyle);\\n      const parent = this.tabItemRef()?.nativeElement.parentElement?.parentElement;\\n      if (parent) {\\n        parent.addEventListener(\\"scroll\\", this.computeHoverIndicatorStyle);\\n      }\\n    }\\n  }\\n\\n  ngOnDestroy() {\\n    const parent = this.tabItemRef()?.nativeElement.parentElement?.parentElement;\\n    window.removeEventListener(\\"resize\\", this.computeHoverIndicatorStyle);\\n    if (parent) {\\n      parent.removeEventListener(\\"scroll\\", this.computeHoverIndicatorStyle);\\n    }\\n  }\\n\\n  onClickTabItem(event: MouseEvent, id: string): void {\\n    this.hoverIndicatorStyle.set({\\n      ...this.hoverIndicatorStyle(),\\n      opacity: 0,\\n    });\\n    if (!this.option()?.disabled) {\\n      this.click.emit(id);\\n    } else {\\n      event.stopPropagation();\\n    }\\n  }\\n\\n  handleMouseHover() {\\n    if (!this.isSelected()) {\\n      this.hoverIndicatorStyle.set({\\n        ...this.hoverIndicatorStyle(),\\n        opacity: 1,\\n      });\\n    }\\n  }\\n\\n  handleMouseOut() {\\n    this.hoverIndicatorStyle.set({\\n      ...this.hoverIndicatorStyle(),\\n      opacity: 0,\\n    });\\n  }\\n\\n  private computeHoverIndicatorStyle = () => {\\n    if (this.direction() === \\"horizontal\\") {\\n      this.hoverIndicatorStyle.set({\\n        width: this.tabItemRef()?.nativeElement.offsetWidth,\\n        height: 2,\\n        left: this.tabItemRef()?.nativeElement.offsetLeft,\\n        top: this.tabItemRef()\\n          ? this.tabItemRef()!.nativeElement.offsetTop + this.tabItemRef()!.nativeElement.offsetHeight\\n          : 0,\\n        opacity: 0,\\n      });\\n    } else {\\n      this.hoverIndicatorStyle.set({\\n        width: 2,\\n        height: this.tabItemRef()?.nativeElement.offsetHeight,\\n        left: this.tabItemRef()?.nativeElement.offsetLeft && this.tabItemRef()!.nativeElement.offsetLeft - 4,\\n        top: this.tabItemRef()!.nativeElement.offsetTop,\\n        opacity: 0,\\n      });\\n    }\\n  };\\n}\\n","styleUrl":"./tab-item.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"implements":["AfterViewInit","OnDestroy"],"templateData":"<button\\n  #tabItem\\n  class=\\"rte-tabitem\\"\\n  role=\\"tab\\"\\n  [id]=\\"option()?.id\\"\\n  [attr.aria-selected]=\\"isSelected()\\"\\n  [attr.aria-controls]=\\"option()?.panelId\\"\\n  [tabIndex]=\\"isSelected() ? 0 : -1\\"\\n  [attr.data-selected]=\\"isSelected()\\"\\n  [attr.data-inverted]=\\"inverted()\\"\\n  [attr.data-compact-spacing]=\\"compactSpacing()\\"\\n  [attr.data-disabled]=\\"option()?.disabled\\"\\n  [attr.data-hidden]=\\"isHidden()\\"\\n  (click)=\\"onClickTabItem($event, option()?.id || \'\')\\"\\n  (mouseover)=\\"handleMouseHover()\\"\\n  (mouseout)=\\"handleMouseOut()\\"\\n  (keydown)=\\"handleKeydown()\\"\\n>\\n  <rte-icon\\n    *ngIf=\\"option()?.icon\\"\\n    [name]=\\"option()?.icon || \'\'\\"\\n    [appearance]=\\"isSelected() ? \'filled\' : \'outlined\'\\"\\n  />\\n  <span *ngIf=\\"option()?.label\\">{{ option()?.label }}</span>\\n  <rte-badge\\n    *ngIf=\\"displayBadge(option()!)\\"\\n    [simpleBadge]=\\"true\\"\\n    [badgeContent]=\\"option()?.badgeContent || \'empty\'\\"\\n    [badgeType]=\\"option()?.badgeType || \'neutral\'\\"\\n    [icon]=\\"option()?.badgeIcon || \'\'\\"\\n    [count]=\\"option()?.badgeCount\\"\\n  />\\n</button>\\n<span\\n  #hoverIndicator\\n  class=\\"rte-tab-hover-indicator\\"\\n  [attr.data-disabled]=\\"option()?.disabled\\"\\n  [id]=\\"\'tab-hover-indicator\' + option()?.id\\"\\n  [ngStyle]=\\"{\\n    width: hoverIndicatorWidth(),\\n    height: hoverIndicatorHeight(),\\n    left: hoverIndicatorLeft(),\\n    top: hoverIndicatorTop(),\\n    opacity: hoverIndicatorOpacity(),\\n  }\\"\\n></span>\\n"},{"name":"TagComponent","id":"component-TagComponent-33f6897c383fb84098ddccb51ce5c97575a1aa3615ac4ac9914a89a650ebfa69eef8b01ea028c9cdb401264d94aaa4ba90e6cf478a41f0e5f58995d1731cfea2","file":"projects/ds-rte-lib/src/lib/components/tag/tag.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-tag","styleUrls":[],"styles":[],"templateUrl":["./tag.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"color","defaultValue":"\\"brand\\"","deprecated":false,"deprecationMessage":"","type":"TagProps[\\"color\\"]","indexKey":"","optional":false,"description":"","line":20,"modifierKind":[148],"required":false},{"name":"compactSpacing","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":21,"modifierKind":[148],"required":false},{"name":"iconName","deprecated":false,"deprecationMessage":"","type":"RegularIconIdKey | TogglableIconIdKey","indexKey":"","optional":false,"description":"","line":24,"modifierKind":[148],"required":false},{"name":"label","defaultValue":"\\"\\"","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148],"required":false},{"name":"showLeftIcon","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":23,"modifierKind":[148],"required":false},{"name":"status","defaultValue":"\\"success\\"","deprecated":false,"deprecationMessage":"","type":"TagProps[\\"status\\"]","indexKey":"","optional":false,"description":"","line":19,"modifierKind":[148],"required":false},{"name":"tagType","defaultValue":"\\"status\\"","deprecated":false,"deprecationMessage":"","type":"TagProps[\\"tagType\\"]","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[{"name":"computedIconName","defaultValue":"computed(() => {\\n    if (this.tagType() === \\"status\\") {\\n      const statusIconMap: Record<string, RegularIconIdKey | TogglableIconIdKey> = {\\n        success: \\"check-circle\\",\\n        information: \\"info\\",\\n        warning: \\"warning\\",\\n        alert: \\"dangerous\\",\\n      };\\n      const statusValue = this.status();\\n      if (statusValue && statusIconMap[statusValue]) {\\n        return statusIconMap[statusValue];\\n      }\\n    }\\n    return this.iconName() ?? \\"check\\";\\n  })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148]},{"name":"isValidIconName","defaultValue":"computed(() => {\\n    const iconName = this.computedIconName();\\n    return !!iconName && isValidIconName(iconName);\\n  })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":42,"modifierKind":[148]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, input, computed } from \\"@angular/core\\";\\nimport { TagProps } from \\"@design-system-rte/core/components/tag/tag.interface\\";\\n\\nimport { isValidIconName } from \\"../icon/icon-map\\";\\nimport { IconComponent } from \\"../icon/icon.component\\";\\nimport { RegularIconIdKey, TogglableIconIdKey } from \\"../icon/icon.service\\";\\n\\n@Component({\\n  selector: \\"rte-tag\\",\\n  imports: [CommonModule, IconComponent],\\n  standalone: true,\\n  templateUrl: \\"./tag.component.html\\",\\n  styleUrl: \\"./tag.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class TagComponent {\\n  readonly tagType = input<TagProps[\\"tagType\\"]>(\\"status\\");\\n  readonly status = input<TagProps[\\"status\\"]>(\\"success\\");\\n  readonly color = input<TagProps[\\"color\\"]>(\\"brand\\");\\n  readonly compactSpacing = input<boolean>(false);\\n  readonly label = input<string>(\\"\\");\\n  readonly showLeftIcon = input<boolean>(false);\\n  readonly iconName = input<RegularIconIdKey | TogglableIconIdKey>();\\n\\n  readonly computedIconName = computed(() => {\\n    if (this.tagType() === \\"status\\") {\\n      const statusIconMap: Record<string, RegularIconIdKey | TogglableIconIdKey> = {\\n        success: \\"check-circle\\",\\n        information: \\"info\\",\\n        warning: \\"warning\\",\\n        alert: \\"dangerous\\",\\n      };\\n      const statusValue = this.status();\\n      if (statusValue && statusIconMap[statusValue]) {\\n        return statusIconMap[statusValue];\\n      }\\n    }\\n    return this.iconName() ?? \\"check\\";\\n  });\\n\\n  readonly isValidIconName = computed(() => {\\n    const iconName = this.computedIconName();\\n    return !!iconName && isValidIconName(iconName);\\n  });\\n}\\n","styleUrl":"./tag.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<div\\n    class=\\"rte-tag\\"\\n    [attr.data-tag-type]=\\"tagType()\\"\\n    [attr.data-status]=\\"status()\\"\\n    [attr.data-color]=\\"color()\\"\\n    [attr.data-compact-spacing]=\\"compactSpacing()\\"\\n>\\n    <ng-container *ngIf=\\"showLeftIcon() && isValidIconName()\\">\\n        <rte-icon [name]=\\"computedIconName()\\" [size]=\\"16\\"></rte-icon>\\n    </ng-container>\\n    <ng-container *ngIf=\\"label\\">\\n        <label class=\\"tag-label\\">{{ label() }}</label>\\n    </ng-container>\\n</div>"},{"name":"TextareaComponent","id":"component-TextareaComponent-1ac40c9466e63dbcfc77a62c6731dfa27c4d22c1b3a0b19ece51a284ce40ee1c32e3a1941a40db6be2f94a19868e0a50528bb6a5f264b71b9703a42ce0d60192","file":"projects/ds-rte-lib/src/lib/components/textarea/textarea.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[{"name":"TextareaComponent","type":"component"}],"selector":"rte-textarea","styleUrls":[],"styles":[],"templateUrl":["./textarea.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"ariaLabelledby","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string | undefined","indexKey":"","optional":false,"description":"","line":33,"modifierKind":[148],"required":false},{"name":"assistiveTextAppearance","defaultValue":"\\"description\\"","deprecated":false,"deprecationMessage":"","type":"TextareaAssistiveTextAppearance","indexKey":"","optional":false,"description":"","line":38,"modifierKind":[148],"required":false},{"name":"assistiveTextLabel","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string | undefined","indexKey":"","optional":false,"description":"","line":37,"modifierKind":[148],"required":false},{"name":"assistiveTextLink","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string | undefined","indexKey":"","optional":false,"description":"","line":39,"modifierKind":[148],"required":false},{"name":"defaultValue","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string | undefined","indexKey":"","optional":false,"description":"","line":48,"modifierKind":[148],"required":false},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":44,"modifierKind":[148],"required":false},{"name":"id","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string | undefined","indexKey":"","optional":false,"description":"","line":31,"modifierKind":[148],"required":false},{"name":"label","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string | undefined","indexKey":"","optional":false,"description":"","line":34,"modifierKind":[148],"required":false},{"name":"labelId","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string | undefined","indexKey":"","optional":false,"description":"","line":35,"modifierKind":[148],"required":false},{"name":"labelPosition","defaultValue":"\\"top\\"","deprecated":false,"deprecationMessage":"","type":"TextareaLabelPosition","indexKey":"","optional":false,"description":"","line":36,"modifierKind":[148],"required":false},{"name":"maxLength","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"number | undefined","indexKey":"","optional":false,"description":"","line":43,"modifierKind":[148],"required":false},{"name":"name","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string | undefined","indexKey":"","optional":false,"description":"","line":32,"modifierKind":[148],"required":false},{"name":"readOnly","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":45,"modifierKind":[148],"required":false},{"name":"required","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":40,"modifierKind":[148],"required":false},{"name":"resizeable","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean | string","indexKey":"","optional":false,"description":"","line":42,"modifierKind":[148],"required":false},{"name":"rows","defaultValue":"3","deprecated":false,"deprecationMessage":"","type":"number","indexKey":"","optional":false,"description":"","line":47,"modifierKind":[148],"required":false},{"name":"showCounter","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":49,"modifierKind":[148],"required":false},{"name":"showLabelRequirement","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":41,"modifierKind":[148],"required":false},{"name":"value","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string | undefined","indexKey":"","optional":false,"description":"","line":46,"modifierKind":[148],"required":false}],"outputsClass":[{"name":"blur","deprecated":false,"deprecationMessage":"","type":"FocusEvent","indexKey":"","optional":false,"description":"","line":62,"modifierKind":[148],"required":false},{"name":"change","deprecated":false,"deprecationMessage":"","type":"Event","indexKey":"","optional":false,"description":"","line":61,"modifierKind":[148],"required":false}],"propertiesClass":[{"name":"assistiveTextIconSize","defaultValue":"TEXTAREA_ICON_SIZE","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":51,"modifierKind":[148]},{"name":"characterCount","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","indexKey":"","optional":false,"description":"","line":70},{"name":"isAssistiveTextLinkVisible","defaultValue":"computed(\\n    () => this.assistiveTextAppearance() === \\"link\\" && this.assistiveTextLink() !== undefined,\\n  )","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":66,"modifierKind":[148]},{"name":"isCounterVisible","defaultValue":"computed(() => {\\n    return this.showCounter() && this.maxLength();\\n  })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":72,"modifierKind":[148]},{"name":"requirementIndicatorValue","defaultValue":"computed(() =>\\n    this.required()\\n      ? this.showLabelRequirement()\\n        ? TEXTAREA_REQUIREMENT_INDICATOR_VALUE.required\\n        : TEXTAREA_REQUIREMENT_INDICATOR_VALUE.requiredIcon\\n      : TEXTAREA_REQUIREMENT_INDICATOR_VALUE.optional,\\n  )","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":53,"modifierKind":[148]},{"name":"textareaRef","defaultValue":"viewChild<ElementRef<HTMLTextAreaElement>>(\\"textarea\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":64,"modifierKind":[148]}],"methodsClass":[{"name":"onBlur","args":[{"name":"event","type":"FocusEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":82,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"FocusEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onInput","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconComponent","type":"component"},{"name":"LinkComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { Component, input, computed, output, ElementRef, viewChild } from \\"@angular/core\\";\\nimport { NG_VALUE_ACCESSOR } from \\"@angular/forms\\";\\nimport {\\n  TEXTAREA_ICON_SIZE,\\n  TEXTAREA_REQUIREMENT_INDICATOR_VALUE,\\n} from \\"@design-system-rte/core/components/textarea/textarea.constants\\";\\nimport type {\\n  TextareaAssistiveTextAppearance,\\n  TextareaLabelPosition,\\n} from \\"@design-system-rte/core/components/textarea/textarea.interface\\";\\n\\nimport { IconComponent } from \\"../icon/icon.component\\";\\nimport { LinkComponent } from \\"../link/link.component\\";\\n\\n@Component({\\n  selector: \\"rte-textarea\\",\\n  imports: [CommonModule, IconComponent, LinkComponent],\\n  standalone: true,\\n  templateUrl: \\"./textarea.component.html\\",\\n  styleUrl: \\"./textarea.component.scss\\",\\n  providers: [\\n    {\\n      provide: NG_VALUE_ACCESSOR,\\n      useExisting: TextareaComponent,\\n      multi: true,\\n    },\\n  ],\\n})\\nexport class TextareaComponent {\\n  readonly id = input<string | undefined>(undefined);\\n  readonly name = input<string | undefined>(undefined);\\n  readonly ariaLabelledby = input<string | undefined>(undefined);\\n  readonly label = input<string | undefined>(undefined);\\n  readonly labelId = input<string | undefined>(undefined);\\n  readonly labelPosition = input<TextareaLabelPosition>(\\"top\\");\\n  readonly assistiveTextLabel = input<string | undefined>(undefined);\\n  readonly assistiveTextAppearance = input<TextareaAssistiveTextAppearance>(\\"description\\");\\n  readonly assistiveTextLink = input<string | undefined>(undefined);\\n  readonly required = input<boolean>(false);\\n  readonly showLabelRequirement = input<boolean>(false);\\n  readonly resizeable = input<boolean | string>(true);\\n  readonly maxLength = input<number | undefined>(undefined);\\n  readonly disabled = input<boolean>(false);\\n  readonly readOnly = input<boolean>(false);\\n  readonly value = input<string | undefined>(undefined);\\n  readonly rows = input<number>(3);\\n  readonly defaultValue = input<string | undefined>(undefined);\\n  readonly showCounter = input<boolean>(false);\\n\\n  readonly assistiveTextIconSize = TEXTAREA_ICON_SIZE;\\n\\n  readonly requirementIndicatorValue = computed(() =>\\n    this.required()\\n      ? this.showLabelRequirement()\\n        ? TEXTAREA_REQUIREMENT_INDICATOR_VALUE.required\\n        : TEXTAREA_REQUIREMENT_INDICATOR_VALUE.requiredIcon\\n      : TEXTAREA_REQUIREMENT_INDICATOR_VALUE.optional,\\n  );\\n\\n  readonly change = output<Event>();\\n  readonly blur = output<FocusEvent>();\\n\\n  readonly textareaRef = viewChild<ElementRef<HTMLTextAreaElement>>(\\"textarea\\");\\n\\n  readonly isAssistiveTextLinkVisible = computed(\\n    () => this.assistiveTextAppearance() === \\"link\\" && this.assistiveTextLink() !== undefined,\\n  );\\n\\n  characterCount = 0;\\n\\n  readonly isCounterVisible = computed(() => {\\n    return this.showCounter() && this.maxLength();\\n  });\\n\\n  onInput(event: Event) {\\n    const target = event.target as HTMLTextAreaElement;\\n    this.characterCount = target.value.length;\\n    this.change.emit(event);\\n  }\\n\\n  onBlur(event: FocusEvent) {\\n    this.textareaRef()?.nativeElement?.scrollTo({ top: 0 });\\n    this.blur.emit(event);\\n  }\\n}\\n","styleUrl":"./textarea.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<div class=\\"container\\" [attr.data-label-position]=\\"labelPosition()\\"> \\n  <label *ngIf=\\"label() && labelPosition() === \'side\'\\" [attr.data-label-position]=\\"labelPosition()\\" [attr.id]=\\"labelId()\\" [attr.for]=\\"id()\\">{{label()}}<span *ngIf=\\"required() || showLabelRequirement()\\" class=\\"requirement-indicator\\" aria-hidden=\\"true\\" [ngClass]=\\"{\'required\': required(), \'show-label-requirement\': showLabelRequirement() }\\">{{requirementIndicatorValue()}}</span></label>\\n  <div class=\\"top-position-container\\" [attr.data-label-position]=\\"labelPosition()\\">\\n    <div class=\\"header-container\\" [attr.data-label-position]=\\"labelPosition()\\">\\n      <label *ngIf=\\"label() && labelPosition() === \'top\'\\" [attr.id]=\\"labelId()\\" [attr.for]=\\"id()\\">{{label()}}<span *ngIf=\\"required() || showLabelRequirement()\\" class=\\"requirement-indicator\\" aria-hidden=\\"true\\" [ngClass]=\\"{\'required\': required(), \'show-label-requirement\': showLabelRequirement() }\\">{{requirementIndicatorValue()}}</span></label>\\n      <span *ngIf=\\"isCounterVisible()\\" class=\\"character-counter\\">{{ characterCount }}/{{ maxLength() }}</span>\\n    </div>\\n    <div class=\\"textarea-container\\" [attr.data-label-position]=\\"labelPosition()\\">\\n      <textarea\\n      #textarea\\n      class=\\"textarea {{ assistiveTextAppearance() }}\\"\\n      [class.resizeable]=\\"resizeable()\\"\\n      [attr.id]=\\"id()\\"\\n      [attr.name]=\\"name()\\"\\n      [attr.aria-labelledby]=\\"labelId() || ariaLabelledby()\\"\\n      [attr.required]=\\"required() || null\\"\\n      [attr.maxLength]=\\"maxLength() !== undefined ? maxLength() : null\\"\\n      [attr.disabled]=\\"disabled() || null\\"\\n      [attr.readonly]=\\"readOnly() || null\\"\\n      [value]=\\"value() !== undefined ? value() : null\\"\\n      [defaultValue]=\\"defaultValue() !== undefined ? defaultValue() : null\\"\\n      [attr.rows]=\\"rows()\\"\\n      (input)=\\"onInput($event)\\"\\n      (blur)=\\"onBlur($event)\\"\\n      ></textarea>\\n      <rte-link *ngIf=\\"isAssistiveTextLinkVisible()\\" class=\\"assistive-text-link\\" [externalLink]=\\"true\\" [href]=\\"assistiveTextLink() || \'\'\\" [label]=\\"assistiveTextLabel() || \'\'\\">\\n      </rte-link>\\n      <div *ngIf=\\"assistiveTextAppearance() !== \'link\'\\" class=\\"assistive-text {{ assistiveTextAppearance() }}\\" [ngClass]=\\"{\'disabled\' : disabled()}\\">\\n        <rte-icon *ngIf=\\"assistiveTextAppearance() === \'error\'\\" name=\\"error\\" [size]=\\"assistiveTextIconSize\\"></rte-icon>\\n        <rte-icon *ngIf=\\"assistiveTextAppearance() === \'success\'\\" name=\\"check-circle\\" [size]=\\"assistiveTextIconSize\\"></rte-icon>\\n        <span>{{ assistiveTextLabel() }}</span>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n"},{"name":"TextInputComponent","id":"component-TextInputComponent-a3cb18e77b68cc48af37e24d8350d078beab3980426f32aac2231101ed49d0471b1d3e53ba110096b6c6594a49ec262d249e18ee3d57d3bb1494f3d072fda804","file":"projects/ds-rte-lib/src/lib/components/text-input/text-input.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-text-input","styleUrls":[],"styles":[],"templateUrl":["./text-input.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"ariaLabel","defaultValue":"\\"\\"","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":37,"modifierKind":[148],"required":false},{"name":"ariaLabelledby","defaultValue":"\\"\\"","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":39,"modifierKind":[148],"required":false},{"name":"ariaRequired","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":38,"modifierKind":[148],"required":false},{"name":"assistiveAppearance","defaultValue":"\\"description\\"","deprecated":false,"deprecationMessage":"","type":"\\"description\\" | \\"error\\" | \\"success\\" | \\"link\\"","indexKey":"","optional":false,"description":"","line":29,"modifierKind":[148],"required":false},{"name":"assistiveTextLabel","defaultValue":"\\"\\"","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":31,"modifierKind":[148],"required":false},{"name":"disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":34,"modifierKind":[148],"required":false},{"name":"error","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":32,"modifierKind":[148],"required":false},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":18,"modifierKind":[148],"required":false},{"name":"label","defaultValue":"\\"\\"","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":19,"modifierKind":[148],"required":false},{"name":"labelPosition","defaultValue":"\\"top\\"","deprecated":false,"deprecationMessage":"","type":"\\"top\\" | \\"side\\"","indexKey":"","optional":false,"description":"","line":20,"modifierKind":[148],"required":false},{"name":"leftIcon","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"RegularIconIdKey | TogglableIconIdKey | null","indexKey":"","optional":false,"description":"","line":25,"modifierKind":[148],"required":false},{"name":"maxLength","defaultValue":"150","deprecated":false,"deprecationMessage":"","type":"number","indexKey":"","optional":false,"description":"","line":33,"modifierKind":[148],"required":false},{"name":"readOnly","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":35,"modifierKind":[148],"required":false},{"name":"required","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":21,"modifierKind":[148],"required":false},{"name":"rightIconAction","defaultValue":"\\"clean\\"","deprecated":false,"deprecationMessage":"","type":"\\"clean\\" | \\"visibilityOn\\" | \\"visibilityOff\\"","indexKey":"","optional":false,"description":"","line":27,"modifierKind":[148],"required":false},{"name":"showAssistiveIcon","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":30,"modifierKind":[148],"required":false},{"name":"showCounter","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":22,"modifierKind":[148],"required":false},{"name":"showLabelRequirement","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":28,"modifierKind":[148],"required":false},{"name":"showRightIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":26,"modifierKind":[148],"required":false},{"name":"value","defaultValue":"\\"\\"","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":23,"modifierKind":[148],"required":false},{"name":"width","defaultValue":"\\"300px\\"","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":36,"modifierKind":[148],"required":false}],"outputsClass":[{"name":"rightIconClick","deprecated":false,"deprecationMessage":"","type":"void","indexKey":"","optional":false,"description":"","line":42,"modifierKind":[148],"required":false},{"name":"valueChange","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":41,"modifierKind":[148],"required":false}],"propertiesClass":[{"name":"characterCount","defaultValue":"signal<number>(this.internalValue().length)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":44,"modifierKind":[148]},{"name":"displayCounter","defaultValue":"computed(() => this.showCounter() && typeof this.maxLength() === \\"number\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":48,"modifierKind":[148]},{"name":"displayedLeftIcon","defaultValue":"computed(() => (this.error() ? \\"error\\" : this.leftIcon()))","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":46,"modifierKind":[148]},{"name":"internalValue","defaultValue":"signal<string>(this.value())","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":24,"modifierKind":[148]},{"name":"isHiddenInput","defaultValue":"signal<boolean>(this.showRightIcon() && this.rightIconAction() === \\"visibilityOn\\")","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":45,"modifierKind":[148]},{"name":"lastParentValue","defaultValue":"this.value()","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":78,"modifierKind":[123]},{"name":"rightIconAriaLabel","defaultValue":"computed(() => {\\n    if ([\\"visibilityOn\\", \\"visibilityOff\\"].includes(this.rightIconAction())) {\\n      return this.isHiddenInput() ? \\"show text\\" : \\"hide text\\";\\n    } else if (this.rightIconAction() === \\"clean\\") {\\n      return \\"clear\\";\\n    }\\n    return \\"\\";\\n  })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":59,"modifierKind":[148]},{"name":"rightIconName","defaultValue":"computed(() => {\\n    if ([\\"visibilityOn\\", \\"visibilityOff\\"].includes(this.rightIconAction())) {\\n      return this.isHiddenInput() ? \\"visibility-show\\" : \\"visibility-hide\\";\\n    } else if (this.rightIconAction() === \\"clean\\") {\\n      return \\"close\\";\\n    }\\n    return \\"\\";\\n  })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":50,"modifierKind":[148]},{"name":"shouldShowRightIcon","defaultValue":"computed(() => {\\n    if (this.readOnly() || this.disabled()) {\\n      return false;\\n    }\\n    if (this.rightIconAction() === \\"clean\\") {\\n      return !!this.internalValue()?.length && this.showRightIcon();\\n    }\\n    return this.showRightIcon() && !!this.rightIconAction();\\n  })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"","line":68,"modifierKind":[148]}],"methodsClass":[{"name":"handleChange","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":93,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onRightIconClickHandler","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":103,"deprecated":false,"deprecationMessage":""},{"name":"toggleInputVisibility","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":108,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"triggerRightIconAction","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":112,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"},{"name":"IconComponent","type":"component"},{"name":"IconButtonComponent","type":"component"},{"name":"LinkComponent","type":"component"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { ChangeDetectionStrategy, Component, input, output, signal, computed, effect } from \\"@angular/core\\";\\n\\nimport { IconComponent } from \\"../icon/icon.component\\";\\nimport { RegularIconIdKey, TogglableIconIdKey } from \\"../icon/icon.service\\";\\nimport { IconButtonComponent } from \\"../icon-button/icon-button.component\\";\\nimport { LinkComponent } from \\"../link/link.component\\";\\n\\n@Component({\\n  selector: \\"rte-text-input\\",\\n  imports: [CommonModule, IconComponent, IconButtonComponent, LinkComponent],\\n  standalone: true,\\n  templateUrl: \\"./text-input.component.html\\",\\n  styleUrl: \\"./text-input.component.scss\\",\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class TextInputComponent {\\n  readonly id = input<string>();\\n  readonly label = input<string>(\\"\\");\\n  readonly labelPosition = input<\\"top\\" | \\"side\\">(\\"top\\");\\n  readonly required = input<boolean>(false);\\n  readonly showCounter = input<boolean>(false);\\n  readonly value = input<string>(\\"\\");\\n  readonly internalValue = signal<string>(this.value());\\n  readonly leftIcon = input<RegularIconIdKey | TogglableIconIdKey | null>(null);\\n  readonly showRightIcon = input<boolean>(true);\\n  readonly rightIconAction = input<\\"clean\\" | \\"visibilityOn\\" | \\"visibilityOff\\">(\\"clean\\");\\n  readonly showLabelRequirement = input<boolean>(false);\\n  readonly assistiveAppearance = input<\\"description\\" | \\"error\\" | \\"success\\" | \\"link\\">(\\"description\\");\\n  readonly showAssistiveIcon = input<boolean>(false);\\n  readonly assistiveTextLabel = input<string>(\\"\\");\\n  readonly error = input<boolean>(false);\\n  readonly maxLength = input<number>(150);\\n  readonly disabled = input<boolean>(false);\\n  readonly readOnly = input<boolean>(false);\\n  readonly width = input<string>(\\"300px\\");\\n  readonly ariaLabel = input<string>(\\"\\");\\n  readonly ariaRequired = input<boolean>(false);\\n  readonly ariaLabelledby = input<string>(\\"\\");\\n\\n  readonly valueChange = output<string>();\\n  readonly rightIconClick = output<void>();\\n\\n  readonly characterCount = signal<number>(this.internalValue().length);\\n  readonly isHiddenInput = signal<boolean>(this.showRightIcon() && this.rightIconAction() === \\"visibilityOn\\");\\n  readonly displayedLeftIcon = computed(() => (this.error() ? \\"error\\" : this.leftIcon()));\\n\\n  readonly displayCounter = computed(() => this.showCounter() && typeof this.maxLength() === \\"number\\");\\n\\n  readonly rightIconName = computed(() => {\\n    if ([\\"visibilityOn\\", \\"visibilityOff\\"].includes(this.rightIconAction())) {\\n      return this.isHiddenInput() ? \\"visibility-show\\" : \\"visibility-hide\\";\\n    } else if (this.rightIconAction() === \\"clean\\") {\\n      return \\"close\\";\\n    }\\n    return \\"\\";\\n  });\\n\\n  readonly rightIconAriaLabel = computed(() => {\\n    if ([\\"visibilityOn\\", \\"visibilityOff\\"].includes(this.rightIconAction())) {\\n      return this.isHiddenInput() ? \\"show text\\" : \\"hide text\\";\\n    } else if (this.rightIconAction() === \\"clean\\") {\\n      return \\"clear\\";\\n    }\\n    return \\"\\";\\n  });\\n\\n  readonly shouldShowRightIcon = computed(() => {\\n    if (this.readOnly() || this.disabled()) {\\n      return false;\\n    }\\n    if (this.rightIconAction() === \\"clean\\") {\\n      return !!this.internalValue()?.length && this.showRightIcon();\\n    }\\n    return this.showRightIcon() && !!this.rightIconAction();\\n  });\\n\\n  private lastParentValue = this.value();\\n\\n  constructor() {\\n    effect(\\n      () => {\\n        const parentValue = this.value();\\n        if (parentValue !== this.lastParentValue) {\\n          this.lastParentValue = parentValue;\\n          this.internalValue.set(parentValue);\\n        }\\n      },\\n      { allowSignalWrites: true },\\n    );\\n  }\\n\\n  handleChange(event: Event): void {\\n    const input = event.target as HTMLInputElement;\\n    this.internalValue.set(input.value);\\n    this.valueChange.emit(input.value);\\n    if (this.maxLength()) {\\n      this.characterCount.set(input.value.length);\\n    }\\n    this.valueChange.emit(input.value);\\n  }\\n\\n  onRightIconClickHandler(): void {\\n    this.rightIconClick.emit();\\n    this.triggerRightIconAction();\\n  }\\n\\n  private toggleInputVisibility(): void {\\n    this.isHiddenInput.set(!this.isHiddenInput());\\n  }\\n\\n  private triggerRightIconAction(): void {\\n    if (this.rightIconAction() === \\"clean\\") {\\n      this.internalValue.set(\\"\\");\\n      this.valueChange.emit(\\"\\");\\n      this.characterCount.set(0);\\n    }\\n    if ([\\"visibilityOn\\", \\"visibilityOff\\"].includes(this.rightIconAction())) {\\n      this.toggleInputVisibility();\\n    }\\n  }\\n}\\n","styleUrl":"./text-input.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":78},"extends":[],"templateData":"<div\\n  class=\\"container {{labelPosition()}}\\"\\n  [ngClass]=\\"{\'error\': error()}\\"\\n  [style.width]=\\"width()\\"\\n>\\n  <ng-container *ngIf=\\"label()\\">\\n    <div class=\\"text\\">\\n      <div class=\\"label-container\\">\\n        <label class=\\"input-label\\" [id]=\\"\'input-label-\' + id\\" [for]=\\"id()\\">\\n          {{ label() }}\\n        </label>\\n        <ng-container *ngIf=\\"required()\\">\\n          <ng-container *ngIf=\\"showLabelRequirement(); else requiredIcon\\">\\n            <span class=\\"required-text\\">(obligatoire)</span>\\n          </ng-container>\\n          <ng-template #requiredIcon>\\n            <span class=\\"required-icon-container\\">\\n              <rte-icon name=\\"asterisk\\" [size]=\\"8\\" />\\n            </span>\\n          </ng-template>\\n        </ng-container>\\n        <ng-container *ngIf=\\"!required() && showLabelRequirement()\\">\\n          <span class=\\"required-text\\">(optionnel)</span>\\n        </ng-container>\\n      </div>\\n      <ng-container *ngIf=\\"displayCounter() && labelPosition() === \'top\'\\">\\n        <p class=\\"input-counter\\" data-testid=\\"input-counter\\">\\n          {{ characterCount() }}/{{ maxLength() }}\\n        </p>\\n      </ng-container>\\n    </div>\\n  </ng-container>\\n\\n  <div class=\\"input-container\\">\\n    <div\\n      class=\\"input {{labelPosition()}}\\"\\n      [ngClass]=\\"{\'disabled\': disabled(), \'read-only\': readOnly()}\\"\\n    >\\n      <div class=\\"input-bar\\" [ngClass]=\\"{\'with-left-icon\': displayedLeftIcon(), \'with-right-icon\': rightIconAction()}\\">\\n        <ng-container *ngIf=\\"displayedLeftIcon()\\">\\n          <rte-icon\\n            appearance=\\"outlined\\"\\n            class=\\"left-icon\\"\\n            aria-hidden=\\"true\\"\\n            [name]=\\"displayedLeftIcon()!\\"\\n          />\\n        </ng-container>\\n\\n        <input\\n          #inputRef\\n          class=\\"input-field\\"\\n          [id]=\\"id()\\"\\n          [ngClass]=\\"{\'error\': error()}\\"\\n          [attr.aria-label]=\\"ariaLabel()\\"\\n          [attr.aria-labelledby]=\\"ariaLabelledby()\\"\\n          [attr.aria-required]=\\"ariaRequired()\\"\\n          [type]=\\"isHiddenInput() ? \'password\' : \'text\'\\"\\n          [maxLength]=\\"maxLength()\\"\\n          [disabled]=\\"disabled()\\"\\n          [readOnly]=\\"readOnly()\\"\\n          [value]=\\"internalValue()\\"\\n          (input)=\\"handleChange($event)\\"\\n        />\\n\\n        <ng-container *ngIf=\\"shouldShowRightIcon()\\">\\n          <rte-icon-button\\n            appearance=\\"outlined\\"\\n            variant=\\"transparent\\"\\n            class=\\"right-icon\\"\\n            data-testid=\\"right-icon\\"\\n            [name]=\\"rightIconName() || \'close\'\\"\\n            [ariaLabel]=\\"rightIconAriaLabel()\\"\\n            (click)=\\"onRightIconClickHandler()\\"\\n          />\\n        </ng-container>\\n      </div>\\n    </div>\\n\\n    <ng-container *ngIf=\\"assistiveTextLabel()\\">\\n      <div class=\\"assistive-text\\">\\n        <ng-container *ngIf=\\"showAssistiveIcon() && assistiveAppearance() === \'error\'\\">\\n          <rte-icon name=\\"error\\" appearance=\\"outlined\\" class=\\"assistive-icon-error\\" [size]=\\"12\\" />\\n        </ng-container>\\n        <ng-container *ngIf=\\"showAssistiveIcon() && assistiveAppearance() === \'success\'\\">\\n          <rte-icon name=\\"check\\" appearance=\\"outlined\\" class=\\"assistive-icon-success\\" [size]=\\"12\\" />\\n        </ng-container>\\n        <ng-container *ngIf=\\"assistiveAppearance() === \'link\'; else assistiveLabel\\">\\n          <rte-link [label]=\\"assistiveTextLabel()\\" />\\n        </ng-container>\\n        <ng-template #assistiveLabel>\\n          <p class=\\"assistive-label\\" [ngClass]=\\"assistiveAppearance()\\">\\n            {{ assistiveTextLabel() }}\\n          </p>\\n        </ng-template>\\n      </div>\\n    </ng-container>\\n  </div>\\n\\n  <ng-container *ngIf=\\"displayCounter() && labelPosition() === \'side\'\\">\\n    <p class=\\"input-counter\\" data-testid=\\"input-counter\\">\\n      {{ characterCount() }}/{{ maxLength() }}\\n    </p>\\n  </ng-container>\\n</div>"},{"name":"TooltipComponent","id":"component-TooltipComponent-1b20a5edf599e29282aacfa608319b5ee8bb3078c8be57379118184d78266de61ea49daa61e8e6288cefd232bf69a18d0ca941286dca974fe7dce2fad0a9f7e4","file":"projects/ds-rte-lib/src/lib/components/tooltip/tooltip.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rte-tooltip","styleUrls":[],"styles":[],"templateUrl":["./tooltip.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"alignment","defaultValue":"\\"center\\"","deprecated":false,"deprecationMessage":"","type":"Alignment","indexKey":"","optional":false,"description":"","line":15,"modifierKind":[148],"required":false},{"name":"arrow","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","indexKey":"","optional":false,"description":"","line":16,"modifierKind":[148],"required":false},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"","line":13,"modifierKind":[148],"required":true},{"name":"position","defaultValue":"\\"top\\"","deprecated":false,"deprecationMessage":"","type":"Exclude<Position, \\"auto\\">","indexKey":"","optional":false,"description":"","line":14,"modifierKind":[148],"required":false}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":true,"imports":[{"name":"CommonModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \\"@angular/common\\";\\nimport { Component, input } from \\"@angular/core\\";\\nimport { Alignment, Position } from \\"@design-system-rte/core/common/common-types\\";\\n\\n@Component({\\n  selector: \\"rte-tooltip\\",\\n  imports: [CommonModule],\\n  standalone: true,\\n  templateUrl: \\"./tooltip.component.html\\",\\n  styleUrl: \\"./tooltip.component.scss\\",\\n})\\nexport class TooltipComponent {\\n  readonly label = input.required<string>();\\n  readonly position = input<Exclude<Position, \\"auto\\">>(\\"top\\");\\n  readonly alignment = input<Alignment>(\\"center\\");\\n  readonly arrow = input<boolean>(true);\\n}\\n","styleUrl":"./tooltip.component.scss","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":[],"templateData":"<div\\n  class=\\"tooltip {{ position() }} {{ alignment() }}\\"\\n  [ngClass]=\\"{ arrow: arrow() }\\"\\n>\\n  <span role=\\"tooltip\\" class=\\"tooltip-label\\"> {{ label() }} </span>\\n</div>\\n"}],"modules":[{"name":"DropdownModule","id":"module-DropdownModule-33a0a99dc7450f0da2633498e7d99078fec4c89527e2a91bd044c2b678f58ec04e33d1646b363158b3d788bea7bdb50b3a9c0304b2ee93abdb217c0237f2627e","description":"","deprecationMessage":"","deprecated":false,"file":"projects/ds-rte-lib/src/lib/components/dropdown/dropdown.module.ts","methods":[],"sourceCode":"import { NgModule } from \\"@angular/core\\";\\n\\nimport { DropdownItemComponent } from \\"./dropdown-item/dropdown-item.component\\";\\nimport { DropdownMenuComponent } from \\"./dropdown-menu/dropdown-menu.component\\";\\nimport { DropdownTriggerDirective } from \\"./dropdown-trigger/dropdown-trigger.directive\\";\\nimport { DropdownDirective } from \\"./dropdown.directive\\";\\n\\n@NgModule({\\n  imports: [DropdownDirective, DropdownTriggerDirective, DropdownMenuComponent, DropdownItemComponent],\\n  exports: [DropdownDirective, DropdownTriggerDirective, DropdownMenuComponent, DropdownItemComponent],\\n})\\nexport class DropdownModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[{"name":"DropdownDirective"},{"name":"DropdownItemComponent"},{"name":"DropdownMenuComponent"},{"name":"DropdownTriggerDirective"}]},{"type":"exports","elements":[{"name":"DropdownDirective"},{"name":"DropdownItemComponent"},{"name":"DropdownMenuComponent"},{"name":"DropdownTriggerDirective"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]}],"miscellaneous":{"variables":[{"name":"focusChildDropdownFirstElement","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/dropdown/dropdown.utils.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(childDropdownId: string) => {\\n  const childDropdown = document.querySelector(`[data-dropdown-id=\'${childDropdownId}\']`);\\n  if (childDropdown) {\\n    const allChildDropdownElement = childDropdown?.querySelectorAll<HTMLElement>(\'li[role=\\"menuitem\\"]\');\\n    allChildDropdownElement[0]?.focus();\\n  }\\n}"},{"name":"focusNextElement","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/dropdown/dropdown.utils.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(dropdown: HTMLElement) => {\\n  const menuItems = getDropdownMenuItems(dropdown);\\n  const activeElementIndex = menuItems.indexOf(document.activeElement as HTMLElement);\\n\\n  if (activeElementIndex < menuItems.length - 1) {\\n    const nextElement = menuItems[activeElementIndex + 1];\\n    nextElement.focus();\\n  } else {\\n    menuItems[0]?.focus();\\n  }\\n}"},{"name":"focusParentDropdownFirstElement","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/dropdown/dropdown.utils.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(dropdownId: string) => {\\n  const parentDropdownId = DropdownManager.getParentDropdownId(dropdownId);\\n  const parentDropdown = document.querySelector(`[data-dropdown-id=\'${parentDropdownId}\']`);\\n  parentDropdown?.querySelector<HTMLElement>(\\"[data-active=true]\\")?.focus();\\n}"},{"name":"focusPreviousElement","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/dropdown/dropdown.utils.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(dropdown: HTMLElement) => {\\n  const menuItems = getDropdownMenuItems(dropdown);\\n  const activeElementIndex = menuItems.indexOf(document.activeElement as HTMLElement);\\n\\n  if (activeElementIndex > 0) {\\n    const previousElement = menuItems[activeElementIndex - 1];\\n    previousElement.focus();\\n  } else {\\n    menuItems.at(-1)?.focus();\\n  }\\n}"},{"name":"getDropdownMenuItems","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/dropdown/dropdown.utils.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(dropdown: HTMLElement) => {\\n  const allDropdownElement = dropdown?.querySelectorAll<HTMLElement>(\'li[role=\\"menuitem\\"]\');\\n  return allDropdownElement ? Array.from(allDropdownElement) : [];\\n}"},{"name":"RegularIcons","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/icon/icon-map.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  add: \\"add\\",\\n  \\"alt-route\\": \\"alt_route\\",\\n  apps: \\"apps\\",\\n  \\"arrow-alt-down\\": \\"arrow_alt_down\\",\\n  \\"arrow-alt-down-left\\": \\"arrow_alt_down_left\\",\\n  \\"arrow-alt-down-right\\": \\"arrow_alt_down_right\\",\\n  \\"arrow-alt-left\\": \\"arrow_alt_left\\",\\n  \\"arrow-alt-right\\": \\"arrow_alt_right\\",\\n  \\"arrow-alt-up\\": \\"arrow_alt_up\\",\\n  \\"arrow-alt-up-left\\": \\"arrow_alt_up_left\\",\\n  \\"arrow-alt-up-right\\": \\"arrow_alt_up_right\\",\\n  \\"arrow-angle-down-left\\": \\"arrow_angle_down_left\\",\\n  \\"arrow-angle-down-right\\": \\"arrow_angle_down_right\\",\\n  \\"arrow-angle-up-left\\": \\"arrow_angle_up_left\\",\\n  \\"arrow-angle-up-right\\": \\"arrow_angle_up_right\\",\\n  \\"arrow-chevron-down\\": \\"arrow_chevron_down\\",\\n  \\"arrow-chevron-left\\": \\"arrow_chevron_left\\",\\n  \\"arrow-chevron-right\\": \\"arrow_chevron_right\\",\\n  \\"arrow-chevron-up\\": \\"arrow_chevron_up\\",\\n  \\"arrow-double-down\\": \\"arrow_double_down\\",\\n  \\"arrow-double-left\\": \\"arrow_double_left\\",\\n  \\"arrow-double-right\\": \\"arrow_double_right\\",\\n  \\"arrow-double-up\\": \\"arrow_double_up\\",\\n  \\"arrow-down\\": \\"arrow_down\\",\\n  \\"arrow-down-left\\": \\"arrow_down_left\\",\\n  \\"arrow-down-right\\": \\"arrow_down_right\\",\\n  \\"arrow-drop-down\\": \\"arrow_drop_down\\",\\n  \\"arrow-drop-up\\": \\"arrow_drop_up\\",\\n  \\"arrow-left\\": \\"arrow_left\\",\\n  \\"arrow-right\\": \\"arrow_right\\",\\n  \\"arrow-up\\": \\"arrow_up\\",\\n  \\"arrow-up-left\\": \\"arrow_up_left\\",\\n  \\"arrow-up-right\\": \\"arrow_up_right\\",\\n  asterisk: \\"asterisk\\",\\n  \\"attach-file\\": \\"attach_file\\",\\n  \\"battery-alt-empty\\": \\"battery_alt_empty\\",\\n  \\"battery-alt-full\\": \\"battery_alt_full\\",\\n  \\"battery-charging\\": \\"battery_charging\\",\\n  \\"battery-empty\\": \\"battery_empty\\",\\n  \\"battery-full\\": \\"battery_full\\",\\n  bluetooth: \\"bluetooth\\",\\n  \\"bluetooth-off\\": \\"bluetooth_off\\",\\n  \\"chart-bar\\": \\"chart_bar\\",\\n  \\"chart-bar-stacked\\": \\"chart_bar_stacked\\",\\n  check: \\"check\\",\\n  \\"check-indeterminate\\": \\"check_indeterminate\\",\\n  \\"check-small\\": \\"check_small\\",\\n  \\"checkbox-empty\\": \\"checkbox_empty\\",\\n  close: \\"close\\",\\n  compare: \\"compare\\",\\n  \\"copy-all\\": \\"copy_all\\",\\n  \\"crisis-alert\\": \\"crisis_alert\\",\\n  cut: \\"cut\\",\\n  download: \\"download\\",\\n  \\"download-done\\": \\"download_done\\",\\n  \\"drag-handle\\": \\"drag_handle\\",\\n  \\"drag-indicator\\": \\"drag_indicator\\",\\n  exclamation: \\"exclamation\\",\\n  \\"explore-travel\\": \\"explore_travel\\",\\n  \\"external-link\\": \\"external_link\\",\\n  filter: \\"filter\\",\\n  \\"filter-off\\": \\"filter_off\\",\\n  \\"first-page\\": \\"first_page\\",\\n  forward: \\"forward\\",\\n  fullscreen: \\"fullscreen\\",\\n  \\"fullscreen-exit\\": \\"fullscreen_exit\\",\\n  history: \\"history\\",\\n  \\"hourglass-empty\\": \\"hourglass_empty\\",\\n  \\"info-i\\": \\"info_i\\",\\n  language: \\"language\\",\\n  \\"last-page\\": \\"last_page\\",\\n  link: \\"link\\",\\n  \\"link-off\\": \\"link_off\\",\\n  list: \\"list\\",\\n  \\"location-disabled\\": \\"location_disabled\\",\\n  login: \\"login\\",\\n  logout: \\"logout\\",\\n  menu: \\"menu\\",\\n  \\"menu-open\\": \\"menu_open\\",\\n  monitoring: \\"monitoring\\",\\n  \\"more-down\\": \\"more_down\\",\\n  \\"more-horiz\\": \\"more_horiz\\",\\n  \\"more-up\\": \\"more_up\\",\\n  \\"more-vert\\": \\"more_vert\\",\\n  ohm: \\"ohm\\",\\n  \\"open-in-full\\": \\"open_in_full\\",\\n  paste: \\"paste\\",\\n  \\"play-pause\\": \\"play_pause\\",\\n  \\"power-input\\": \\"power_input\\",\\n  \\"power-plug\\": \\"power_plug\\",\\n  \\"power-settings\\": \\"power_settings\\",\\n  \\"priority-high\\": \\"priority_high\\",\\n  public: \\"public\\",\\n  publish: \\"publish\\",\\n  \\"question-mark\\": \\"question_mark\\",\\n  radar: \\"radar\\",\\n  \\"radio-button-empty\\": \\"radio_button_empty\\",\\n  redo: \\"redo\\",\\n  reload: \\"reload\\",\\n  remove: \\"remove\\",\\n  reply: \\"reply\\",\\n  \\"reply-all\\": \\"reply_all\\",\\n  route: \\"route\\",\\n  search: \\"search\\",\\n  \\"side-navigation\\": \\"side_navigation\\",\\n  sort: \\"sort\\",\\n  \\"support-agent\\": \\"support_agent\\",\\n  timeline: \\"timeline\\",\\n  \\"trending-down\\": \\"trending_down\\",\\n  \\"trending-flat\\": \\"trending_flat\\",\\n  \\"trending-up\\": \\"trending_up\\",\\n  tune: \\"tune\\",\\n  undo: \\"undo\\",\\n  upload: \\"upload\\",\\n  water: \\"water\\",\\n  \\"water-alt\\": \\"water_alt\\",\\n  wifi: \\"wifi\\",\\n  \\"wifi-off\\": \\"wifi_off\\",\\n  windmill: \\"windmill\\",\\n  \\"zoom-in\\": \\"zoom_in\\",\\n  \\"zoom-out\\": \\"zoom_out\\",\\n}"},{"name":"segmentClass","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/segmented-control/segmented-control.component.ts","deprecated":false,"deprecationMessage":"","type":"string","defaultValue":"\\"rte-segment\\""},{"name":"segmentSelector","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/segmented-control/segmented-control.component.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"`.${segmentClass}`"},{"name":"TogglableIcons","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/icon/icon-map.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  \\"add-circle\\": [\\"add_circle_outlined\\", \\"add_circle_filled\\"],\\n  \\"admin-panel-settings\\": [\\"admin_panel_settings_outlined\\", \\"admin_panel_settings_filled\\"],\\n  analytics: [\\"analytics_outlined\\", \\"analytics_filled\\"],\\n  archive: [\\"archive_outlined\\", \\"archive_filled\\"],\\n  \\"arrow-circle-chevron-down\\": [\\"arrow_circle_chevron_down_outlined\\", \\"arrow_circle_chevron_down_filled\\"],\\n  \\"arrow-circle-chevron-left\\": [\\"arrow_circle_chevron_left_outlined\\", \\"arrow_circle_chevron_left_filled\\"],\\n  \\"arrow-circle-chevron-right\\": [\\"arrow_circle_chevron_right_outlined\\", \\"arrow_circle_chevron_right_filled\\"],\\n  \\"arrow-circle-chevron-up\\": [\\"arrow_circle_chevron_up_outlined\\", \\"arrow_circle_chevron_up_filled\\"],\\n  \\"arrow-circle-down\\": [\\"arrow_circle_down_outlined\\", \\"arrow_circle_down_filled\\"],\\n  \\"arrow-circle-left\\": [\\"arrow_circle_left_outlined\\", \\"arrow_circle_left_filled\\"],\\n  \\"arrow-circle-right\\": [\\"arrow_circle_right_outlined\\", \\"arrow_circle_right_filled\\"],\\n  \\"arrow-circle-up\\": [\\"arrow_circle_up_outlined\\", \\"arrow_circle_up_filled\\"],\\n  article: [\\"article_outlined\\", \\"article_filled\\"],\\n  \\"assignment-complete\\": [\\"assignment_complete_outlined\\", \\"assignment_complete_filled\\"],\\n  assignment: [\\"assignment_outlined\\", \\"assignment_filled\\"],\\n  \\"battery-alert\\": [\\"battery_alert_outlined\\", \\"battery_alert_filled\\"],\\n  \\"battery-charging-full\\": [\\"battery_charging_full_outlined\\", \\"battery_charging_full_filled\\"],\\n  \\"bolt-alt-circle\\": [\\"bolt_alt_circle_outlined\\", \\"bolt_alt_circle_filled\\"],\\n  \\"bolt-alt\\": [\\"bolt_alt_outlined\\", \\"bolt_alt_filled\\"],\\n  \\"bolt-circle\\": [\\"bolt_circle_outlined\\", \\"bolt_circle_filled\\"],\\n  bolt: [\\"bolt_outlined\\", \\"bolt_filled\\"],\\n  bookmark: [\\"bookmark_outlined\\", \\"bookmark_filled\\"],\\n  bookmarks: [\\"bookmarks_outlined\\", \\"bookmarks_filled\\"],\\n  build: [\\"build_outlined\\", \\"build_filled\\"],\\n  \\"calendar-available\\": [\\"calendar_available_outlined\\", \\"calendar_available_filled\\"],\\n  \\"calendar-busy\\": [\\"calendar_busy_outlined\\", \\"calendar_busy_filled\\"],\\n  \\"calendar-month\\": [\\"calendar_month_outlined\\", \\"calendar_month_filled\\"],\\n  \\"calendar-today\\": [\\"calendar_today_outlined\\", \\"calendar_today_filled\\"],\\n  call: [\\"call_outlined\\", \\"call_filled\\"],\\n  cancel: [\\"cancel_outlined\\", \\"cancel_filled\\"],\\n  category: [\\"category_outlined\\", \\"category_filled\\"],\\n  \\"chart-add\\": [\\"chart_add_outlined\\", \\"chart_add_filled\\"],\\n  \\"chart-area\\": [\\"chart_area_outlined\\", \\"chart_area_filled\\"],\\n  \\"chart-pie\\": [\\"chart_pie_outlined\\", \\"chart_pie_filled\\"],\\n  \\"chart-table\\": [\\"chart_table_outlined\\", \\"chart_table_filled\\"],\\n  \\"chat-alt\\": [\\"chat_alt_outlined\\", \\"chat_alt_filled\\"],\\n  \\"chat-alt-unread\\": [\\"chat_alt_unread_outlined\\", \\"chat_alt_unread_filled\\"],\\n  chat: [\\"chat_outlined\\", \\"chat_filled\\"],\\n  \\"chat-unread\\": [\\"chat_unread_outlined\\", \\"chat_unread_filled\\"],\\n  \\"check-circle\\": [\\"check_circle_outlined\\", \\"check_circle_filled\\"],\\n  checkbox: [\\"checkbox_outlined\\", \\"checkbox_filled\\"],\\n  \\"checkbox-indeterminate\\": [\\"checkbox_indeterminate_outlined\\", \\"checkbox_indeterminate_filled\\"],\\n  clock: [\\"clock_outlined\\", \\"clock_filled\\"],\\n  \\"cloud-download\\": [\\"cloud_download_outlined\\", \\"cloud_download_filled\\"],\\n  cloud: [\\"cloud_outlined\\", \\"cloud_filled\\"],\\n  \\"cloud-off\\": [\\"cloud_off_outlined\\", \\"cloud_off_filled\\"],\\n  \\"cloud-upload\\": [\\"cloud_upload_outlined\\", \\"cloud_upload_filled\\"],\\n  \\"comment-add\\": [\\"comment_add_outlined\\", \\"comment_add_filled\\"],\\n  comment: [\\"comment_outlined\\", \\"comment_filled\\"],\\n  copy: [\\"copy_outlined\\", \\"copy_filled\\"],\\n  dangerous: [\\"dangerous_outlined\\", \\"dangerous_filled\\"],\\n  dashboard: [\\"dashboard_outlined\\", \\"dashboard_filled\\"],\\n  database: [\\"database_outlined\\", \\"database_filled\\"],\\n  delete: [\\"delete_outlined\\", \\"delete_filled\\"],\\n  desktop: [\\"desktop_outlined\\", \\"desktop_filled\\"],\\n  devices: [\\"devices_outlined\\", \\"devices_filled\\"],\\n  draft: [\\"draft_outlined\\", \\"draft_filled\\"],\\n  eco: [\\"eco_outlined\\", \\"eco_filled\\"],\\n  edit: [\\"edit_outlined\\", \\"edit_filled\\"],\\n  \\"electric-meter\\": [\\"electric_meter_outlined\\", \\"electric_meter_filled\\"],\\n  error: [\\"error_outlined\\", \\"error_filled\\"],\\n  explore: [\\"explore_outlined\\", \\"explore_filled\\"],\\n  \\"explore-off\\": [\\"explore_off_outlined\\", \\"explore_off_filled\\"],\\n  \\"fast-forward\\": [\\"fast_forward_outlined\\", \\"fast_forward_filled\\"],\\n  \\"fast-rewind\\": [\\"fast_rewind_outlined\\", \\"fast_rewind_filled\\"],\\n  feedback: [\\"feedback_outlined\\", \\"feedback_filled\\"],\\n  \\"file-copy\\": [\\"file_copy_outlined\\", \\"file_copy_filled\\"],\\n  \\"file-download\\": [\\"file_download_outlined\\", \\"file_download_filled\\"],\\n  \\"file-upload\\": [\\"file_upload_outlined\\", \\"file_upload_filled\\"],\\n  \\"filter-alt\\": [\\"filter_alt_outlined\\", \\"filter_alt_filled\\"],\\n  \\"filter-alt-off\\": [\\"filter_alt_off_outlined\\", \\"filter_alt_off_filled\\"],\\n  fire: [\\"fire_outlined\\", \\"fire_filled\\"],\\n  \\"fit-screen\\": [\\"fit_screen_outlined\\", \\"fit_screen_filled\\"],\\n  flag: [\\"flag_outlined\\", \\"flag_filled\\"],\\n  flash: [\\"flash_outlined\\", \\"flash_filled\\"],\\n  \\"flash-off\\": [\\"flash_off_outlined\\", \\"flash_off_filled\\"],\\n  \\"folder-add\\": [\\"folder_add_outlined\\", \\"folder_add_filled\\"],\\n  folder: [\\"folder_outlined\\", \\"folder_filled\\"],\\n  \\"folder-move\\": [\\"folder_move_outlined\\", \\"folder_move_filled\\"],\\n  \\"folder-open\\": [\\"folder_open_outlined\\", \\"folder_open_filled\\"],\\n  \\"folder-shared\\": [\\"folder_shared_outlined\\", \\"folder_shared_filled\\"],\\n  forum: [\\"forum_outlined\\", \\"forum_filled\\"],\\n  \\"group-add\\": [\\"group_add_outlined\\", \\"group_add_filled\\"],\\n  group: [\\"group_outlined\\", \\"group_filled\\"],\\n  groups: [\\"groups_outlined\\", \\"groups_filled\\"],\\n  headphones: [\\"headphones_outlined\\", \\"headphones_filled\\"],\\n  heart: [\\"heart_outlined\\", \\"heart_filled\\"],\\n  help: [\\"help_outlined\\", \\"help_filled\\"],\\n  home: [\\"home_outlined\\", \\"home_filled\\"],\\n  hourglass: [\\"hourglass_outlined\\", \\"hourglass_filled\\"],\\n  \\"image-broken\\": [\\"image_broken_outlined\\", \\"image_broken_filled\\"],\\n  image: [\\"image_outlined\\", \\"image_filled\\"],\\n  \\"image-gallery\\": [\\"image_gallery_outlined\\", \\"image_gallery_filled\\"],\\n  inbox: [\\"inbox_outlined\\", \\"inbox_filled\\"],\\n  info: [\\"info_outlined\\", \\"info_filled\\"],\\n  keep: [\\"keep_outlined\\", \\"keep_filled\\"],\\n  \\"keep-off\\": [\\"keep_off_outlined\\", \\"keep_off_filled\\"],\\n  label: [\\"label_outlined\\", \\"label_filled\\"],\\n  laptop: [\\"laptop_outlined\\", \\"laptop_filled\\"],\\n  \\"left-panel-close\\": [\\"left_panel_close_outlined\\", \\"left_panel_close_filled\\"],\\n  \\"left-panel-open\\": [\\"left_panel_open_outlined\\", \\"left_panel_open_filled\\"],\\n  \\"light-off\\": [\\"light_off_outlined\\", \\"light_off_filled\\"],\\n  \\"lightbulb-alt\\": [\\"lightbulb_alt_outlined\\", \\"lightbulb_alt_filled\\"],\\n  \\"lightbulb-circle\\": [\\"lightbulb_circle_outlined\\", \\"lightbulb_circle_filled\\"],\\n  lightbulb: [\\"lightbulb_outlined\\", \\"lightbulb_filled\\"],\\n  \\"list-alt\\": [\\"list_alt_outlined\\", \\"list_alt_filled\\"],\\n  \\"location-me\\": [\\"location_me_outlined\\", \\"location_me_filled\\"],\\n  \\"location-off\\": [\\"location_off_outlined\\", \\"location_off_filled\\"],\\n  \\"location-on\\": [\\"location_on_outlined\\", \\"location_on_filled\\"],\\n  lock: [\\"lock_outlined\\", \\"lock_filled\\"],\\n  \\"lock-open\\": [\\"lock_open_outlined\\", \\"lock_open_filled\\"],\\n  \\"lock-open-right\\": [\\"lock_open_right_outlined\\", \\"lock_open_right_filled\\"],\\n  mail: [\\"mail_outlined\\", \\"mail_filled\\"],\\n  \\"mail-unread\\": [\\"mail_unread_outlined\\", \\"mail_unread_filled\\"],\\n  map: [\\"map_outlined\\", \\"map_filled\\"],\\n  mic: [\\"mic_outlined\\", \\"mic_filled\\"],\\n  \\"mic-off\\": [\\"mic_off_outlined\\", \\"mic_off_filled\\"],\\n  \\"mode-dark\\": [\\"mode_dark_outlined\\", \\"mode_dark_filled\\"],\\n  \\"mode-light\\": [\\"mode_light_outlined\\", \\"mode_light_filled\\"],\\n  notification: [\\"notification_outlined\\", \\"notification_filled\\"],\\n  \\"notification-important\\": [\\"notification_important_outlined\\", \\"notification_important_filled\\"],\\n  \\"notification-off\\": [\\"notification_off_outlined\\", \\"notification_off_filled\\"],\\n  \\"notification-unread\\": [\\"notification_unread_outlined\\", \\"notification_unread_filled\\"],\\n  palette: [\\"palette_outlined\\", \\"palette_filled\\"],\\n  \\"pause-circle\\": [\\"pause_circle_outlined\\", \\"pause_circle_filled\\"],\\n  pause: [\\"pause_outlined\\", \\"pause_filled\\"],\\n  \\"photo-camera\\": [\\"photo_camera_outlined\\", \\"photo_camera_filled\\"],\\n  \\"play-circle\\": [\\"play_circle_outlined\\", \\"play_circle_filled\\"],\\n  play: [\\"play_outlined\\", \\"play_filled\\"],\\n  power: [\\"power_outlined\\", \\"power_filled\\"],\\n  \\"power-off\\": [\\"power_off_outlined\\", \\"power_off_filled\\"],\\n  \\"power-plug-connect\\": [\\"power_plug_connect_outlined\\", \\"power_plug_connect_filled\\"],\\n  \\"power-settings-circle\\": [\\"power_settings_circle_outlined\\", \\"power_settings_circle_filled\\"],\\n  \\"power-solar\\": [\\"power_solar_outlined\\", \\"power_solar_filled\\"],\\n  \\"power-switch\\": [\\"power_switch_outlined\\", \\"power_switch_filled\\"],\\n  \\"power-wind\\": [\\"power_wind_outlined\\", \\"power_wind_filled\\"],\\n  print: [\\"print_outlined\\", \\"print_filled\\"],\\n  \\"right-panel-close\\": [\\"right_panel_close_outlined\\", \\"right_panel_close_filled\\"],\\n  \\"right-panel-open\\": [\\"right_panel_open_outlined\\", \\"right_panel_open_filled\\"],\\n  save: [\\"save_outlined\\", \\"save_filled\\"],\\n  send: [\\"send_outlined\\", \\"send_filled\\"],\\n  settings: [\\"settings_outlined\\", \\"settings_filled\\"],\\n  share: [\\"share_outlined\\", \\"share_filled\\"],\\n  \\"skip-next\\": [\\"skip_next_outlined\\", \\"skip_next_filled\\"],\\n  \\"skip-previous\\": [\\"skip_previous_outlined\\", \\"skip_previous_filled\\"],\\n  smartphone: [\\"smartphone_outlined\\", \\"smartphone_filled\\"],\\n  star: [\\"star_outlined\\", \\"star_filled\\"],\\n  \\"sticky-note\\": [\\"sticky_note_outlined\\", \\"sticky_note_filled\\"],\\n  \\"stop-circle\\": [\\"stop_circle_outlined\\", \\"stop_circle_filled\\"],\\n  stop: [\\"stop_outlined\\", \\"stop_filled\\"],\\n  subtitles: [\\"subtitles_outlined\\", \\"subtitles_filled\\"],\\n  \\"text-snippet\\": [\\"text_snippet_outlined\\", \\"text_snippet_filled\\"],\\n  \\"trash-restore\\": [\\"trash_restore_outlined\\", \\"trash_restore_filled\\"],\\n  unarchive: [\\"unarchive_outlined\\", \\"unarchive_filled\\"],\\n  \\"user-add\\": [\\"user_add_outlined\\", \\"user_add_filled\\"],\\n  \\"user-circle\\": [\\"user_circle_outlined\\", \\"user_circle_filled\\"],\\n  user: [\\"user_outlined\\", \\"user_filled\\"],\\n  \\"user-settings\\": [\\"user_settings_outlined\\", \\"user_settings_filled\\"],\\n  verified: [\\"verified_outlined\\", \\"verified_filled\\"],\\n  \\"video-camera\\": [\\"video_camera_outlined\\", \\"video_camera_filled\\"],\\n  \\"video-camera-off\\": [\\"video_camera_off_outlined\\", \\"video_camera_off_filled\\"],\\n  \\"video-gallery\\": [\\"video_gallery_outlined\\", \\"video_gallery_filled\\"],\\n  \\"view-agenda\\": [\\"view_agenda_outlined\\", \\"view_agenda_filled\\"],\\n  \\"view-column\\": [\\"view_column_outlined\\", \\"view_column_filled\\"],\\n  \\"view-grid\\": [\\"view_grid_outlined\\", \\"view_grid_filled\\"],\\n  \\"view-kanban\\": [\\"view_kanban_outlined\\", \\"view_kanban_filled\\"],\\n  \\"view-module\\": [\\"view_module_outlined\\", \\"view_module_filled\\"],\\n  \\"view-timeline\\": [\\"view_timeline_outlined\\", \\"view_timeline_filled\\"],\\n  \\"visibility-hide\\": [\\"visibility_hide_outlined\\", \\"visibility_hide_filled\\"],\\n  \\"visibility-show\\": [\\"visibility_show_outlined\\", \\"visibility_show_filled\\"],\\n  \\"volume-down\\": [\\"volume_down_outlined\\", \\"volume_down_filled\\"],\\n  \\"volume-mute\\": [\\"volume_mute_outlined\\", \\"volume_mute_filled\\"],\\n  \\"volume-off\\": [\\"volume_off_outlined\\", \\"volume_off_filled\\"],\\n  \\"volume-up\\": [\\"volume_up_outlined\\", \\"volume_up_filled\\"],\\n  warning: [\\"warning_outlined\\", \\"warning_filled\\"],\\n  waterdrop: [\\"waterdrop_outlined\\", \\"waterdrop_filled\\"],\\n}"}],"functions":[{"name":"isValidIconName","file":"projects/ds-rte-lib/src/lib/components/icon/icon-map.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"iconName","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"boolean","jsdoctags":[{"name":"iconName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"typealiases":[{"name":"RegularIconIdKey","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"projects/ds-rte-lib/src/lib/components/icon/icon.service.ts","deprecated":false,"deprecationMessage":"","description":"","kind":199},{"name":"TogglableIconIdKey","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"projects/ds-rte-lib/src/lib/components/icon/icon.service.ts","deprecated":false,"deprecationMessage":"","description":"","kind":199}],"enumerations":[],"groupedVariables":{"projects/ds-rte-lib/src/lib/components/dropdown/dropdown.utils.ts":[{"name":"focusChildDropdownFirstElement","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/dropdown/dropdown.utils.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(childDropdownId: string) => {\\n  const childDropdown = document.querySelector(`[data-dropdown-id=\'${childDropdownId}\']`);\\n  if (childDropdown) {\\n    const allChildDropdownElement = childDropdown?.querySelectorAll<HTMLElement>(\'li[role=\\"menuitem\\"]\');\\n    allChildDropdownElement[0]?.focus();\\n  }\\n}"},{"name":"focusNextElement","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/dropdown/dropdown.utils.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(dropdown: HTMLElement) => {\\n  const menuItems = getDropdownMenuItems(dropdown);\\n  const activeElementIndex = menuItems.indexOf(document.activeElement as HTMLElement);\\n\\n  if (activeElementIndex < menuItems.length - 1) {\\n    const nextElement = menuItems[activeElementIndex + 1];\\n    nextElement.focus();\\n  } else {\\n    menuItems[0]?.focus();\\n  }\\n}"},{"name":"focusParentDropdownFirstElement","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/dropdown/dropdown.utils.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(dropdownId: string) => {\\n  const parentDropdownId = DropdownManager.getParentDropdownId(dropdownId);\\n  const parentDropdown = document.querySelector(`[data-dropdown-id=\'${parentDropdownId}\']`);\\n  parentDropdown?.querySelector<HTMLElement>(\\"[data-active=true]\\")?.focus();\\n}"},{"name":"focusPreviousElement","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/dropdown/dropdown.utils.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(dropdown: HTMLElement) => {\\n  const menuItems = getDropdownMenuItems(dropdown);\\n  const activeElementIndex = menuItems.indexOf(document.activeElement as HTMLElement);\\n\\n  if (activeElementIndex > 0) {\\n    const previousElement = menuItems[activeElementIndex - 1];\\n    previousElement.focus();\\n  } else {\\n    menuItems.at(-1)?.focus();\\n  }\\n}"},{"name":"getDropdownMenuItems","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/dropdown/dropdown.utils.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"(dropdown: HTMLElement) => {\\n  const allDropdownElement = dropdown?.querySelectorAll<HTMLElement>(\'li[role=\\"menuitem\\"]\');\\n  return allDropdownElement ? Array.from(allDropdownElement) : [];\\n}"}],"projects/ds-rte-lib/src/lib/components/icon/icon-map.ts":[{"name":"RegularIcons","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/icon/icon-map.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  add: \\"add\\",\\n  \\"alt-route\\": \\"alt_route\\",\\n  apps: \\"apps\\",\\n  \\"arrow-alt-down\\": \\"arrow_alt_down\\",\\n  \\"arrow-alt-down-left\\": \\"arrow_alt_down_left\\",\\n  \\"arrow-alt-down-right\\": \\"arrow_alt_down_right\\",\\n  \\"arrow-alt-left\\": \\"arrow_alt_left\\",\\n  \\"arrow-alt-right\\": \\"arrow_alt_right\\",\\n  \\"arrow-alt-up\\": \\"arrow_alt_up\\",\\n  \\"arrow-alt-up-left\\": \\"arrow_alt_up_left\\",\\n  \\"arrow-alt-up-right\\": \\"arrow_alt_up_right\\",\\n  \\"arrow-angle-down-left\\": \\"arrow_angle_down_left\\",\\n  \\"arrow-angle-down-right\\": \\"arrow_angle_down_right\\",\\n  \\"arrow-angle-up-left\\": \\"arrow_angle_up_left\\",\\n  \\"arrow-angle-up-right\\": \\"arrow_angle_up_right\\",\\n  \\"arrow-chevron-down\\": \\"arrow_chevron_down\\",\\n  \\"arrow-chevron-left\\": \\"arrow_chevron_left\\",\\n  \\"arrow-chevron-right\\": \\"arrow_chevron_right\\",\\n  \\"arrow-chevron-up\\": \\"arrow_chevron_up\\",\\n  \\"arrow-double-down\\": \\"arrow_double_down\\",\\n  \\"arrow-double-left\\": \\"arrow_double_left\\",\\n  \\"arrow-double-right\\": \\"arrow_double_right\\",\\n  \\"arrow-double-up\\": \\"arrow_double_up\\",\\n  \\"arrow-down\\": \\"arrow_down\\",\\n  \\"arrow-down-left\\": \\"arrow_down_left\\",\\n  \\"arrow-down-right\\": \\"arrow_down_right\\",\\n  \\"arrow-drop-down\\": \\"arrow_drop_down\\",\\n  \\"arrow-drop-up\\": \\"arrow_drop_up\\",\\n  \\"arrow-left\\": \\"arrow_left\\",\\n  \\"arrow-right\\": \\"arrow_right\\",\\n  \\"arrow-up\\": \\"arrow_up\\",\\n  \\"arrow-up-left\\": \\"arrow_up_left\\",\\n  \\"arrow-up-right\\": \\"arrow_up_right\\",\\n  asterisk: \\"asterisk\\",\\n  \\"attach-file\\": \\"attach_file\\",\\n  \\"battery-alt-empty\\": \\"battery_alt_empty\\",\\n  \\"battery-alt-full\\": \\"battery_alt_full\\",\\n  \\"battery-charging\\": \\"battery_charging\\",\\n  \\"battery-empty\\": \\"battery_empty\\",\\n  \\"battery-full\\": \\"battery_full\\",\\n  bluetooth: \\"bluetooth\\",\\n  \\"bluetooth-off\\": \\"bluetooth_off\\",\\n  \\"chart-bar\\": \\"chart_bar\\",\\n  \\"chart-bar-stacked\\": \\"chart_bar_stacked\\",\\n  check: \\"check\\",\\n  \\"check-indeterminate\\": \\"check_indeterminate\\",\\n  \\"check-small\\": \\"check_small\\",\\n  \\"checkbox-empty\\": \\"checkbox_empty\\",\\n  close: \\"close\\",\\n  compare: \\"compare\\",\\n  \\"copy-all\\": \\"copy_all\\",\\n  \\"crisis-alert\\": \\"crisis_alert\\",\\n  cut: \\"cut\\",\\n  download: \\"download\\",\\n  \\"download-done\\": \\"download_done\\",\\n  \\"drag-handle\\": \\"drag_handle\\",\\n  \\"drag-indicator\\": \\"drag_indicator\\",\\n  exclamation: \\"exclamation\\",\\n  \\"explore-travel\\": \\"explore_travel\\",\\n  \\"external-link\\": \\"external_link\\",\\n  filter: \\"filter\\",\\n  \\"filter-off\\": \\"filter_off\\",\\n  \\"first-page\\": \\"first_page\\",\\n  forward: \\"forward\\",\\n  fullscreen: \\"fullscreen\\",\\n  \\"fullscreen-exit\\": \\"fullscreen_exit\\",\\n  history: \\"history\\",\\n  \\"hourglass-empty\\": \\"hourglass_empty\\",\\n  \\"info-i\\": \\"info_i\\",\\n  language: \\"language\\",\\n  \\"last-page\\": \\"last_page\\",\\n  link: \\"link\\",\\n  \\"link-off\\": \\"link_off\\",\\n  list: \\"list\\",\\n  \\"location-disabled\\": \\"location_disabled\\",\\n  login: \\"login\\",\\n  logout: \\"logout\\",\\n  menu: \\"menu\\",\\n  \\"menu-open\\": \\"menu_open\\",\\n  monitoring: \\"monitoring\\",\\n  \\"more-down\\": \\"more_down\\",\\n  \\"more-horiz\\": \\"more_horiz\\",\\n  \\"more-up\\": \\"more_up\\",\\n  \\"more-vert\\": \\"more_vert\\",\\n  ohm: \\"ohm\\",\\n  \\"open-in-full\\": \\"open_in_full\\",\\n  paste: \\"paste\\",\\n  \\"play-pause\\": \\"play_pause\\",\\n  \\"power-input\\": \\"power_input\\",\\n  \\"power-plug\\": \\"power_plug\\",\\n  \\"power-settings\\": \\"power_settings\\",\\n  \\"priority-high\\": \\"priority_high\\",\\n  public: \\"public\\",\\n  publish: \\"publish\\",\\n  \\"question-mark\\": \\"question_mark\\",\\n  radar: \\"radar\\",\\n  \\"radio-button-empty\\": \\"radio_button_empty\\",\\n  redo: \\"redo\\",\\n  reload: \\"reload\\",\\n  remove: \\"remove\\",\\n  reply: \\"reply\\",\\n  \\"reply-all\\": \\"reply_all\\",\\n  route: \\"route\\",\\n  search: \\"search\\",\\n  \\"side-navigation\\": \\"side_navigation\\",\\n  sort: \\"sort\\",\\n  \\"support-agent\\": \\"support_agent\\",\\n  timeline: \\"timeline\\",\\n  \\"trending-down\\": \\"trending_down\\",\\n  \\"trending-flat\\": \\"trending_flat\\",\\n  \\"trending-up\\": \\"trending_up\\",\\n  tune: \\"tune\\",\\n  undo: \\"undo\\",\\n  upload: \\"upload\\",\\n  water: \\"water\\",\\n  \\"water-alt\\": \\"water_alt\\",\\n  wifi: \\"wifi\\",\\n  \\"wifi-off\\": \\"wifi_off\\",\\n  windmill: \\"windmill\\",\\n  \\"zoom-in\\": \\"zoom_in\\",\\n  \\"zoom-out\\": \\"zoom_out\\",\\n}"},{"name":"TogglableIcons","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/icon/icon-map.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  \\"add-circle\\": [\\"add_circle_outlined\\", \\"add_circle_filled\\"],\\n  \\"admin-panel-settings\\": [\\"admin_panel_settings_outlined\\", \\"admin_panel_settings_filled\\"],\\n  analytics: [\\"analytics_outlined\\", \\"analytics_filled\\"],\\n  archive: [\\"archive_outlined\\", \\"archive_filled\\"],\\n  \\"arrow-circle-chevron-down\\": [\\"arrow_circle_chevron_down_outlined\\", \\"arrow_circle_chevron_down_filled\\"],\\n  \\"arrow-circle-chevron-left\\": [\\"arrow_circle_chevron_left_outlined\\", \\"arrow_circle_chevron_left_filled\\"],\\n  \\"arrow-circle-chevron-right\\": [\\"arrow_circle_chevron_right_outlined\\", \\"arrow_circle_chevron_right_filled\\"],\\n  \\"arrow-circle-chevron-up\\": [\\"arrow_circle_chevron_up_outlined\\", \\"arrow_circle_chevron_up_filled\\"],\\n  \\"arrow-circle-down\\": [\\"arrow_circle_down_outlined\\", \\"arrow_circle_down_filled\\"],\\n  \\"arrow-circle-left\\": [\\"arrow_circle_left_outlined\\", \\"arrow_circle_left_filled\\"],\\n  \\"arrow-circle-right\\": [\\"arrow_circle_right_outlined\\", \\"arrow_circle_right_filled\\"],\\n  \\"arrow-circle-up\\": [\\"arrow_circle_up_outlined\\", \\"arrow_circle_up_filled\\"],\\n  article: [\\"article_outlined\\", \\"article_filled\\"],\\n  \\"assignment-complete\\": [\\"assignment_complete_outlined\\", \\"assignment_complete_filled\\"],\\n  assignment: [\\"assignment_outlined\\", \\"assignment_filled\\"],\\n  \\"battery-alert\\": [\\"battery_alert_outlined\\", \\"battery_alert_filled\\"],\\n  \\"battery-charging-full\\": [\\"battery_charging_full_outlined\\", \\"battery_charging_full_filled\\"],\\n  \\"bolt-alt-circle\\": [\\"bolt_alt_circle_outlined\\", \\"bolt_alt_circle_filled\\"],\\n  \\"bolt-alt\\": [\\"bolt_alt_outlined\\", \\"bolt_alt_filled\\"],\\n  \\"bolt-circle\\": [\\"bolt_circle_outlined\\", \\"bolt_circle_filled\\"],\\n  bolt: [\\"bolt_outlined\\", \\"bolt_filled\\"],\\n  bookmark: [\\"bookmark_outlined\\", \\"bookmark_filled\\"],\\n  bookmarks: [\\"bookmarks_outlined\\", \\"bookmarks_filled\\"],\\n  build: [\\"build_outlined\\", \\"build_filled\\"],\\n  \\"calendar-available\\": [\\"calendar_available_outlined\\", \\"calendar_available_filled\\"],\\n  \\"calendar-busy\\": [\\"calendar_busy_outlined\\", \\"calendar_busy_filled\\"],\\n  \\"calendar-month\\": [\\"calendar_month_outlined\\", \\"calendar_month_filled\\"],\\n  \\"calendar-today\\": [\\"calendar_today_outlined\\", \\"calendar_today_filled\\"],\\n  call: [\\"call_outlined\\", \\"call_filled\\"],\\n  cancel: [\\"cancel_outlined\\", \\"cancel_filled\\"],\\n  category: [\\"category_outlined\\", \\"category_filled\\"],\\n  \\"chart-add\\": [\\"chart_add_outlined\\", \\"chart_add_filled\\"],\\n  \\"chart-area\\": [\\"chart_area_outlined\\", \\"chart_area_filled\\"],\\n  \\"chart-pie\\": [\\"chart_pie_outlined\\", \\"chart_pie_filled\\"],\\n  \\"chart-table\\": [\\"chart_table_outlined\\", \\"chart_table_filled\\"],\\n  \\"chat-alt\\": [\\"chat_alt_outlined\\", \\"chat_alt_filled\\"],\\n  \\"chat-alt-unread\\": [\\"chat_alt_unread_outlined\\", \\"chat_alt_unread_filled\\"],\\n  chat: [\\"chat_outlined\\", \\"chat_filled\\"],\\n  \\"chat-unread\\": [\\"chat_unread_outlined\\", \\"chat_unread_filled\\"],\\n  \\"check-circle\\": [\\"check_circle_outlined\\", \\"check_circle_filled\\"],\\n  checkbox: [\\"checkbox_outlined\\", \\"checkbox_filled\\"],\\n  \\"checkbox-indeterminate\\": [\\"checkbox_indeterminate_outlined\\", \\"checkbox_indeterminate_filled\\"],\\n  clock: [\\"clock_outlined\\", \\"clock_filled\\"],\\n  \\"cloud-download\\": [\\"cloud_download_outlined\\", \\"cloud_download_filled\\"],\\n  cloud: [\\"cloud_outlined\\", \\"cloud_filled\\"],\\n  \\"cloud-off\\": [\\"cloud_off_outlined\\", \\"cloud_off_filled\\"],\\n  \\"cloud-upload\\": [\\"cloud_upload_outlined\\", \\"cloud_upload_filled\\"],\\n  \\"comment-add\\": [\\"comment_add_outlined\\", \\"comment_add_filled\\"],\\n  comment: [\\"comment_outlined\\", \\"comment_filled\\"],\\n  copy: [\\"copy_outlined\\", \\"copy_filled\\"],\\n  dangerous: [\\"dangerous_outlined\\", \\"dangerous_filled\\"],\\n  dashboard: [\\"dashboard_outlined\\", \\"dashboard_filled\\"],\\n  database: [\\"database_outlined\\", \\"database_filled\\"],\\n  delete: [\\"delete_outlined\\", \\"delete_filled\\"],\\n  desktop: [\\"desktop_outlined\\", \\"desktop_filled\\"],\\n  devices: [\\"devices_outlined\\", \\"devices_filled\\"],\\n  draft: [\\"draft_outlined\\", \\"draft_filled\\"],\\n  eco: [\\"eco_outlined\\", \\"eco_filled\\"],\\n  edit: [\\"edit_outlined\\", \\"edit_filled\\"],\\n  \\"electric-meter\\": [\\"electric_meter_outlined\\", \\"electric_meter_filled\\"],\\n  error: [\\"error_outlined\\", \\"error_filled\\"],\\n  explore: [\\"explore_outlined\\", \\"explore_filled\\"],\\n  \\"explore-off\\": [\\"explore_off_outlined\\", \\"explore_off_filled\\"],\\n  \\"fast-forward\\": [\\"fast_forward_outlined\\", \\"fast_forward_filled\\"],\\n  \\"fast-rewind\\": [\\"fast_rewind_outlined\\", \\"fast_rewind_filled\\"],\\n  feedback: [\\"feedback_outlined\\", \\"feedback_filled\\"],\\n  \\"file-copy\\": [\\"file_copy_outlined\\", \\"file_copy_filled\\"],\\n  \\"file-download\\": [\\"file_download_outlined\\", \\"file_download_filled\\"],\\n  \\"file-upload\\": [\\"file_upload_outlined\\", \\"file_upload_filled\\"],\\n  \\"filter-alt\\": [\\"filter_alt_outlined\\", \\"filter_alt_filled\\"],\\n  \\"filter-alt-off\\": [\\"filter_alt_off_outlined\\", \\"filter_alt_off_filled\\"],\\n  fire: [\\"fire_outlined\\", \\"fire_filled\\"],\\n  \\"fit-screen\\": [\\"fit_screen_outlined\\", \\"fit_screen_filled\\"],\\n  flag: [\\"flag_outlined\\", \\"flag_filled\\"],\\n  flash: [\\"flash_outlined\\", \\"flash_filled\\"],\\n  \\"flash-off\\": [\\"flash_off_outlined\\", \\"flash_off_filled\\"],\\n  \\"folder-add\\": [\\"folder_add_outlined\\", \\"folder_add_filled\\"],\\n  folder: [\\"folder_outlined\\", \\"folder_filled\\"],\\n  \\"folder-move\\": [\\"folder_move_outlined\\", \\"folder_move_filled\\"],\\n  \\"folder-open\\": [\\"folder_open_outlined\\", \\"folder_open_filled\\"],\\n  \\"folder-shared\\": [\\"folder_shared_outlined\\", \\"folder_shared_filled\\"],\\n  forum: [\\"forum_outlined\\", \\"forum_filled\\"],\\n  \\"group-add\\": [\\"group_add_outlined\\", \\"group_add_filled\\"],\\n  group: [\\"group_outlined\\", \\"group_filled\\"],\\n  groups: [\\"groups_outlined\\", \\"groups_filled\\"],\\n  headphones: [\\"headphones_outlined\\", \\"headphones_filled\\"],\\n  heart: [\\"heart_outlined\\", \\"heart_filled\\"],\\n  help: [\\"help_outlined\\", \\"help_filled\\"],\\n  home: [\\"home_outlined\\", \\"home_filled\\"],\\n  hourglass: [\\"hourglass_outlined\\", \\"hourglass_filled\\"],\\n  \\"image-broken\\": [\\"image_broken_outlined\\", \\"image_broken_filled\\"],\\n  image: [\\"image_outlined\\", \\"image_filled\\"],\\n  \\"image-gallery\\": [\\"image_gallery_outlined\\", \\"image_gallery_filled\\"],\\n  inbox: [\\"inbox_outlined\\", \\"inbox_filled\\"],\\n  info: [\\"info_outlined\\", \\"info_filled\\"],\\n  keep: [\\"keep_outlined\\", \\"keep_filled\\"],\\n  \\"keep-off\\": [\\"keep_off_outlined\\", \\"keep_off_filled\\"],\\n  label: [\\"label_outlined\\", \\"label_filled\\"],\\n  laptop: [\\"laptop_outlined\\", \\"laptop_filled\\"],\\n  \\"left-panel-close\\": [\\"left_panel_close_outlined\\", \\"left_panel_close_filled\\"],\\n  \\"left-panel-open\\": [\\"left_panel_open_outlined\\", \\"left_panel_open_filled\\"],\\n  \\"light-off\\": [\\"light_off_outlined\\", \\"light_off_filled\\"],\\n  \\"lightbulb-alt\\": [\\"lightbulb_alt_outlined\\", \\"lightbulb_alt_filled\\"],\\n  \\"lightbulb-circle\\": [\\"lightbulb_circle_outlined\\", \\"lightbulb_circle_filled\\"],\\n  lightbulb: [\\"lightbulb_outlined\\", \\"lightbulb_filled\\"],\\n  \\"list-alt\\": [\\"list_alt_outlined\\", \\"list_alt_filled\\"],\\n  \\"location-me\\": [\\"location_me_outlined\\", \\"location_me_filled\\"],\\n  \\"location-off\\": [\\"location_off_outlined\\", \\"location_off_filled\\"],\\n  \\"location-on\\": [\\"location_on_outlined\\", \\"location_on_filled\\"],\\n  lock: [\\"lock_outlined\\", \\"lock_filled\\"],\\n  \\"lock-open\\": [\\"lock_open_outlined\\", \\"lock_open_filled\\"],\\n  \\"lock-open-right\\": [\\"lock_open_right_outlined\\", \\"lock_open_right_filled\\"],\\n  mail: [\\"mail_outlined\\", \\"mail_filled\\"],\\n  \\"mail-unread\\": [\\"mail_unread_outlined\\", \\"mail_unread_filled\\"],\\n  map: [\\"map_outlined\\", \\"map_filled\\"],\\n  mic: [\\"mic_outlined\\", \\"mic_filled\\"],\\n  \\"mic-off\\": [\\"mic_off_outlined\\", \\"mic_off_filled\\"],\\n  \\"mode-dark\\": [\\"mode_dark_outlined\\", \\"mode_dark_filled\\"],\\n  \\"mode-light\\": [\\"mode_light_outlined\\", \\"mode_light_filled\\"],\\n  notification: [\\"notification_outlined\\", \\"notification_filled\\"],\\n  \\"notification-important\\": [\\"notification_important_outlined\\", \\"notification_important_filled\\"],\\n  \\"notification-off\\": [\\"notification_off_outlined\\", \\"notification_off_filled\\"],\\n  \\"notification-unread\\": [\\"notification_unread_outlined\\", \\"notification_unread_filled\\"],\\n  palette: [\\"palette_outlined\\", \\"palette_filled\\"],\\n  \\"pause-circle\\": [\\"pause_circle_outlined\\", \\"pause_circle_filled\\"],\\n  pause: [\\"pause_outlined\\", \\"pause_filled\\"],\\n  \\"photo-camera\\": [\\"photo_camera_outlined\\", \\"photo_camera_filled\\"],\\n  \\"play-circle\\": [\\"play_circle_outlined\\", \\"play_circle_filled\\"],\\n  play: [\\"play_outlined\\", \\"play_filled\\"],\\n  power: [\\"power_outlined\\", \\"power_filled\\"],\\n  \\"power-off\\": [\\"power_off_outlined\\", \\"power_off_filled\\"],\\n  \\"power-plug-connect\\": [\\"power_plug_connect_outlined\\", \\"power_plug_connect_filled\\"],\\n  \\"power-settings-circle\\": [\\"power_settings_circle_outlined\\", \\"power_settings_circle_filled\\"],\\n  \\"power-solar\\": [\\"power_solar_outlined\\", \\"power_solar_filled\\"],\\n  \\"power-switch\\": [\\"power_switch_outlined\\", \\"power_switch_filled\\"],\\n  \\"power-wind\\": [\\"power_wind_outlined\\", \\"power_wind_filled\\"],\\n  print: [\\"print_outlined\\", \\"print_filled\\"],\\n  \\"right-panel-close\\": [\\"right_panel_close_outlined\\", \\"right_panel_close_filled\\"],\\n  \\"right-panel-open\\": [\\"right_panel_open_outlined\\", \\"right_panel_open_filled\\"],\\n  save: [\\"save_outlined\\", \\"save_filled\\"],\\n  send: [\\"send_outlined\\", \\"send_filled\\"],\\n  settings: [\\"settings_outlined\\", \\"settings_filled\\"],\\n  share: [\\"share_outlined\\", \\"share_filled\\"],\\n  \\"skip-next\\": [\\"skip_next_outlined\\", \\"skip_next_filled\\"],\\n  \\"skip-previous\\": [\\"skip_previous_outlined\\", \\"skip_previous_filled\\"],\\n  smartphone: [\\"smartphone_outlined\\", \\"smartphone_filled\\"],\\n  star: [\\"star_outlined\\", \\"star_filled\\"],\\n  \\"sticky-note\\": [\\"sticky_note_outlined\\", \\"sticky_note_filled\\"],\\n  \\"stop-circle\\": [\\"stop_circle_outlined\\", \\"stop_circle_filled\\"],\\n  stop: [\\"stop_outlined\\", \\"stop_filled\\"],\\n  subtitles: [\\"subtitles_outlined\\", \\"subtitles_filled\\"],\\n  \\"text-snippet\\": [\\"text_snippet_outlined\\", \\"text_snippet_filled\\"],\\n  \\"trash-restore\\": [\\"trash_restore_outlined\\", \\"trash_restore_filled\\"],\\n  unarchive: [\\"unarchive_outlined\\", \\"unarchive_filled\\"],\\n  \\"user-add\\": [\\"user_add_outlined\\", \\"user_add_filled\\"],\\n  \\"user-circle\\": [\\"user_circle_outlined\\", \\"user_circle_filled\\"],\\n  user: [\\"user_outlined\\", \\"user_filled\\"],\\n  \\"user-settings\\": [\\"user_settings_outlined\\", \\"user_settings_filled\\"],\\n  verified: [\\"verified_outlined\\", \\"verified_filled\\"],\\n  \\"video-camera\\": [\\"video_camera_outlined\\", \\"video_camera_filled\\"],\\n  \\"video-camera-off\\": [\\"video_camera_off_outlined\\", \\"video_camera_off_filled\\"],\\n  \\"video-gallery\\": [\\"video_gallery_outlined\\", \\"video_gallery_filled\\"],\\n  \\"view-agenda\\": [\\"view_agenda_outlined\\", \\"view_agenda_filled\\"],\\n  \\"view-column\\": [\\"view_column_outlined\\", \\"view_column_filled\\"],\\n  \\"view-grid\\": [\\"view_grid_outlined\\", \\"view_grid_filled\\"],\\n  \\"view-kanban\\": [\\"view_kanban_outlined\\", \\"view_kanban_filled\\"],\\n  \\"view-module\\": [\\"view_module_outlined\\", \\"view_module_filled\\"],\\n  \\"view-timeline\\": [\\"view_timeline_outlined\\", \\"view_timeline_filled\\"],\\n  \\"visibility-hide\\": [\\"visibility_hide_outlined\\", \\"visibility_hide_filled\\"],\\n  \\"visibility-show\\": [\\"visibility_show_outlined\\", \\"visibility_show_filled\\"],\\n  \\"volume-down\\": [\\"volume_down_outlined\\", \\"volume_down_filled\\"],\\n  \\"volume-mute\\": [\\"volume_mute_outlined\\", \\"volume_mute_filled\\"],\\n  \\"volume-off\\": [\\"volume_off_outlined\\", \\"volume_off_filled\\"],\\n  \\"volume-up\\": [\\"volume_up_outlined\\", \\"volume_up_filled\\"],\\n  warning: [\\"warning_outlined\\", \\"warning_filled\\"],\\n  waterdrop: [\\"waterdrop_outlined\\", \\"waterdrop_filled\\"],\\n}"}],"projects/ds-rte-lib/src/lib/components/segmented-control/segmented-control.component.ts":[{"name":"segmentClass","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/segmented-control/segmented-control.component.ts","deprecated":false,"deprecationMessage":"","type":"string","defaultValue":"\\"rte-segment\\""},{"name":"segmentSelector","ctype":"miscellaneous","subtype":"variable","file":"projects/ds-rte-lib/src/lib/components/segmented-control/segmented-control.component.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"`.${segmentClass}`"}]},"groupedFunctions":{"projects/ds-rte-lib/src/lib/components/icon/icon-map.ts":[{"name":"isValidIconName","file":"projects/ds-rte-lib/src/lib/components/icon/icon-map.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"iconName","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"boolean","jsdoctags":[{"name":"iconName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}]},"groupedEnumerations":{},"groupedTypeAliases":{"projects/ds-rte-lib/src/lib/components/icon/icon.service.ts":[{"name":"RegularIconIdKey","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"projects/ds-rte-lib/src/lib/components/icon/icon.service.ts","deprecated":false,"deprecationMessage":"","description":"","kind":199},{"name":"TogglableIconIdKey","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"projects/ds-rte-lib/src/lib/components/icon/icon.service.ts","deprecated":false,"deprecationMessage":"","description":"","kind":199}]}},"routes":{"name":"<root>","kind":"module","children":[]},"coverage":{"count":0,"status":"low","files":[{"filePath":"projects/ds-rte-lib/src/lib/components/badge/badge.component.ts","type":"component","linktype":"component","name":"BadgeComponent","coveragePercent":0,"coverageCount":"0/14","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/badge/badge.directive.ts","type":"directive","linktype":"directive","name":"BadgeDirective","coveragePercent":0,"coverageCount":"0/17","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/banner/banner.component.ts","type":"component","linktype":"component","name":"BannerComponent","coveragePercent":0,"coverageCount":"0/18","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/breadcrumbs/breadcrumbs.component.ts","type":"component","linktype":"component","name":"BreadcrumbsComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/button/button.component.ts","type":"component","linktype":"component","name":"ButtonComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/checkbox-group/checkbox-group.component.ts","type":"component","linktype":"component","name":"CheckboxGroupComponent","coveragePercent":0,"coverageCount":"0/13","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/checkbox/checkbox.component.ts","type":"component","linktype":"component","name":"CheckboxComponent","coveragePercent":0,"coverageCount":"0/13","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/chip/chip.component.ts","type":"component","linktype":"component","name":"ChipComponent","coveragePercent":0,"coverageCount":"0/15","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/divider/divider.component.ts","type":"component","linktype":"component","name":"DividerComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/dropdown/dropdown-item/dropdown-item.component.ts","type":"component","linktype":"component","name":"DropdownItemComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/dropdown/dropdown-item/dropdown-item.component.ts","type":"interface","linktype":"interface","name":"DropdownItemConfig","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/dropdown/dropdown-menu/dropdown-menu.component.ts","type":"component","linktype":"component","name":"DropdownMenuComponent","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/dropdown/dropdown-trigger/dropdown-trigger.directive.ts","type":"directive","linktype":"directive","name":"DropdownTriggerDirective","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/dropdown/dropdown.directive.ts","type":"directive","linktype":"directive","name":"DropdownDirective","coveragePercent":0,"coverageCount":"0/31","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/dropdown/dropdown.utils.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"focusChildDropdownFirstElement","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/dropdown/dropdown.utils.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"focusNextElement","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/dropdown/dropdown.utils.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"focusParentDropdownFirstElement","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/dropdown/dropdown.utils.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"focusPreviousElement","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/dropdown/dropdown.utils.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"getDropdownMenuItems","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/grid/col/col.directive.ts","type":"directive","linktype":"directive","name":"ColDirective","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/grid/grid.directive.ts","type":"directive","linktype":"directive","name":"GridDirective","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/icon-button-toggle/icon-button-toggle.component.ts","type":"component","linktype":"component","name":"IconButtonToggleComponent","coveragePercent":0,"coverageCount":"0/18","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/icon-button/icon-button.component.ts","type":"component","linktype":"component","name":"IconButtonComponent","coveragePercent":0,"coverageCount":"0/14","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/icon/icon-map.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"isValidIconName","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/icon/icon-map.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"RegularIcons","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/icon/icon-map.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"TogglableIcons","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/icon/icon.component.ts","type":"component","linktype":"component","name":"IconComponent","coveragePercent":0,"coverageCount":"0/14","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/icon/icon.service.ts","type":"injectable","linktype":"injectable","name":"IconService","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/icon/icon.service.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"RegularIconIdKey","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/icon/icon.service.ts","type":"type alias","linktype":"miscellaneous","linksubtype":"typealias","name":"TogglableIconIdKey","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/link/link.component.ts","type":"component","linktype":"component","name":"LinkComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/loader/loader.component.ts","type":"component","linktype":"component","name":"LoaderComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/popover/popover.component.ts","type":"component","linktype":"component","name":"PopoverComponent","coveragePercent":0,"coverageCount":"0/20","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/popover/popover.directive.ts","type":"directive","linktype":"directive","name":"PopoverDirective","coveragePercent":0,"coverageCount":"0/37","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/radio-button-group/radio-button-group.component.ts","type":"component","linktype":"component","name":"RadioButtonGroupComponent","coveragePercent":0,"coverageCount":"0/14","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/radio-button/radio-button.component.ts","type":"component","linktype":"component","name":"RadioButtonComponent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/segmented-control/segmented-control.component.ts","type":"component","linktype":"component","name":"SegmentedControlComponent","coveragePercent":0,"coverageCount":"0/24","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/segmented-control/segmented-control.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"segmentClass","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/segmented-control/segmented-control.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"segmentSelector","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/split-button/split-button.component.ts","type":"component","linktype":"component","name":"SplitButtonComponent","coveragePercent":0,"coverageCount":"0/16","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/switch/switch.component.ts","type":"component","linktype":"component","name":"SwitchComponent","coveragePercent":0,"coverageCount":"0/15","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/tab/tab-item/tab-item.component.ts","type":"component","linktype":"component","name":"TabItemComponent","coveragePercent":0,"coverageCount":"0/23","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/tab/tab.component.ts","type":"component","linktype":"component","name":"TabComponent","coveragePercent":0,"coverageCount":"0/50","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/tag/tag.component.ts","type":"component","linktype":"component","name":"TagComponent","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/text-input/text-input.component.ts","type":"component","linktype":"component","name":"TextInputComponent","coveragePercent":0,"coverageCount":"0/38","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/textarea/textarea.component.ts","type":"component","linktype":"component","name":"TextareaComponent","coveragePercent":0,"coverageCount":"0/30","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/tooltip/tooltip.component.ts","type":"component","linktype":"component","name":"TooltipComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/components/tooltip/tooltip.directive.ts","type":"directive","linktype":"directive","name":"TooltipDirective","coveragePercent":0,"coverageCount":"0/27","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/services/dropdown.service.ts","type":"injectable","linktype":"injectable","name":"DropdownService","coveragePercent":0,"coverageCount":"0/13","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/services/dropdown.service.ts","type":"interface","linktype":"interface","name":"DropdownState","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/services/dropdown.service.ts","type":"interface","linktype":"interface","name":"KeyboardHandlingOptions","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/ds-rte-lib/src/lib/services/overlay.service.ts","type":"injectable","linktype":"injectable","name":"OverlayService","coveragePercent":0,"coverageCount":"0/7","status":"low"}]}}');(0,angular.$)(documentation_namespaceObject);const preview={parameters:{controls:{matchers:{color:/(background|color)$/i,date:/Date$/i}}},decorators:[...[(0,dist.applicationConfig)({providers:[(0,core.importProvidersFrom)(http.q1)]})],(0,dist.componentWrapperDecorator)(story=>`<div style="padding: 20px; background-color: var(--background-default); width: auto; height: 100%;">${story}</div>`)]};external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel().on("THEME_CHANGED",theme=>{document.querySelector("html")?.setAttribute("data-mode",theme.theme),document.querySelector("html")?.setAttribute("data-theme",theme.color)}),document.querySelector("html")?.setAttribute("data-theme","bleu_iceberg"),document.querySelector("html")?.setAttribute("data-mode","light");const _storybook_preview=preview},"./projects/ds-rte-lib/src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/projects\\/ds-rte-lib\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./lib/components/badge/stories/badge.mdx":["./projects/ds-rte-lib/src/lib/components/badge/stories/badge.mdx",29887,61208,52767],"./lib/components/chip/stories/chip.mdx":["./projects/ds-rte-lib/src/lib/components/chip/stories/chip.mdx",29887,61208,94829],"./lib/components/divider/stories/divider.mdx":["./projects/ds-rte-lib/src/lib/components/divider/stories/divider.mdx",29887,61208,60547],"./lib/components/loader/stories/loader.mdx":["./projects/ds-rte-lib/src/lib/components/loader/stories/loader.mdx",29887,61208,33651],"./lib/components/segmented-control/stories/segmented-control.mdx":["./projects/ds-rte-lib/src/lib/components/segmented-control/stories/segmented-control.mdx",29887,61208,49931],"./lib/components/switch/stories/switch.mdx":["./projects/ds-rte-lib/src/lib/components/switch/stories/switch.mdx",29887,61208,99409],"./lib/components/tag/stories/tag.mdx":["./projects/ds-rte-lib/src/lib/components/tag/stories/tag.mdx",29887,61208,54263],"./lib/components/text-input/stories/text-input.mdx":["./projects/ds-rte-lib/src/lib/components/text-input/stories/text-input.mdx",29887,61208,55821],"./lib/components/textarea/stories/textarea.mdx":["./projects/ds-rte-lib/src/lib/components/textarea/stories/textarea.mdx",29887,61208,62145]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then(()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e});var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then(()=>__webpack_require__(id))}webpackAsyncContext.keys=()=>Object.keys(map),webpackAsyncContext.id="./projects/ds-rte-lib/src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/projects\\/ds-rte-lib\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$",module.exports=webpackAsyncContext},"./projects/ds-rte-lib/src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/projects\\/ds-rte-lib\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cmjs%7Cts%7Ctsx))$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./lib/components/badge/stories/badge.directive.stories":["./projects/ds-rte-lib/src/lib/components/badge/stories/badge.directive.stories.ts",19514,49517],"./lib/components/badge/stories/badge.directive.stories.ts":["./projects/ds-rte-lib/src/lib/components/badge/stories/badge.directive.stories.ts",19514,49517],"./lib/components/banner/stories/banner.component.stories":["./projects/ds-rte-lib/src/lib/components/banner/stories/banner.component.stories.ts",19514,62177,37105],"./lib/components/banner/stories/banner.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/banner/stories/banner.component.stories.ts",19514,62177,37105],"./lib/components/breadcrumbs/breadcrumbs.component.stories":["./projects/ds-rte-lib/src/lib/components/breadcrumbs/breadcrumbs.component.stories.ts",19514,62177,28738,27471],"./lib/components/breadcrumbs/breadcrumbs.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/breadcrumbs/breadcrumbs.component.stories.ts",19514,62177,28738,27471],"./lib/components/button/stories/button.component.stories":["./projects/ds-rte-lib/src/lib/components/button/stories/button.component.stories.ts",28289],"./lib/components/button/stories/button.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/button/stories/button.component.stories.ts",28289],"./lib/components/checkbox-group/checkbox-group.component.stories":["./projects/ds-rte-lib/src/lib/components/checkbox-group/checkbox-group.component.stories.ts",19514,26282,43171],"./lib/components/checkbox-group/checkbox-group.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/checkbox-group/checkbox-group.component.stories.ts",19514,26282,43171],"./lib/components/checkbox/checkbox.component.stories":["./projects/ds-rte-lib/src/lib/components/checkbox/checkbox.component.stories.ts",19514,26282,55667],"./lib/components/checkbox/checkbox.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/checkbox/checkbox.component.stories.ts",19514,26282,55667],"./lib/components/chip/stories/chip.component.stories":["./projects/ds-rte-lib/src/lib/components/chip/stories/chip.component.stories.ts",19514,62177,99774,94885],"./lib/components/chip/stories/chip.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/chip/stories/chip.component.stories.ts",19514,62177,99774,94885],"./lib/components/divider/stories/divider.component.stories":["./projects/ds-rte-lib/src/lib/components/divider/stories/divider.component.stories.ts",14271],"./lib/components/divider/stories/divider.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/divider/stories/divider.component.stories.ts",14271],"./lib/components/dropdown/dropdown.directive.stories":["./projects/ds-rte-lib/src/lib/components/dropdown/dropdown.directive.stories.ts",19514,28738,57717],"./lib/components/dropdown/dropdown.directive.stories.ts":["./projects/ds-rte-lib/src/lib/components/dropdown/dropdown.directive.stories.ts",19514,28738,57717],"./lib/components/grid/grid.directive.stories":["./projects/ds-rte-lib/src/lib/components/grid/grid.directive.stories.ts",74683],"./lib/components/grid/grid.directive.stories.ts":["./projects/ds-rte-lib/src/lib/components/grid/grid.directive.stories.ts",74683],"./lib/components/icon-button-toggle/icon-button-toggle.stories":["./projects/ds-rte-lib/src/lib/components/icon-button-toggle/icon-button-toggle.stories.ts",19514,62177,28453],"./lib/components/icon-button-toggle/icon-button-toggle.stories.ts":["./projects/ds-rte-lib/src/lib/components/icon-button-toggle/icon-button-toggle.stories.ts",19514,62177,28453],"./lib/components/icon-button/icon-button.stories":["./projects/ds-rte-lib/src/lib/components/icon-button/icon-button.stories.ts",19514,62177,82929],"./lib/components/icon-button/icon-button.stories.ts":["./projects/ds-rte-lib/src/lib/components/icon-button/icon-button.stories.ts",19514,62177,82929],"./lib/components/icon/icon.stories":["./projects/ds-rte-lib/src/lib/components/icon/icon.stories.ts",19514,89097],"./lib/components/icon/icon.stories.ts":["./projects/ds-rte-lib/src/lib/components/icon/icon.stories.ts",19514,89097],"./lib/components/link/link.component.stories":["./projects/ds-rte-lib/src/lib/components/link/link.component.stories.ts",19514,59729],"./lib/components/link/link.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/link/link.component.stories.ts",19514,59729],"./lib/components/loader/stories/loader.component.stories":["./projects/ds-rte-lib/src/lib/components/loader/stories/loader.component.stories.ts",58639],"./lib/components/loader/stories/loader.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/loader/stories/loader.component.stories.ts",58639],"./lib/components/popover/stories/popover.directive.stories":["./projects/ds-rte-lib/src/lib/components/popover/stories/popover.directive.stories.ts",16905],"./lib/components/popover/stories/popover.directive.stories.ts":["./projects/ds-rte-lib/src/lib/components/popover/stories/popover.directive.stories.ts",16905],"./lib/components/radio-button-group/radio-button-group.component.stories":["./projects/ds-rte-lib/src/lib/components/radio-button-group/radio-button-group.component.stories.ts",35489,42313],"./lib/components/radio-button-group/radio-button-group.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/radio-button-group/radio-button-group.component.stories.ts",35489,42313],"./lib/components/radio-button/radio-button.component.stories":["./projects/ds-rte-lib/src/lib/components/radio-button/radio-button.component.stories.ts",35489,82385],"./lib/components/radio-button/radio-button.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/radio-button/radio-button.component.stories.ts",35489,82385],"./lib/components/segmented-control/stories/segmented-control.component.stories":["./projects/ds-rte-lib/src/lib/components/segmented-control/stories/segmented-control.component.stories.ts",19514,55719],"./lib/components/segmented-control/stories/segmented-control.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/segmented-control/stories/segmented-control.component.stories.ts",19514,55719],"./lib/components/split-button/split-button.component.stories":["./projects/ds-rte-lib/src/lib/components/split-button/split-button.component.stories.ts",19514,60995],"./lib/components/split-button/split-button.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/split-button/split-button.component.stories.ts",19514,60995],"./lib/components/switch/stories/switch.component.stories":["./projects/ds-rte-lib/src/lib/components/switch/stories/switch.component.stories.ts",19514,78225],"./lib/components/switch/stories/switch.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/switch/stories/switch.component.stories.ts",19514,78225],"./lib/components/tab/stories/tab.component.stories":["./projects/ds-rte-lib/src/lib/components/tab/stories/tab.component.stories.ts",19514,62177,28738,40855],"./lib/components/tab/stories/tab.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/tab/stories/tab.component.stories.ts",19514,62177,28738,40855],"./lib/components/tag/stories/tag.stories":["./projects/ds-rte-lib/src/lib/components/tag/stories/tag.stories.ts",19514,5921],"./lib/components/tag/stories/tag.stories.ts":["./projects/ds-rte-lib/src/lib/components/tag/stories/tag.stories.ts",19514,5921],"./lib/components/text-input/stories/text-input.component.stories":["./projects/ds-rte-lib/src/lib/components/text-input/stories/text-input.component.stories.ts",19514,62177,99774,8677],"./lib/components/text-input/stories/text-input.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/text-input/stories/text-input.component.stories.ts",19514,62177,99774,8677],"./lib/components/textarea/stories/textarea.component.stories":["./projects/ds-rte-lib/src/lib/components/textarea/stories/textarea.component.stories.ts",19514,96179,22785],"./lib/components/textarea/stories/textarea.component.stories.ts":["./projects/ds-rte-lib/src/lib/components/textarea/stories/textarea.component.stories.ts",19514,96179,22785],"./lib/components/tooltip/tooltip.directive.stories":["./projects/ds-rte-lib/src/lib/components/tooltip/tooltip.directive.stories.ts",49481],"./lib/components/tooltip/tooltip.directive.stories.ts":["./projects/ds-rte-lib/src/lib/components/tooltip/tooltip.directive.stories.ts",49481]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then(()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e});var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then(()=>__webpack_require__(id))}webpackAsyncContext.keys=()=>Object.keys(map),webpackAsyncContext.id="./projects/ds-rte-lib/src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/projects\\/ds-rte-lib\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cmjs%7Cts%7Ctsx))$",module.exports=webpackAsyncContext},"./storybook-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var external_STORYBOOK_MODULE_CHANNELS_=__webpack_require__("storybook/internal/channels"),csf=__webpack_require__("../../node_modules/@storybook/core/dist/csf/index.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function _regeneratorValues(e){if(null!=e){var t=e["function"==typeof Symbol&&Symbol.iterator||"@@iterator"],r=0;if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length))return{next:function next(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}}}throw new TypeError(_typeof(e)+" is not iterable")}function _regenerator(){var e,t,r="function"==typeof Symbol?Symbol:{},n=r.iterator||"@@iterator",o=r.toStringTag||"@@toStringTag";function i(r,n,o,i){var c=n&&n.prototype instanceof Generator?n:Generator,u=Object.create(c.prototype);return _regeneratorDefine2(u,"_invoke",function(r,n,o){var i,c,u,f=0,p=o||[],y=!1,G={p:0,n:0,v:e,a:d,f:d.bind(e,4),d:function d(t,r){return i=t,c=0,u=e,G.n=r,a}};function d(r,n){for(c=r,u=n,t=0;!y&&f&&!o&&t<p.length;t++){var o,i=p[t],d=G.p,l=i[2];r>3?(o=l===n)&&(u=i[(c=i[4])?5:(c=3,3)],i[4]=i[5]=e):i[0]<=d&&((o=r<2&&d<i[1])?(c=0,G.v=n,G.n=i[1]):d<l&&(o=r<3||i[0]>n||n>l)&&(i[4]=r,i[5]=n,G.n=l,c=0))}if(o||r>1)return a;throw y=!0,n}return function(o,p,l){if(f>1)throw TypeError("Generator is already running");for(y&&1===p&&d(p,l),c=p,u=l;(t=c<2?e:u)||!y;){i||(c?c<3?(c>1&&(G.n=-1),d(c,u)):G.n=u:G.v=u);try{if(f=2,i){if(c||(o="next"),t=i[o]){if(!(t=t.call(i,u)))throw TypeError("iterator result is not an object");if(!t.done)return t;u=t.value,c<2&&(c=0)}else 1===c&&(t=i.return)&&t.call(i),c<2&&(u=TypeError("The iterator does not provide a '"+o+"' method"),c=1);i=e}else if((t=(y=G.n<0)?u:r.call(n,G))!==a)break}catch(t){i=e,c=1,u=t}finally{f=1}}return{value:t,done:y}}}(r,o,i),!0),u}var a={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}t=Object.getPrototypeOf;var c=[][n]?t(t([][n]())):(_regeneratorDefine2(t={},n,function(){return this}),t),u=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(c);function f(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,GeneratorFunctionPrototype):(e.__proto__=GeneratorFunctionPrototype,_regeneratorDefine2(e,o,"GeneratorFunction")),e.prototype=Object.create(u),e}return GeneratorFunction.prototype=GeneratorFunctionPrototype,_regeneratorDefine2(u,"constructor",GeneratorFunctionPrototype),_regeneratorDefine2(GeneratorFunctionPrototype,"constructor",GeneratorFunction),GeneratorFunction.displayName="GeneratorFunction",_regeneratorDefine2(GeneratorFunctionPrototype,o,"GeneratorFunction"),_regeneratorDefine2(u),_regeneratorDefine2(u,o,"Generator"),_regeneratorDefine2(u,n,function(){return this}),_regeneratorDefine2(u,"toString",function(){return"[object Generator]"}),(_regenerator=function _regenerator(){return{w:i,m:f}})()}function _regeneratorDefine2(e,r,n,t){var i=Object.defineProperty;try{i({},"",{})}catch(e){i=0}_regeneratorDefine2=function _regeneratorDefine(e,r,n,t){function o(r,n){_regeneratorDefine2(e,r,function(e){return this._invoke(r,n,e)})}r?i?i(e,r,{value:n,enumerable:!t,configurable:!t,writable:!t}):e[r]=n:(o("next",0),o("throw",1),o("return",2))},_regeneratorDefine2(e,r,n,t)}function asyncGeneratorStep(n,t,e,r,o,a,c){try{var i=n[a](c),u=i.value}catch(n){return void e(n)}i.done?t(u):Promise.resolve(u).then(r,o)}function _asyncToGenerator(n){return function(){var t=this,e=arguments;return new Promise(function(r,o){var a=n.apply(t,e);function _next(n){asyncGeneratorStep(a,r,o,_next,_throw,"next",n)}function _throw(n){asyncGeneratorStep(a,r,o,_next,_throw,"throw",n)}_next(void 0)})}}var pipeline=function pipeline(x){return x()},importers=[function(){var _ref=_asyncToGenerator(_regenerator().m(function _callee(path){var pathRemainder;return _regenerator().w(function(_context){for(;;)switch(_context.n){case 0:if(/^\.[\\/](?:projects\/ds-rte-lib\/src(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.mdx)$/.exec(path)){_context.n=1;break}return _context.a(2);case 1:return pathRemainder=path.substring(26),_context.a(2,__webpack_require__("./projects/ds-rte-lib/src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/projects\\/ds-rte-lib\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$")("./"+pathRemainder))}},_callee)}));return function(_x){return _ref.apply(this,arguments)}}(),function(){var _ref2=_asyncToGenerator(_regenerator().m(function _callee2(path){var pathRemainder;return _regenerator().w(function(_context2){for(;;)switch(_context2.n){case 0:if(/^\.[\\/](?:projects\/ds-rte-lib\/src(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.stories\.(js|jsx|mjs|ts|tsx))$/.exec(path)){_context2.n=1;break}return _context2.a(2);case 1:return pathRemainder=path.substring(26),_context2.a(2,__webpack_require__("./projects/ds-rte-lib/src lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/projects\\/ds-rte-lib\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cmjs%7Cts%7Ctsx))$")("./"+pathRemainder))}},_callee2)}));return function(_x2){return _ref2.apply(this,arguments)}}()];function _importFn(){return(_importFn=_asyncToGenerator(_regenerator().m(function _callee3(path){var _loop,_ret,i;return _regenerator().w(function(_context4){for(;;)switch(_context4.n){case 0:_loop=_regenerator().m(function _loop(i){var moduleExports;return _regenerator().w(function(_context3){for(;;)switch(_context3.n){case 0:return _context3.n=1,pipeline(function(){return importers[i](path)});case 1:if(!(moduleExports=_context3.v)){_context3.n=2;break}return _context3.a(2,{v:moduleExports});case 2:return _context3.a(2)}},_loop)}),i=0;case 1:if(!(i<importers.length)){_context4.n=4;break}return _context4.d(_regeneratorValues(_loop(i)),2);case 2:if(!(_ret=_context4.v)){_context4.n=3;break}return _context4.a(2,_ret.v);case 3:i++,_context4.n=1;break;case 4:return _context4.a(2)}},_callee3)}))).apply(this,arguments)}var channel=(0,external_STORYBOOK_MODULE_CHANNELS_.createBrowserChannel)({page:"preview"});external_STORYBOOK_MODULE_PREVIEW_API_.addons.setChannel(channel),"DEVELOPMENT"===external_STORYBOOK_MODULE_GLOBAL_.global.CONFIG_TYPE&&(window.__STORYBOOK_SERVER_CHANNEL__=channel);var preview=new external_STORYBOOK_MODULE_PREVIEW_API_.PreviewWeb(function importFn(_x3){return _importFn.apply(this,arguments)},function getProjectAnnotations(){var _previewAnnotations,previewAnnotations=[__webpack_require__("./node_modules/@storybook/angular/dist/client/preview-prod.js"),__webpack_require__("./node_modules/@storybook/angular/dist/client/docs/config.js"),__webpack_require__("./node_modules/@storybook/angular/dist/client/config.js"),__webpack_require__("../../node_modules/@storybook/addon-essentials/dist/actions/preview.mjs"),__webpack_require__("../../node_modules/@storybook/addon-essentials/dist/docs/preview.mjs"),__webpack_require__("../../node_modules/@storybook/addon-essentials/dist/backgrounds/preview.mjs"),__webpack_require__("../../node_modules/@storybook/addon-essentials/dist/viewport/preview.mjs"),__webpack_require__("../../node_modules/@storybook/addon-essentials/dist/measure/preview.mjs"),__webpack_require__("../../node_modules/@storybook/addon-essentials/dist/outline/preview.mjs"),__webpack_require__("../../node_modules/@storybook/addon-essentials/dist/highlight/preview.mjs"),__webpack_require__("../../node_modules/@storybook/addon-interactions/preview.js"),__webpack_require__("../../node_modules/@storybook/addon-a11y/preview.js"),__webpack_require__("./.storybook/preview.ts")],userPreview=null===(_previewAnnotations=previewAnnotations[previewAnnotations.length-1])||void 0===_previewAnnotations?void 0:_previewAnnotations.default;return(0,csf.bU)(userPreview)?userPreview.composed:(0,external_STORYBOOK_MODULE_PREVIEW_API_.composeConfigs)(previewAnnotations)});window.__STORYBOOK_PREVIEW__=preview,window.__STORYBOOK_STORY_STORE__=preview.storyStore,window.__STORYBOOK_ADDONS_CHANNEL__=channel},"@storybook/global":module=>{"use strict";module.exports=__STORYBOOK_MODULE_GLOBAL__},"storybook/internal/channels":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CHANNELS__},"storybook/internal/client-logger":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CLIENT_LOGGER__},"storybook/internal/core-events":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CORE_EVENTS__},"storybook/internal/preview-api":module=>{"use strict";module.exports=__STORYBOOK_MODULE_PREVIEW_API__},"storybook/internal/preview-errors":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS__}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[77507],()=>(__webpack_exec__("../../node_modules/@angular/compiler/fesm2022/compiler.mjs"),__webpack_exec__("../../node_modules/zone.js/fesm2015/zone.js"),__webpack_exec__("./storybook-config-entry.js"),__webpack_exec__("../core/design-tokens/main.scss?ngGlobalStyle"),__webpack_exec__("./.storybook/preview.scss?ngGlobalStyle"),__webpack_exec__("./.storybook/main.scss?ngGlobalStyle")));__webpack_require__.O()}]);